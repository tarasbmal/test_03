<?xml version="1.0" encoding="UTF-8"?>
<!-- xslt для рынка СПФИ -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ms="http://www.moex.com/spfi-1" xmlns:fpml="http://www.fpml.org/FpML-5/confirmation" xmlns:lt="http://www.moex.com/spfi/lookup-table" version="1.0">
	<xsl:output method="html" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<!-- \\\ Определяем формат чисел \\\ -->
	<xsl:decimal-format name="rNumbersFormat" grouping-separator=" " decimal-separator=","/>
	<!--  -->
	<!-- \\\ Параметры \\\ -->
	<xsl:param name="check"/>
	<!-- Разметка -->
	<xsl:param name="mark">0</xsl:param>
	<!-- Сортировка -->
	<xsl:param name="sort">id</xsl:param>
	<xsl:param name="xslt" select="ms:moexSpfiReport/@xslt | ms:moexSpfiInsideReport/@xslt "/>
	<xsl:param name="lang" select="document('spfi-xslt-settings.xml')/spfiXsltSettings/settingsLang"/>
	<xsl:param name="settingsDetails" select="document('spfi-xslt-settings.xml')/spfiXsltSettings/settingsDetails"/>
	<xsl:param name="settingsVmTable" select="document('spfi-xslt-settings.xml')/spfiXsltSettings/settingsVmTable"/>
	<xsl:param name="nccbAccount" select="document('spfi-xslt-settings.xml')/spfiXsltSettings/nccbAccount"/>
	<xsl:param name="counterpartyForSecondTrade" select="document('spfi-xslt-settings.xml')/spfiXsltSettings/counterpartyForSecondTrade"/>
	<xsl:param name="npvSum">1</xsl:param>
	<!-- \\\ Переменные \\\ -->
	<xsl:variable name="XsltVersion">1.4.9 kzt<!-- Версия xslt -->
	</xsl:variable>
	<xsl:param name="ReportType" select="/ms:moexSpfiReport/@type"/>
	<xsl:variable name="ErrorText">
		<!-- Текст ошибки -->
		<xsl:if test="$lang = 'ru'">___¯\_(ツ)_/¯___ КАЖЕТСЯ, ЧТО-ТО ПОШЛО НЕ ТАК ___ СВЯЖИТЕСЬ С НАМИ ПО АДРЕСУ ___otc@moex.com___ И МЫ БЫСТРО ВСЁ ПОПРАВИМ ___¯\_(ツ)_/¯___</xsl:if>
		<xsl:if test="$lang = 'en'">___¯\_(ツ)_/¯___ SORRY, SOMETHING WENT WRONG ___ PLEASE CONTACT US AT ___otc@moex.com___ AND WE WILL FIX IT AS SOON AS WE CAN ___¯\_(ツ)_/¯___</xsl:if>
	</xsl:variable>
	<xsl:variable name="Today" select="/ms:moexSpfiReport/ms:header/ms:clearingDate"/>
	<xsl:variable name="Today2" select="translate( $Today , '-' , '' )"/>
	<xsl:variable name="Self" select="/ms:moexSpfiReport/ms:header/ms:sendTo | /ms:moexSpfiInsideReport/ms:header/ms:firmId"/>
	<xsl:variable name="Fixing-td" select="/ms:moexSpfiReport/ms:fpml/fpml:market/fpml:fxCurveValuation/fpml:spotRate/fpml:assetQuote/fpml:quote/fpml:value"/>
	<xsl:variable name="Fixing-td-usd" select="key( 'Fixing-usd' , $Today )"/>
	<xsl:variable name="Fixing-td-eur" select="key( 'Fixing-eur' , $Today )"/>
	<xsl:variable name="Fixing-td-chf" select="key( 'Fixing-chf' , $Today )"/>
	<xsl:variable name="Fixing-td-cny" select="key( 'Fixing-cny' , $Today )"/>
	<xsl:variable name="Fixing-td-eurusd" select="key( 'Fixing-eurusd' , $Today )"/>
	<xsl:variable name="Central-td-usd" select="key( 'Central-usd' , $Today )"/>
	<xsl:variable name="Central-td-eur" select="key( 'Central-eur' , $Today )"/>
	<xsl:variable name="Central-td-chf" select="key( 'Central-chf' , $Today )"/>
	<xsl:variable name="Central-td-cny" select="key( 'Central-cny' , $Today )"/>
	<xsl:variable name="Central-td-kzt" select="key( 'Central-kzt' , $Today )"/>
	<xsl:variable name="fx-risk-usd" select="/ms:moexSpfiReport/ms:riskParameters/ms:risk[ @id = 'RP_FXRATE' ][ ms:riskBase = 'USD-RUB-FX' ]/ms:riskCurve/ms:riskPoint/ms:riskRate"/>
	<xsl:variable name="fx-risk-eur" select="/ms:moexSpfiReport/ms:riskParameters/ms:risk[ @id = 'RP_FXRATE' ][ ms:riskBase = 'EUR-RUB-FX' ]/ms:riskCurve/ms:riskPoint/ms:riskRate"/>
	<xsl:variable name="fx-risk-chf" select="/ms:moexSpfiReport/ms:riskParameters/ms:risk[ @id = 'RP_FXRATE' ][ ms:riskBase = 'CHF-RUB-FX' ]/ms:riskCurve/ms:riskPoint/ms:riskRate"/>
	<!--  -->
	<xsl:variable name="Central-max-dt" select="substring-before( ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXCENTRALUSDRUB' ]/fpml:quote/fpml:time[not(../fpml:time &gt; .)][1] , 'T' )"/>
	<!--  -->
	<xsl:variable name="TRADES_default" select="/ms:moexSpfiReport/ms:fpml/ms:trade[ not( fpml:bulletPayment ) ] | /ms:moexSpfiInsideReport/ms:fpml/ms:trade[ not( fpml:bulletPayment ) ]"/>
	<xsl:variable name="TRADES_amendment" select="/ms:moexSpfiReport/ms:fpml/ms:amendment/ms:trade | /ms:moexSpfiInsideReport/ms:fpml/ms:amendment/ms:trade"/>
	<xsl:variable name="TRADES_termination" select="/ms:moexSpfiReport/ms:fpml/fpml:termination/fpml:originalTrade | /ms:moexSpfiInsideReport/ms:fpml/fpml:termination/fpml:originalTrade"/>
	<xsl:variable name="TRADES" select="$TRADES_default | $TRADES_amendment | $TRADES_termination"/>
	<xsl:variable name="Num-trades" select="count($TRADES )"/>
	<xsl:variable name="BULLETS" select="/ms:moexSpfiReport/ms:fpml/ms:trade[ fpml:bulletPayment ]"/>
	<xsl:variable name="ClearingSessionNo" select="/ms:moexSpfiReport/ms:header/ms:clearingSessionNo"/>
	<xsl:variable name="isReportDeals">
		<xsl:if test="ms:moexSpfiInsideReport">True</xsl:if>
		<xsl:if test="ms:moexSpfiReport">False</xsl:if>
	</xsl:variable>
	<!--  -->
	<!-- \\\ Keys \\\ -->
	<xsl:key name="Party" match="ms:moexSpfiReport/ms:fpml/fpml:party/fpml:partyName | ms:moexSpfiInsideReport/ms:fpml/fpml:party/fpml:partyName[@type = 'short']" use="parent::fpml:party/@id"/>
	<xsl:key name="Fixing-usd" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXFIXUSDRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Fixing-eur" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXFIXEURRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Fixing-chf" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXFIXCHFRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Fixing-cny" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXFIXCNYRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Fixing-eurusd" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXFIXEURUSD' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<!--  -->
	<xsl:key name="Fixing-all" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ starts-with(fpml:objectReference/@href, 'MOEXFIX') ]/fpml:quote/fpml:value" use="concat(substring-after(ancestor::fpml:assetQuote/fpml:objectReference/@href, 'MOEXFIX' ), '_', substring-before( parent::fpml:quote/fpml:time , 'T' ))"/>
	<!--  -->
	<!-- \\\Central Rates\\\-->
	<xsl:key name="Central-usd" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXCENTRALUSDRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Central-eur" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXCENTRALEURRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Central-chf" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXCENTRALCHFRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Central-cny" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXCENTRALCNYRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<xsl:key name="Central-kzt" match="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = 'MOEXCENTRALKZTRUB' ]/fpml:quote/fpml:value" use="substring-before( parent::fpml:quote/fpml:time , 'T' )"/>
	<!--  -->
	<xsl:key name="EndDate" match="ms:moexSpfiReport/ms:fpml//fpml:fxSingleLeg/fpml:valueDate | ms:moexSpfiReport/ms:fpml//fpml:fxSwap/fpml:farLeg/fpml:valueDate | ms:moexSpfiReport/ms:fpml//fpml:swap/fpml:swapStream/fpml:cashflows/fpml:paymentCalculationPeriod[ last() ]/fpml:adjustedPaymentDate | ms:moexSpfiReport/ms:fpml//fpml:fxOption/fpml:europeanExercise/fpml:expiryDate" use="ancestor::ms:trade/@id | ancestor::ms:originalTrade/@id"/>
	<xsl:key name="dual-partyIDs" match="/ms:moexSpfiReport/ms:fpml/fpml:party" use="@id"/>
	<!-- <xsl:key name="Rate"/> -->
	<!--  -->
	<!-- \\\ Шаблоны \\\ -->
	<xsl:template match="/">
		<xsl:if test="$check = 'all'">
			<xsl:call-template name="update"/>
			<xsl:call-template name="ver.1.4.3"/>
			<xsl:call-template name="ver.1.4.5"/>
			<xsl:call-template name="ver.1.4.9"/>
		</xsl:if>
		<xsl:choose>
			<xsl:when test="$xslt = '1.4.3'">
				<xsl:call-template name="ver.1.4.3"/>
			</xsl:when>
			<xsl:when test="$xslt = '1.4.4'">
				<xsl:call-template name="ver.1.4.5"/>
			</xsl:when>
			<xsl:when test="$xslt = '1.4.5'">
				<xsl:call-template name="ver.1.4.5"/>
			</xsl:when>
			<xsl:when test="$xslt = '1.4.6'">
				<xsl:call-template name="ver.1.4.9"/>
			</xsl:when>
			<xsl:when test="$xslt = '1.4.7'">
				<xsl:call-template name="ver.1.4.9"/>
			</xsl:when>
			<xsl:when test="$xslt = '1.4.8'">
				<xsl:call-template name="ver.1.4.9"/>
			</xsl:when>
			<xsl:when test="$xslt = '1.4.9'">
				<xsl:call-template name="ver.1.4.9"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="update"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<!--  -->
	<xsl:template name="update">
		<html>
			<xsl:call-template name="HEAD"/>
			<body>
				<div class="update">
					<xsl:if test="$lang = 'ru'">
						<p class="bold">Для просмотра данного отчета необходимо обновить xslt-файл.</p>
						<p>Последняя версия файла всегда доступна по адресу <a href="ftp://ftp.moex.com/pub/Reports/SPFI/XSLT">ftp://ftp.moex.com/pub/Reports/SPFI/XSLT</a>.</p>
						<p>Скачайте файл с именем <span class="bold">spfi-xslt.xsl</span> и замените им старую версию, которая расположена в папке <span class="bold">C:\MICEX\XSLT</span>.</p>
						<p>Файл после скачивания, скорее всего, будет заблокирован Windows. Для снятия блокировки, откройте свойства файла -&gt; вкладка "Общие". Нажмите кнопку "Разблокировать", которая находится внизу, рядом с сообщением о блокировке.</p>
					</xsl:if>
					<xsl:if test="$lang = 'en'">
						<p class="bold">You need update xslt-file to view this report.</p>
						<p>Last version of xslt-file always available at <a href="ftp://ftp.moex.com/pub/Reports/SPFI/XSLT">ftp://ftp.moex.com/pub/Reports/SPFI/XSLT</a>.</p>
						<p>Download file <span class="bold">spfi-xslt.xsl</span> and save it to <span class="bold">C:\MICEX\XSLT</span>.</p>
						<p>New file may be blocked by Windows. To unblock it, open file properties, choose General tab and click "Unblock" button near security message.</p>
					</xsl:if>
				</div>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="ver.1.4.3">
		<html>
			<xsl:call-template name="HEAD"/>
			<body>
				<xsl:call-template name="PRC_NM-check"/>
				<!-- <xsl:call-template name="M-START-check"/> -->
				<xsl:call-template name="Header"/>
				<xsl:call-template name="p-codes"/>
				<xsl:apply-templates select="ms:moexSpfiReport/ms:infoMessage[ lang( $lang ) ]"/>
				<xsl:call-template name="Menu"/>
				<xsl:apply-templates select="ms:moexSpfiReport/ms:initialMargin" mode="v143"/>
				<xsl:call-template name="Trade-list"/>
				<xsl:call-template name="npv-sum"/>
				<xsl:call-template name="Trades"/>
				<xsl:call-template name="Party"/>
				<xsl:apply-templates select="ms:moexSpfiReport/ms:guaranteeFund"/>
				<xsl:call-template name="Market"/>
				<xsl:call-template name="Footer"/>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="ver.1.4.5">
		<html>
			<xsl:call-template name="HEAD"/>
			<body>
				<div class="container">
					<xsl:call-template name="PRC_NM-check"/>
					<!-- <xsl:call-template name="M-START-check"/> -->
					<xsl:call-template name="Header"/>
					<xsl:call-template name="p-codes"/>
					<xsl:apply-templates select="ms:moexSpfiReport/ms:infoMessage[ lang( $lang ) ]"/>
					<xsl:call-template name="Menu"/>
					<xsl:apply-templates select="ms:moexSpfiReport/ms:initialMargin" mode="v145"/>
					<xsl:call-template name="Trade-list"/>
					<xsl:call-template name="npv-sum"/>
					<xsl:call-template name="Trades"/>
					<xsl:call-template name="Party"/>
					<xsl:apply-templates select="ms:moexSpfiReport/ms:guaranteeFund"/>
					<xsl:call-template name="Market"/>
					<xsl:call-template name="Footer"/>
				</div>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="ver.1.4.9">
		<html>
			<xsl:call-template name="HEAD"/>
			<body>
				<div class="container">
					<xsl:call-template name="PRC_NM-check"/>
					<!-- <xsl:call-template name="M-START-check"/> -->
					<xsl:call-template name="Header"/>
					<xsl:call-template name="p-codes"/>
					<xsl:apply-templates select="ms:moexSpfiReport/ms:infoMessage[ lang( $lang ) ]"/>
					<xsl:call-template name="Menu"/>
					<xsl:apply-templates select="ms:moexSpfiReport/ms:initialMargin" mode="v149"/>
					<xsl:call-template name="Trade-list"/>
					<xsl:call-template name="npv-sum"/>
					<xsl:call-template name="Trades"/>
					<xsl:call-template name="Party"/>
					<xsl:apply-templates select="ms:moexSpfiReport/ms:guaranteeFund"/>
					<xsl:call-template name="Market"/>
					<xsl:call-template name="Footer"/>
				</div>
			</body>
		</html>
	</xsl:template>
	<!-- HEAD -->
	<xsl:template name="HEAD">
		<head>
			<meta charset="utf-8"/>
			<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>
				<xsl:if test="$isReportDeals = 'False'">
					<xsl:text>MOEX OTC report - </xsl:text>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="$Today"/>
					</xsl:call-template>
				</xsl:if>
				<xsl:if test="$isReportDeals = 'True'">
					<xsl:text>MOEX OTC report deals - </xsl:text>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:moexSpfiInsideReport/ms:header/ms:dateFrom"/>
					</xsl:call-template>
					<xsl:text>-</xsl:text>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:moexSpfiInsideReport/ms:header/ms:dateTo"/>
					</xsl:call-template>
				</xsl:if>
			</title>
			<xsl:call-template name="CSS"/>
		</head>
	</xsl:template>
	<!-- CSS -->
	<!-- <xsl:variable name="width">1000</xsl:variable> -->
	<xsl:variable name="width">1200</xsl:variable>
	<xsl:template name="CSS">
		<style type="text/css"> 
			body {
			/** Корпоративный шрифт **/
			font-family: Tahoma, Verdana, Segoe, sans-serif;
			/** font-family: Arial, Helvetica, sans-serif; **/
			/** Цвет фона веб-страницы **/
			background-color: #FFFFFF;
			margin: 0px 20px 10px 20px;
			max-width: <xsl:value-of select="$width"/>px;
			margin-left: auto;
			margin-right: auto;
			font-size: 14px;
			}

			h1 {
			text-align: center;
			color: #FFFFFF;
			/** Цвет фона под заголовком h1 **/
			background-color: #CE1126;
			margin: 0px;
			}

			h2 {
			text-align: center;
			color: #FFFFFF;
			/** Цвет фона под заголовком h2 **/
			background-color: #CE1126;
			margin: 0px;
			}

			p.right {
			text-align: right;
			margin: 10px 10px;
			}

			/** ------------- **/
			/** Разные шрифты **/

			.bold { font-weight: bold; }
			.underline { text-decoration: underline; }
			.normal { font-weight: normal; }

			.red { color: #EE0000; }
			.bg-red { background-color: #FFEBE6; }
			.bg-red2 { background-color: #FF6666; }
			.yellow { color: #FF9900; }
			.bg-yellow { background-color: #FFCC00; }
			.green { color: #00AA00; }
			.bg-green { background-color: #F0FFF0; }
			.bg-green2 { background-color: #70DB70; }
			.blue { color: #0066FF }
			.bg-blue { background-color: #A3E0FF }
			.grey { color: #7A7A7A; }
			.bg-grey { background-color: #E6E6E6; }
			.bg-light-grey { background-color: #F2F2F2; }
			.black { color: black }

			.hov-grey:hover { color: #7A7A7A; }

			.small { font-size: small; }
			.xsmall { font-size: x-small; }
			.left { text-align: left; }

			.link {
			color: #7A7A7A;
			text-decoration: none;
			border-bottom: 1px dotted;
			}
			.link:hover { color: #000000; }

			/** ---------- **/
			/** Затемнение **/

			.dim { opacity: 0.4; }
			.dim:hover { opacity: 1.0; }

			/** ---------------- **/
			/** Стили для ссылок **/

			a:link, a:visited {
			color: #7A7A7A;
			text-decoration: none;
			border-bottom: 1px dotted;
			}

			a:hover {
			color: #000000;
			}

			a.black {
			color: black;
			border-bottom-style: none;
			}

			a.black:hover { color: #7A7A7A; }

			/** ------------------------- **/
			/** Стили для ссылок "Наверх" **/

			a.up, a.up:visited {
			font-size: 75%;
			color: #7A7A7A;
			text-decoration: none;
			border-bottom: 1px dotted;
			}

			a.up:hover {
			color: #000000;
			}

			/** ------------- **/
			/** Список сделок **/

			.main-link-trade {
			display: table;
			}

			.main-link-trade span {
			display: table-row;
			}

			.main-link-trade span span {
			display: table-cell;
			padding: 1px 10px;
			}

			.main-link-trade a {
			display: table-row;
			}

			.main-link-trade a span {
			display: table-cell;
			padding: 1px 10px;
			}

			/** --------------------------- **/
			/** Стиль для заголовка раздела **/

			tr.mark td.header {
			vertical-align: middle;
			background-color: #E6E6E6;
			border-top: 3px solid #999999;
			<!-- border-top: 2px  solid #CE1126; -->
			}

			/** ------------- **/
			/** Стиль для ИКО **/

			table.css-newiko {
			border-collapse: separate;
			margin: 20px 0px 0px 0px;
			}

			table.css-newiko td {
			text-align: right;
			border-style: solid;
			border-width: 0px 0px 1px 0px;
			border-color: #999999;
			padding: 2px 8px 0px;
			vertical-align: center;
			}

			table.css-newiko td.tdbold {
			border-top-width: 2px;
			border-bottom-width: 2px;
			!-- padding: 4px 8px; --&gt;
			padding-top: 4px;
			padding-bottom: 4px;
			}

			table.css-newiko th {
			text-align: center;
			font-weight: normal;
			vertical-align: center;
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 0px 0px 3px 0px;
			/** Цвет линий **/
			border-color: #999999;
			padding: 2px 8px;
			}

			/** --------------- **/
			/** Подсказка в ИКО **/

			table.css-newiko td.tip {
			border-style:dashed;
			border-width: 1px;
			background-color: #FFFFCC;
			padding: 5px;
			text-align: center;
			vertical-align: middle;
			position: relative;
			}

			table.css-newiko td.tip {
			vertical-align: top;
			}

			table.css-newiko td.tip span.tip-text {display: block; position: absolute; font-size: x-small;}

			/** ------------------------------------------------------- **/
			/** Стиль для платежей, party, ГФ, рисков (раньше было ИКО) **/

			table.css-iko {
			border-collapse: separate;
			margin: 20px 0px 0px 0px;
			}

			table.css-iko td {
			text-align: right;
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 0px 0px 1px 0px;
			/** Цвет линий **/
			border-color: #999999;
			padding: 2px 8px;
			vertical-align: bottom;
			}

			table.css-iko th {
			font-size: small;
			text-align: center;
			vertical-align: bottom;
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 0px 0px 3px 0px;
			/** Цвет линий **/
			border-color: #999999;
			padding: 2px 8px;
			}

			/** ---------------- **/
			/** Стиль для сделок **/

			table.css-trades {
			/** Минимальная ширина таблицы **/
			min-width: 400px;
			border-collapse: separate;
			}

			table.css-trades td {
			vertical-align: top;
			border-bottom: 1px solid #999999;
			<!-- height: 25px; -->
			padding: 5px 10px 0px 10px;
			<!-- padding: 0px 10px; -->
			}

			table.css-trades th {
			border-bottom: 2px solid #999999;
			vertical-align: bottom;
			}

			/** Разное выравнивание для первого и вторго столбцов **/
			table.css-trades td {
			text-align: left;
			color: #5F5F5F;
			}
			table.css-trades td + td {
			text-align: right;
			color: #000000;
			}

			/** ----------------------------- **/
			/** Стиль для ВМ, NPV и cashflows **/

			table.css-vm {
			font-size: small;
			border-collapse: collapse;
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 1px;
			/** Отступ от разметки **/
			margin: 4px 4px;
			/** Расстояние между текстом и границей **/
			padding: 2px 4px;
			}

			table.css-vm tr:hover {
			background-color: #FFFFCC;
			}

			table.css-vm td {
			text-align: right;
			/** Вертикальное выравнивание текста **/
			vertical-align: bottom;
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 1px;
			/** Цвет границ **/
			border-color: #999999;
			/** Высота ячейки **/
			height: 25px;
			/** Расстояние между текстом и границей **/
			padding: 2px 4px;
			}

			table.css-vm th {
			text-align: center;
			/**vertical-align: bottom;**/
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 0px 0px 3px 0px;
			/** Цвет линий **/
			border-color: #999999;
			height: 25px;
			/** Расстояние между текстом и границей **/
			padding: 2px 4px;
			}

			/** --------------------------------------- **/
			/** Стиль для маркет-даты и риск-параметров **/

			table.css-mrkt {
			/* font-size: small; */
			border-collapse: separate;
			}

			table.css-mrkt td {
			text-align: right;
			/** Вертикальное выравнивание текста **/
			vertical-align: bottom;
			/** Тип линий **/
			border-style: solid;
			/** Ширина линий **/
			border-width: 0px 0px 1px 0px;
			/** Цвет линий **/
			border-color: #999999;
			/** Высота ячейки **/
			height: 20px;
			/** Расстояние между текстом и границей **/
			padding: 2px 8px;
			/** Отступ от разметки **/
			margin: 0px 0px;
			}

			table.css-mrkt th {
			/** Тип линий **/
			border-style: solid;
			text-align: center;
			vertical-align: bottom;
			/** Ширина линий **/
			border-width: 0px 0px 3px 0px;
			/** Цвет линий **/
			border-color: #999999;
			padding: 2px 8px;
			}

			/** ------------------------- **/
			/** Стиль для процентов на ГО **/

			table.prc-dm {
			font-size: small;
			margin: 10px;
			border: 1px solid #FFD175;
			background-color: #FFFFE0;
			}

			table.prc-dm td {
			vertical-align: top;
			/** padding: 1px 10px; **/
			}

			/** ------------------------ **/
			/** Стиль для ввода / вывода **/

			table.nt {
			background-color: #FFFFE0;
			}

			table.nt th {
			text-align: center;
			border-style: solid;
			border-width: 0px 0px 3px 0px;
			border-color: #999999;
			}

			table.nt td {
			border-style: solid;
			border-width: 0px 0px 1px 0px;
			border-color: #999999;
			padding: 2px 10px;
			}

			/** --------- **/
			/** Сообщения **/

			div.message {
			border: 2px dotted #000000;
			background-color: #EEEEEE;
			font-weight: bold;
			text-align: center;
			vertical-align: middle;
			margin: 20px 100px;
			padding: 20px 30px;
			}

			div.notification {
			border: 2px dotted #FF9900;
			}

			div.alert {
			border: 2px dotted red;
			}					

			div.update {
			min-width: 500px;
			min-height: 200px;
			margin: 10% 20%;
			padding: 20px;
			border: 2px dotted red;
			text-align: center;
			}

			/** ----------- **/
			/** Разделитель **/

			hr {
			border: none; /* Убираем границу для браузера Firefox */
			color: #999999; /* Цвет линии для остальных браузеров */
			background-color: #999999; /* Цвет линии для браузера Firefox и Opera */
			height: 1px; /* Толщина линии */
			}

			/* Разметка */

			table.mark, td.mark {
			width: 100%;
			border-collapse: collapse;
			border: <xsl:value-of select="$mark"/>px solid red;
			padding: 10px 20px;
			/** Отступ от разметки **/
			margin: 20px 0px 0px 0px;
			vertical-align: top;
			}

			/** ------ **/
			/** Разное **/
			
			<!-- tr td.noborder { border: medium dashed green } -->
			tr td.noborder { border-width: 0px; }
			<!-- .noborder { border-width: 0px !important; } -->
			
			
			/********************/
			/** details на css **/
			/********************/

			/** -------------------------------------- **/
			/** Стиль текста для раскрывающихся блоков **/

			/** движок **/
			input[type=checkbox] {
			display: none;
			}

			input[type=checkbox]:checked + .css-more {
			display: none;
			}

			.more1 {
			font-size: small;
			text-align: left;
			border-left: 5px solid #999999;
			margin: 3px;
			padding: 5px;
			}

			.table-144 {
			border-collapse: collapse;
			}
			.table-144 thead {
			background-color: #cccccc;
			}
			.table-144, .table-144 td {
			border: 1px solid grey;
			}
			.table-144 td {
			padding: 2px;
			}

			.text-nowrap {
			white-space: nowrap;
			}

.table {
  width: 100%;
  max-width: 100%;
}
			
			<xsl:call-template name="xslFormatNccbAccount-css"/>
		</style>
	</xsl:template>
	<!--  -->
	<!--  -->
	<!--  -->
	<!-- Header -->
	<xsl:template name="Header">
		<xsl:if test="ms:moexSpfiReport/@server = 'otcdemo.moex.com'">
			<center class="red">
				<xsl:if test="$lang = 'ru'">||||| Отчет с тестового сервера |||||</xsl:if>
				<xsl:if test="$lang = 'en'">||||| This report from test server |||||</xsl:if>
			</center>
		</xsl:if>
		<h1>
			<xsl:if test="$lang = 'ru'">Рынок стандартизированных ПФИ</xsl:if>
			<xsl:if test="$lang = 'en'">Moscow Exchange Standardised OTC Derivatives Market</xsl:if>
		</h1>
		<h2>
			<xsl:if test="$ReportType = 'cr'">
				<!-- <xsl:if test="$lang = 'ru'">Клиринговый отчет за</xsl:if> -->
				<!-- <xsl:if test="$lang = 'en'">Clearing Report Date</xsl:if> -->
				<xsl:if test="ms:moexSpfiReport/ms:header/ms:clearingSessionNo = 1">Отчет по итогам расчетной клиринговой сессии за</xsl:if>
				<xsl:if test="ms:moexSpfiReport/ms:header/ms:clearingSessionNo = 2">Отчет об обеспечении за</xsl:if>
				<xsl:if test="ms:moexSpfiReport/ms:header/ms:clearingSessionNo = 3">Отчет о маржинальных требованиях на</xsl:if>
			</xsl:if>
			<xsl:if test="$ReportType = 'tr'">
				<xsl:if test="$lang = 'ru'">Отчет участника торгов за</xsl:if>
				<xsl:if test="$lang = 'en'">Trade Report Date</xsl:if>
			</xsl:if>
			<xsl:if test="$isReportDeals = 'True'">
				<xsl:if test="$lang = 'ru'">Отчет по сделкам за период с </xsl:if>
				<xsl:if test="$lang = 'en'">Trade Report For The Period From</xsl:if>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="ms:moexSpfiInsideReport/ms:header/ms:dateFrom"/>
				</xsl:call-template>
				<xsl:if test="$lang = 'ru'"> по </xsl:if>
				<xsl:if test="$lang = 'en'"> to </xsl:if>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="ms:moexSpfiInsideReport/ms:header/ms:dateTo"/>
				</xsl:call-template>
			</xsl:if>
			<xsl:text> </xsl:text>
			<xsl:if test="$isReportDeals = 'False'">
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="ms:moexSpfiReport/ms:header/ms:clearingDate"/>
				</xsl:call-template>
			</xsl:if>
		</h2>
		<xsl:apply-templates select="ms:moexSpfiReport/ms:header | ms:moexSpfiInsideReport/ms:header"/>
	</xsl:template>
	<xsl:template match="ms:header">
		<xsl:if test="$check">
			<span class="grey">
				<xsl:text>check modes</xsl:text>
				<ul>
					<li>id - показать айдишники платежей</li>
					<li>more - показать полную инфу по платежам</li>
					<li>swap - показать полную инфу по свопам</li>
					<li>codes - показать типы платежей</li>
				</ul>
			</span>
			<ul>
				<li>
					<xsl:text>xslt: </xsl:text>
					<xsl:value-of select="$xslt"/>
				</li>
				<li>
					<xsl:text>Fixing-td: </xsl:text>
					<xsl:value-of select="$Fixing-td"/>
				</li>
				<li>
					<xsl:text>Fixing-td-usd: </xsl:text>
					<xsl:value-of select="$Fixing-td-usd"/>
				</li>
				<li>
					<xsl:text>Fixing-td-eur: </xsl:text>
					<xsl:value-of select="$Fixing-td-eur"/>
				</li>
				<li>
					<xsl:text>Fixing-td-eurusd: </xsl:text>
					<xsl:value-of select="$Fixing-td-eurusd"/>
				</li>
			</ul>
		</xsl:if>
		<p class="right">
			<xsl:if test="$lang = 'ru'">Номер сообщения: </xsl:if>
			<xsl:if test="$lang = 'en'">Message ID: </xsl:if>
			<span class="bold">
				<xsl:value-of select="ms:messageId"/>
			</span>
			<br/>
			<xsl:if test="$lang = 'ru'">Отправитель: </xsl:if>
			<xsl:if test="$lang = 'en'">Sent By: </xsl:if>
			<span class="bold">
				<xsl:apply-templates select="ms:sentBy" mode="v144"/>
				<xsl:if test="$isReportDeals = 'True'">НКО НКЦ (АО)</xsl:if>
			</span>
			<br/>
			<xsl:if test="$lang = 'ru'">Получатель: </xsl:if>
			<xsl:if test="$lang = 'en'">Send To: </xsl:if>
			<span class="bold">
				<xsl:apply-templates select="ms:sendTo" mode="v144"/>
				<xsl:if test="$isReportDeals = 'True'">
					<xsl:apply-templates select="ms:firmId" mode="v144"/>
				</xsl:if>
			</span>
			<br/>
			<xsl:if test="$isReportDeals = 'False'">
				<xsl:if test="$ReportType = 'cr'">
					<!-- <xsl:if test="$lang = 'ru'">Дата клиринга: </xsl:if> -->
					<text>Отчет на дату: </text>
					<xsl:if test="$lang = 'en'">Clearing Date: </xsl:if>
					<span class="bold">
						<xsl:call-template name="xslFormatDate">
							<xsl:with-param name="xslDate" select="ms:clearingDate"/>
						</xsl:call-template>
					</span>
					<!-- <br/> -->
					<!-- <xsl:if test="$lang = 'ru'">Клиринговая сессия: </xsl:if> -->
					<!-- <xsl:if test="$lang = 'en'">Clearing Session: </xsl:if> -->
					<!-- <span class="bold">
					     <xsl:if test="ms:clearingSessionNo = 1">
					     <xsl:if test="$lang = 'ru'">расчётная</xsl:if>
					     <xsl:if test="$lang = 'en'">settlement</xsl:if>
					</xsl:if>
					     <xsl:if test="ms:clearingSessionNo = 2">mark-to-market</xsl:if>
					</span> -->
				</xsl:if>
				<xsl:if test="$ReportType = 'tr'">
					<xsl:if test="$lang = 'ru'">Дата торгов: </xsl:if>
					<xsl:if test="$lang = 'en'">Trade Date: </xsl:if>
					<span class="bold">
						<xsl:call-template name="xslFormatDate">
							<xsl:with-param name="xslDate" select="ms:clearingDate"/>
						</xsl:call-template>
					</span>
				</xsl:if>
				<br/>
			</xsl:if>
			<xsl:if test="$lang = 'ru'">Время формирования отчета: </xsl:if>
			<xsl:if test="$lang = 'en'">Report Creation Time: </xsl:if>
			<span class="bold">
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="ms:creationTimestamp"/>
				</xsl:call-template>
			</span>
		</p>
	</xsl:template>
	<!-- Сообщение -->
	<xsl:template match="ms:infoMessage">
		<input id="{generate-id()}" type="checkbox"/>
		<div class="css-more">
			<div class="message {./@type}">
				<xsl:value-of select="(.)"/>
				<br/>
				<br/>
				<label for="{generate-id()}">
					<span class="small grey normal">
						<xsl:if test="$lang = 'ru'">[ Нажмите здесь, чтобы скрыть сообщение ]</xsl:if>
						<xsl:if test="$lang = 'en'">[ Click here, to close message ]</xsl:if>
					</span>
				</label>
			</div>
		</div>
	</xsl:template>
	<!-- Menu -->
	<xsl:template name="Menu">
		<hr/>
		<center class="grey">
			<!-- netto -->
			<!-- <xsl:if test="$check">
			     <a href="#netto">netto</a>
			     <xsl:text> \\\ </xsl:text>
			</xsl:if> -->
			<!-- Одна сделка -->
			<xsl:if test="$Num-trades = 1">
				<a href="#link-trade">
					<xsl:if test="$lang = 'ru'">Сделка</xsl:if>
					<xsl:if test="$lang = 'en'">Trade</xsl:if>
				</a>
			</xsl:if>
			<!-- Несколько сделок -->
			<xsl:if test="$Num-trades &gt; 1">
				<a href="#link-trade">
					<xsl:if test="$lang = 'ru'">Сделки</xsl:if>
					<xsl:if test="$lang = 'en'">Trades</xsl:if>
					<xsl:text> (</xsl:text>
					<xsl:value-of select="$Num-trades"/>
					<xsl:text>)</xsl:text>
				</a>
			</xsl:if>
			<xsl:if test="$Num-trades &gt; 0">
				<xsl:text> • </xsl:text>
			</xsl:if>
			<!--  -->
			<xsl:if test="$check">
				<xsl:text>PRC_DM: </xsl:text>
				<xsl:value-of select="count( $BULLETS[ fpml:bulletPayment/fpml:payment/fpml:paymentType = 'PRC_DM' ] )"/>
				<xsl:text> • </xsl:text>
				<xsl:text>bulletPayment: </xsl:text>
				<xsl:value-of select="count( $BULLETS[ fpml:bulletPayment/fpml:payment/fpml:paymentType != 'PRC_DM' ] )"/>
				<xsl:text> • </xsl:text>
			</xsl:if>
			<!-- Участники -->
			<xsl:if test="$counterpartyForSecondTrade">
				<a href="#link-party">
					<xsl:if test="$lang = 'ru'">Участники</xsl:if>
					<xsl:if test="$lang = 'en'">Participants</xsl:if>
				</a>
				<xsl:text> • </xsl:text>
			</xsl:if>
			<!-- Гарантийный фонд -->
			<xsl:if test="ms:moexSpfiReport/ms:guaranteeFund">
				<a href="#link-guaranteeFund">
					<xsl:if test="$lang = 'ru'">Гарантийный фонд</xsl:if>
					<xsl:if test="$lang = 'en'">Guarantee Fund</xsl:if>
				</a>
				<xsl:text> • </xsl:text>
			</xsl:if>
			<!-- Фиксинг и ставки -->
			<xsl:if test="ms:moexSpfiReport/ms:fpml/fpml:market">
				<a href="#link-market2">
					<xsl:if test="$lang = 'ru'">Фиксинги и ставки</xsl:if>
					<xsl:if test="$lang = 'en'">Fixings and Rates</xsl:if>
				</a>
			</xsl:if>
		</center>
		<hr/>
	</xsl:template>
	<!-- ГО -->
	<xsl:template match="ms:initialMargin" mode="v143">
		<table class="mark">
			<xsl:call-template name="MarkHeader">
				<xsl:with-param name="MarkHeaderName">
					<xsl:if test="$lang = 'ru'">Обеспечение</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral</xsl:if>
				</xsl:with-param>
			</xsl:call-template>
			<xsl:apply-templates select="ms:settlementCode" mode="info-v143"/>
		</table>
	</xsl:template>
	<xsl:template match="ms:initialMargin" mode="v145">
		<table class="mark">
			<xsl:call-template name="MarkHeader">
				<xsl:with-param name="MarkHeaderName">
					<xsl:if test="$lang = 'ru'">Обеспечение</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral</xsl:if>
				</xsl:with-param>
			</xsl:call-template>
			<xsl:apply-templates select="ms:settlementCode" mode="info-v145"/>
		</table>
	</xsl:template>
	<xsl:template match="ms:initialMargin" mode="v149">
		<table class="mark">
			<xsl:call-template name="MarkHeader">
				<xsl:with-param name="MarkHeaderName">
					<xsl:if test="$lang = 'ru'">Обеспечение</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral</xsl:if>
				</xsl:with-param>
			</xsl:call-template>
			<xsl:apply-templates select="ms:settlementCode" mode="info-v149"/>
		</table>
	</xsl:template>
	<xsl:template match="ms:settlementCode" mode="info-v143">
		<xsl:if test="position() &gt; 1">
			<xsl:call-template name="hr"/>
		</xsl:if>
		<tr class="mark">
			<td class="mark" colspan="2">
				<xsl:if test="$lang = 'ru'">Расчетный код: </xsl:if>
				<xsl:if test="$lang = 'en'">Settlement Code: </xsl:if>
				<span class="underline">
					<xsl:value-of select="@id"/>
				</span>
				<xsl:apply-templates select="(.)" mode="total-v143"/>
			</td>
		</tr>
		<!-- <a name="netto"/> -->
		<xsl:apply-templates select="ms:balance[ @id = 'RUB' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'USD' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'EUR' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'CHF' ]" mode="details"/>
	</xsl:template>
	<xsl:template match="ms:settlementCode" mode="info-v145">
		<xsl:if test="position() &gt; 1">
			<xsl:call-template name="hr"/>
		</xsl:if>
		<tr class="mark">
			<td class="mark" colspan="2">
				<xsl:if test="$lang = 'ru'">Расчетный код: </xsl:if>
				<xsl:if test="$lang = 'en'">Settlement Code: </xsl:if>
				<span class="underline">
					<xsl:value-of select="@id"/>
				</span>
				<div class="grey">
					<xsl:if test="$lang = 'ru'">Расчетный код Единого пула: 
						<xsl:if test="ms:unifiedPoolStatus = 'true'">да</xsl:if>
						<xsl:if test="ms:unifiedPoolStatus != 'true'">нет</xsl:if>
					</xsl:if>
					<xsl:if test="$lang = 'en'">Unified Pool Settlement Account: 
						<xsl:if test="ms:unifiedPoolStatus = 'true'">yes</xsl:if>
						<xsl:if test="ms:unifiedPoolStatus != 'true'">no</xsl:if>
					</xsl:if>
				</div>
				<xsl:apply-templates select="(.)" mode="total-v145"/>
			</td>
		</tr>
		<!-- <a name="netto"/> -->
		<xsl:apply-templates select="ms:balance[ @id = 'RUB' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'USD' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'EUR' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'CHF' ]" mode="details"/>
		<xsl:apply-templates select="ms:balance[ @id = 'CNY' ]" mode="details"/>
	</xsl:template>
	<!-- CURRENCY LIST -->
	<lt:currencyList>
		<lt:currency id="RUB" rate="" acc="304208100700000"/>
		<lt:currency id="USD" rate="MOEXCENTRALUSDRUB" acc=""/>
		<lt:currency id="EUR" rate="MOEXCENTRALEURRUB" acc=""/>
		<lt:currency id="CNY" rate="MOEXCENTRALCNYRUB" acc=""/>
		<lt:currency id="KZT" rate="MOEXCENTRALKZTRUB" acc=""/>
		<lt:currency id="CHF" rate="MOEXCENTRALCHFRUB" acc=""/>
	</lt:currencyList>
	<xsl:template match="ms:settlementCode" mode="info-v149">
		<xsl:variable name="sc" select="."/>
		<xsl:if test="position() &gt; 1">
			<xsl:call-template name="hr"/>
		</xsl:if>
		<tr class="mark">
			<td class="mark" colspan="2">
				<xsl:if test="$lang = 'ru'">Расчетный код: </xsl:if>
				<xsl:if test="$lang = 'en'">Settlement Code: </xsl:if>
				<span class="underline">
					<xsl:value-of select="@id"/>
				</span>
				<div class="grey">
					<xsl:if test="$lang = 'ru'">Расчетный код Единого пула: 
						<xsl:if test="ms:unifiedPoolStatus = 'true'">да</xsl:if>
						<xsl:if test="ms:unifiedPoolStatus != 'true'">нет</xsl:if>
					</xsl:if>
					<xsl:if test="$lang = 'en'">Unified Pool Settlement Account: 
						<xsl:if test="ms:unifiedPoolStatus = 'true'">yes</xsl:if>
						<xsl:if test="ms:unifiedPoolStatus != 'true'">no</xsl:if>
					</xsl:if>
				</div>
				<!--  -->
				<xsl:apply-templates select="(.)" mode="total-v149"/>
				<!--  -->
			</td>
		</tr>
		<!-- <a name="netto"/> -->
		<xsl:variable name="currencyList" select="document('')/xsl:stylesheet/lt:currencyList"/>
		<xsl:for-each select="$currencyList/lt:currency">
			<xsl:variable name="cid" select="@id"/>
			<xsl:apply-templates select="$sc/ms:balance[ @id = $cid ]" mode="details"/>
		</xsl:for-each>
	</xsl:template>
	<!--  -->
	<xsl:template match="ms:settlementCode" mode="total-v143">
		<table class="css-newiko" style="margin-left: auto; margin-right: auto">
			<xsl:call-template name="settlement-code-total-header"/>
			<!-- Данные -->
			<tr>
				<td style="text-align: center">
					<div>RUB</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('304208108700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'RUB' ]" mode="info-v143"/>
				<xsl:if test="not( ms:balance[ @id = 'RUB' ] )">
					<td class="grey">0,00 RUB</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>USD</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<!-- <xsl:with-param name="xslNccbAccount" select="concat('304208403700000', substring-after(@id, 'RK'))"/> -->
							<xsl:with-param name="xslNccbAccount" select="concat('474058406700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'USD' ]" mode="info-v143"/>
				<xsl:if test="not( ms:balance[ @id = 'USD' ] )">
					<td class="grey">0,00 USD</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>EUR</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('474059782700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'EUR' ]" mode="info-v143"/>
				<xsl:if test="not( ms:balance[ @id = 'EUR' ] )">
					<td class="grey">0,00 EUR</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>CHF</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('474057562700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'CHF' ]" mode="info-v143"/>
				<xsl:if test="not( ms:balance[ @id = 'CHF' ] )">
					<td class="grey">0,00 CHF</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<!-- Итоги -->
			<tr>
				<td class="noborder" style="height: 20px;"/>
			</tr>
			<tr>
				<td rowspan="4" class="noborder"/>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Оценка баланса</xsl:if>
					<xsl:if test="$lang = 'en'">Estimate Amount Summary</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountSumm"/>
					</xsl:call-template>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountSumm"/>
						<xsl:with-param name="mode">eas</xsl:with-param>
					</xsl:call-template>
				</td>
				<td rowspan="4" style="border-style: none;"/>
			</tr>
			<tr>
				<td class="noborder" style="height: 20px;"/>
			</tr>
			<tr>
				<td rowspan="4" class="noborder"/>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Оценка средств обеспечения</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral Value</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountSumm"/>
					</xsl:call-template>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountSumm"/>
						<xsl:with-param name="mode">eas</xsl:with-param>
					</xsl:call-template>
				</td>
				<td rowspan="4" style="border-style: none;"/>
			</tr>
			<tr>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Требование к обеспечению</xsl:if>
					<xsl:if test="$lang = 'en'">Initial Margin</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:initialMarginMin"/>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td class="noborder" style="height: 30px;"/>
			</tr>
			<tr>
				<td colspan="2" class="tdbold">
					<xsl:if test="(ms:estimateAmountAvailable/ms:amount &gt;= 0) or ($ClearingSessionNo = 1)">
						<span class="bold">
							<xsl:if test="$lang = 'ru'">Оценка свободных средств</xsl:if>
							<xsl:if test="$lang = 'en'">Estimate Available Amount</xsl:if>
						</span>
					</xsl:if>
					<xsl:if test="(ms:estimateAmountAvailable/ms:amount &lt; 0) and ($ClearingSessionNo = 2)">
						<span class="bold">
							<xsl:if test="$lang = 'ru'">Оценка маржинального требования</xsl:if>
							<xsl:if test="$lang = 'en'">Margin Call Estimate Amount</xsl:if>
						</span>
						<div class="grey xsmall" style="max-width: 300px;">
							<xsl:if test="$lang = 'ru'">Оценка маржинального требования представлена в различных валютах. Для погашения маржинального требования достаточно перевести одну из указанных сумм.</xsl:if>
							<xsl:if test="$lang = 'en'">Margin Call shown in different currencies. To pay the margin call is enough to transfer one of these amounts.</xsl:if>
						</div>
					</xsl:if>
				</td>
				<td class="tdbold">
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountAvailable"/>
						<xsl:with-param name="xslAmountColor">2</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="(ms:estimateAmountAvailable/ms:amount &lt; 0) and ($ClearingSessionNo = 2)">
						<xsl:for-each select="ms:balance[@id != 'RUB']">
							<span class="grey small">
								<br/>
								<xsl:if test="$lang = 'ru'">или </xsl:if>
								<xsl:if test="$lang = 'en'">or </xsl:if>
								<xsl:apply-templates select="(.)" mode="av-v3">
									<xsl:with-param name="mode">2</xsl:with-param>
								</xsl:apply-templates>
							</span>
						</xsl:for-each>
					</xsl:if>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountAvailable"/>
						<xsl:with-param name="mode">eaa</xsl:with-param>
					</xsl:call-template>
				</td>
			</tr>
		</table>
	</xsl:template>
	<xsl:template match="ms:settlementCode" mode="total-v145">
		<table class="css-newiko" style="margin-left: auto; margin-right: auto">
			<xsl:call-template name="settlement-code-total-header"/>
			<!-- Данные -->
			<tr>
				<td style="text-align: center">
					<div>RUB</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('304208100700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'RUB' ]" mode="info-v145"/>
				<xsl:if test="not( ms:balance[ @id = 'RUB' ] )">
					<td class="grey">0,00 RUB</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>USD</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('474058406700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'USD' ]" mode="info-v145"/>
				<xsl:if test="not( ms:balance[ @id = 'USD' ] )">
					<td class="grey">0,00 USD</td>
					<td class="grey" style="text-align: center">-</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>EUR</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('474059782700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'EUR' ]" mode="info-v145"/>
				<xsl:if test="not( ms:balance[ @id = 'EUR' ] )">
					<td class="grey">0,00 EUR</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>CHF</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('474057567000000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'CHF' ]" mode="info-v145"/>
				<xsl:if test="not( ms:balance[ @id = 'CHF' ] )">
					<td class="grey">0,00 CHF</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td style="text-align: center">
					<div>CNY</div>
					<xsl:if test="$nccbAccount">
						<xsl:call-template name="xslFormatNccbAccount">
							<xsl:with-param name="xslNccbAccount" select="concat('474057567000000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
					</xsl:if>
				</td>
				<xsl:apply-templates select="ms:balance[ @id = 'CNY' ]" mode="info-v145"/>
				<xsl:if test="not( ms:balance[ @id = 'CNY' ] )">
					<td class="grey">0,00 CHF</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
					<td class="grey" style="text-align: center">–</td>
				</xsl:if>
			</tr>
			<tr>
				<td class="noborder" colspan="5">
					<div class="grey small">
						<xsl:if test="$lang = 'ru'">* Указывается максимальная сумма для каждого актива при условии сохранения остатков в иных активах</xsl:if>
						<xsl:if test="$lang = 'en'">* Maximum sum is defined for each asset under the condition that balance in other assets is kept</xsl:if>
					</div>
				</td>
			</tr>
			<!-- Итоги -->
			<tr>
				<td class="noborder" style="height: 20px;"/>
			</tr>
			<tr>
				<td rowspan="5" class="noborder"/>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Оценка Обеспечения<br/>без Риск-неттинга</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral Value<br/>without Risk Netting</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountBalance"/>
					</xsl:call-template>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountBalance"/>
						<xsl:with-param name="mode">eas</xsl:with-param>
					</xsl:call-template>
				</td>
				<td rowspan="5" style="border-style: none;"/>
			</tr>
			<tr>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Оценка Обеспечения<br/>(включает Риск-Неттинг)</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral Value<br/>(including Risk Netting)</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountSumm"/>
					</xsl:call-template>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountSumm"/>
						<xsl:with-param name="mode">eas</xsl:with-param>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Требование к Обеспечению</xsl:if>
					<xsl:if test="$lang = 'en'">Initial Margin</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:initialMarginMin"/>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td class="noborder" style="height: 30px;"/>
			</tr>
			<tr>
				<td colspan="2" class="tdbold">
					<xsl:if test="(ms:estimateAmountAvailable/ms:amount &gt;= 0)  or ($ClearingSessionNo = 1)">
						<span class="bold">
							<xsl:if test="$lang = 'ru'">Оценка свободных средств</xsl:if>
							<xsl:if test="$lang = 'en'">Estimate Available Amount</xsl:if>
						</span>
					</xsl:if>
					<xsl:if test="(ms:estimateAmountAvailable/ms:amount &lt; 0) and ($ClearingSessionNo = 2)">
						<span class="bold">
							<xsl:if test="$lang = 'ru'">Оценка маржинального требования</xsl:if>
							<xsl:if test="$lang = 'en'">Margin Call Estimate Amount</xsl:if>
						</span>
						<div class="grey xsmall" style="max-width: 300px;">
							<xsl:if test="$lang = 'ru'">Оценка маржинального требования представлена в различных валютах. Для погашения маржинального требования достаточно перевести одну из указанных сумм.</xsl:if>
							<xsl:if test="$lang = 'en'">Margin Call shown in different currencies. To pay the margin call is enough to transfer one of these amounts.</xsl:if>
						</div>
					</xsl:if>
				</td>
				<td class="tdbold">
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountAvailable"/>
						<xsl:with-param name="xslAmountColor">2</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="(ms:estimateAmountAvailable/ms:amount &lt; 0) and ($ClearingSessionNo = 2)">
						<xsl:for-each select="ms:balance[@id != 'RUB']">
							<span class="grey small">
								<br/>
								<xsl:if test="$lang = 'ru'">или </xsl:if>
								<xsl:if test="$lang = 'en'">or </xsl:if>
								<xsl:apply-templates select="(.)" mode="av-v3">
									<xsl:with-param name="mode">2</xsl:with-param>
								</xsl:apply-templates>
							</span>
						</xsl:for-each>
					</xsl:if>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountAvailable"/>
						<xsl:with-param name="mode">eaa</xsl:with-param>
					</xsl:call-template>
				</td>
			</tr>
		</table>
	</xsl:template>
	<xsl:template match="ms:settlementCode" mode="total-v149">
		<xsl:variable name="sc" select="."/>
		<table class="css-newiko" style="margin-left: auto; margin-right: auto">
			<xsl:call-template name="settlement-code-total-header"/>
			<!-- Данные -->
			<xsl:variable name="currencyList" select="document('')/xsl:stylesheet/lt:currencyList"/>
			<xsl:for-each select="$currencyList/lt:currency-prev-version">
				<xsl:variable name="cid" select="@id"/>
				<tr>
					<td style="text-align: center">
						<div>
							<xsl:value-of select="$cid"/>
						</div>
						<!-- <xsl:if test="$nccbAccount">
						     <xsl:call-template name="xslFormatNccbAccount">
						     <xsl:with-param name="xslNccbAccount" select="concat('304208100700000', substring-after(@id, 'RK'))"/>
						</xsl:call-template>
						</xsl:if> -->
					</td>
					<xsl:apply-templates select="$sc/ms:balance[ @id = $cid ]" mode="info-v149">
						<xsl:with-param name="rate-code" select="@rate"/>
					</xsl:apply-templates>
					<xsl:if test="not( $sc/ms:balance[ @id = $cid ] )">
						<td class="grey">
							<xsl:text>0,00 </xsl:text>
							<xsl:value-of select="$cid"/>
						</td>
						<td class="grey" style="text-align: center">–</td>
						<td class="grey" style="text-align: center">–</td>
						<td class="grey" style="text-align: center">–</td>
					</xsl:if>
				</tr>
			</xsl:for-each>
			<xsl:for-each select="$currencyList/lt:currency">
				<xsl:variable name="cid" select="@id"/>
				<xsl:if test="$sc/ms:balance[ @id = $cid ]">
					<xsl:for-each select="$sc/ms:balance[ @id = $cid ]">
						<tr>
							<td style="text-align: center">
								<xsl:value-of select="$cid"/>
							</td>
							<xsl:apply-templates select="." mode="info-v149">
								<xsl:with-param name="rate-code" select="@rate"/>
							</xsl:apply-templates>
						</tr>
					</xsl:for-each>
				</xsl:if>
				<xsl:if test="not( $sc/ms:balance[ @id = $cid ] )">
					<tr>
						<td style="text-align: center">
							<div>
								<xsl:value-of select="$cid"/>
							</div>
						</td>
						<td class="grey">
							<xsl:text>0,00 </xsl:text>
							<xsl:value-of select="$cid"/>
						</td>
						<td class="grey" style="text-align: center">–</td>
						<td class="grey" style="text-align: center">–</td>
						<td class="grey" style="text-align: center">–</td>
					</tr>
				</xsl:if>
			</xsl:for-each>
			<tr>
				<td class="noborder" colspan="5">
					<div class="grey small">
						<xsl:if test="$lang = 'ru'">* Указывается максимальная сумма для каждого актива при условии сохранения остатков в иных активах</xsl:if>
						<xsl:if test="$lang = 'en'">* Maximum sum is defined for each asset under the condition that balance in other assets is kept</xsl:if>
					</div>
				</td>
			</tr>
			<!-- Итоги -->
			<tr>
				<td class="noborder" style="height: 20px;"/>
			</tr>
			<tr>
				<td rowspan="5" class="noborder"/>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Оценка Обеспечения<br/>без Риск-неттинга</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral Value<br/>without Risk Netting</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountBalance"/>
					</xsl:call-template>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountBalance"/>
						<xsl:with-param name="mode">eas</xsl:with-param>
					</xsl:call-template>
				</td>
				<td rowspan="5" style="border-style: none;"/>
			</tr>
			<tr>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Оценка Обеспечения<br/>(включает Риск-Неттинг)</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral Value<br/>(including Risk Netting)</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:estimateAmountSumm"/>
					</xsl:call-template>
					<!-- checker -->
					<xsl:call-template name="checker">
						<xsl:with-param name="checkthis" select="ms:estimateAmountSumm"/>
						<xsl:with-param name="mode">eas</xsl:with-param>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">Требование к Обеспечению</xsl:if>
					<xsl:if test="$lang = 'en'">Initial Margin</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:initialMarginMin"/>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td class="noborder" style="height: 30px;"/>
			</tr>
			<xsl:if test="$ClearingSessionNo = 1">
				<xsl:apply-templates select="ms:estimateAmountAvailable" mode="pos"/>
			</xsl:if>
			<xsl:if test="$ClearingSessionNo = 2">
				<xsl:apply-templates select="ms:estimateAmountAvailable[ms:amount &gt;= 0]" mode="pos"/>
				<xsl:apply-templates select="ms:estimateAmountAvailable[ms:amount &lt; 0]" mode="neg"/>
			</xsl:if>
			<xsl:if test="$ClearingSessionNo = 3">
				<xsl:apply-templates select="ms:estimateAmountAvailable[ms:amount &gt;= 0]" mode="pos"/>
				<xsl:apply-templates select="ms:estimateAmountAvailable[ms:amount &lt; 0]" mode="neg"/>
			</xsl:if>
		</table>
	</xsl:template>
	<xsl:template match="ms:estimateAmountAvailable" mode="pos">
		<tr>
			<td colspan="2" class="tdbold">
				<span class="bold">
					<xsl:if test="$lang = 'ru'">Оценка свободных средств</xsl:if>
					<xsl:if test="$lang = 'en'">Estimate Available Amount</xsl:if>
				</span>
				<xsl:if test="$ClearingSessionNo = 2">
					<div class="small grey">* Предварительное значение</div>
				</xsl:if>
			</td>
			<td class="tdbold">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="."/>
					<xsl:with-param name="xslAmountColor">2</xsl:with-param>
				</xsl:call-template>
				<!-- checker -->
				<xsl:call-template name="checker">
					<xsl:with-param name="checkthis" select="."/>
					<xsl:with-param name="mode">eaa</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="ms:estimateAmountAvailable" mode="neg">
		<tr>
			<td colspan="2" class="tdbold">
				<span class="bold">
					<xsl:if test="$lang = 'ru'">Оценка маржинального требования</xsl:if>
					<xsl:if test="$lang = 'en'">Margin Call Estimate Amount</xsl:if>
				</span>
				<xsl:if test="$ClearingSessionNo = 2">
					<div class="small grey">* Предварительное значение</div>
				</xsl:if>
			</td>
			<td class="tdbold">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="."/>
					<xsl:with-param name="xslAmountColor">2</xsl:with-param>
				</xsl:call-template>
				<!-- checker -->
				<xsl:call-template name="checker">
					<xsl:with-param name="checkthis" select="."/>
					<xsl:with-param name="mode">eaa</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template name="settlement-code-total-header">
		<tr>
			<th colspan="5">
				<span class="bold">
					<xsl:if test="$lang = 'ru'">Оценка обеспечения</xsl:if>
					<xsl:if test="$lang = 'en'">Collateral Estimate Amount</xsl:if>
				</span>
			</th>
		</tr>
		<tr class="bg-grey">
			<th>
				<xsl:if test="$lang = 'ru'">Код актива / профиля актива</xsl:if>
				<xsl:if test="$lang = 'en'">Asset code / asset profile code</xsl:if>
			</th>
			<th>
				<xsl:if test="$lang = 'ru'">Баланс по итогам клиринга</xsl:if>
				<xsl:if test="$lang = 'en'">Amount After Clearing</xsl:if>
			</th>
			<th>
				<xsl:if test="$lang = 'ru'">Курс оценки</xsl:if>
				<xsl:if test="$lang = 'en'">Estimate Rate</xsl:if>
			</th>
			<th>
				<xsl:if test="$lang = 'ru'">Оценка в российских рублях</xsl:if>
				<xsl:if test="$lang = 'en'">Value in Russian rubles</xsl:if>
			</th>
			<th>
				<xsl:if test="$lang = 'ru'">Доступно к возврату*</xsl:if>
				<xsl:if test="$lang = 'en'">Available*</xsl:if>
			</th>
		</tr>
	</xsl:template>
	<xsl:template match="ms:balance" mode="info-v143">
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:balanceAfterClearing"/>
			</xsl:call-template>
		</td>
		<td>
			<xsl:if test="@id = 'RUB'">
				<center>–</center>
			</xsl:if>
			<xsl:if test="@id = 'USD'">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$Central-td-usd"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
		</td>
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:estimateAmount"/>
			</xsl:call-template>
		</td>
		<td>
			<xsl:if test="ms:balanceAfterClearing/ms:amount != 0">
				<div class="small">
					<xsl:apply-templates select="(.)" mode="av-v3">
						<xsl:with-param name="mode">1</xsl:with-param>
					</xsl:apply-templates>
				</div>
				<div>
					<xsl:apply-templates select="parent::ms:settlementCode" mode="want-100">
						<xsl:with-param name="currency" select="@id"/>
					</xsl:apply-templates>
				</div>
			</xsl:if>
			<xsl:if test="ms:balanceAfterClearing/ms:amount = 0">
				<center class="grey">–</center>
			</xsl:if>
		</td>
	</xsl:template>
	<xsl:template match="ms:balance" mode="info-v145">
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:balanceAfterClearing"/>
			</xsl:call-template>
		</td>
		<td>
			<xsl:if test="@id = 'RUB'">
				<center>–</center>
			</xsl:if>
			<xsl:if test="@id = 'USD'">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$Central-td-usd"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
			<xsl:if test="@id = 'EUR'">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$Central-td-eur"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
			<xsl:if test="@id = 'CHF'">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$Central-td-chf"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
			<xsl:if test="@id = 'CNY'">
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$Central-td-cny"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
		</td>
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:estimateAmount"/>
			</xsl:call-template>
		</td>
		<td class="text-nowrap">
			<xsl:if test="ms:balanceAfterClearing/ms:amount != 0">
				<xsl:variable name="av">
					<!-- <xsl:choose>
					     <xsl:when test="$xslt = '1.4.7'">
					     <xsl:apply-templates select="ms:amountAvailable/ms:amount"/>
					</xsl:when>
					     <xsl:otherwise>
					     <xsl:apply-templates select="(.)" mode="av-v4"/>
					</xsl:otherwise>
					</xsl:choose> -->
					<xsl:value-of select="ms:amountAvailable/ms:amount"/>
				</xsl:variable>
				<xsl:variable name="av-p" select="format-number( $av div ms:balanceAfterClearing/ms:amount , '0.0000' )"/>
				<!--  -->
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$av"/>
					<xsl:with-param name="currency" select="@id"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountColor">3</xsl:with-param>
				</xsl:call-template>
				<!-- <xsl:text> (</xsl:text> -->
				<!-- <xsl:call-template name="xslFormatRate">
				     <xsl:with-param name="xslRate" select="$av-p"/>
				     <xsl:with-param name="xslRateDecimal">2</xsl:with-param>
				     <xsl:with-param name="xslRateColor">1</xsl:with-param>
				</xsl:call-template> -->
				<!-- <xsl:text>)</xsl:text> -->
			</xsl:if>
			<xsl:if test="ms:balanceAfterClearing/ms:amount = 0">
				<center class="grey">–</center>
			</xsl:if>
		</td>
	</xsl:template>
	<xsl:template match="ms:balance" mode="info-v149">
		<xsl:param name="rate-code"/>
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:balanceAfterClearing"/>
			</xsl:call-template>
		</td>
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="/ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[ fpml:objectReference/@href = $rate-code ]/fpml:quote[ substring-before(fpml:time, 'T') = $Today ]/fpml:value"/>
				<xsl:with-param name="xslAmountMode">1</xsl:with-param>
				<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				<xsl:with-param name="xslAmountCenter" select="true()"/>
			</xsl:call-template>
		</td>
		<td>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:estimateAmount"/>
			</xsl:call-template>
		</td>
		<td class="text-nowrap">
			<xsl:if test="ms:balanceAfterClearing/ms:amount != 0">
				<xsl:variable name="av">
					<xsl:value-of select="ms:amountAvailable/ms:amount"/>
				</xsl:variable>
				<!--  -->
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$av"/>
					<xsl:with-param name="currency" select="@id"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountColor">3</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
			<!-- <xsl:if test="ms:balanceAfterClearing/ms:amount = 0">
			     <center class="grey">-</center>
			</xsl:if> -->
		</td>
	</xsl:template>
	<xsl:template match="ms:balance" mode="av-v3">
		<!-- Оценка свободных средств и маржин кола в разных валютах -->
		<!-- Режим отображения: 1 = для строк в таблице, 2 = для итоговой строки -->
		<xsl:param name="mode"/>
		<!--  -->
		<!--<xsl:variable name="Fixing-td" select="key( 'Fixing-usd' , $Today )"/>-->
		<!-- Оценка доступных средств в разных валютах -->
		<xsl:variable name="tmpAv">
			<xsl:choose>
				<!-- Для RUB берем просто оценку свободных средств в рублях -->
				<xsl:when test="@id = 'RUB'">
					<xsl:value-of select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount"/>
				</xsl:when>
				<!-- По валютам пересчитываем рублевую оценку через центральный курс -->
				<xsl:when test="@id = 'USD'">
					<xsl:variable name="result" select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount div $Central-td-usd div (1 - $fx-risk-usd)"/>
					<xsl:value-of select="floor($result * 100) div 100"/>
				</xsl:when>
				<xsl:when test="@id = 'EUR'">
					<xsl:variable name="result" select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount div $Central-td-eur div (1 - $fx-risk-eur)"/>
					<xsl:value-of select="floor($result * 100) div 100"/>
				</xsl:when>
				<xsl:when test="@id = 'CHF'">
					<xsl:variable name="result" select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount div $Central-td-chf div (1 - $fx-risk-chf)"/>
					<xsl:value-of select="floor($result * 100) div 100"/>
				</xsl:when>
			</xsl:choose>
		</xsl:variable>
		<!-- Сравниваем оценку с балансом -->
		<xsl:variable name="avAmount">
			<!-- Оценка меньше баланса = показываем оценку -->
			<xsl:if test="$tmpAv &lt; ms:balanceAfterClearing/ms:amount">
				<!-- Разное отображение для разных режимов -->
				<xsl:if test="$mode = 1">
					<!-- Нет маржин-кола = показываем оценку -->
					<xsl:if test="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount &gt;= 0">
						<xsl:value-of select="$tmpAv"/>
					</xsl:if>
					<!-- Есть маржин-кол = показываем ноль -->
					<xsl:if test="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount &lt; 0">0</xsl:if>
				</xsl:if>
				<xsl:if test="$mode = 2">
					<xsl:value-of select="$tmpAv"/>
				</xsl:if>
			</xsl:if>
			<!-- Оценка больше или равна балансу = показываем баланс -->
			<xsl:if test="$tmpAv &gt;= ms:balanceAfterClearing/ms:amount">
				<xsl:value-of select="ms:balanceAfterClearing/ms:amount"/>
			</xsl:if>
		</xsl:variable>
		<!-- Показываем результат -->
		<xsl:call-template name="xslFormatAmount">
			<xsl:with-param name="xslAmount" select="$avAmount"/>
			<xsl:with-param name="xslAmountMode">1</xsl:with-param>
			<xsl:with-param name="xslAmountColor">3</xsl:with-param>
		</xsl:call-template>
		<xsl:value-of select="concat(' ', @id)"/>
		<!-- Дополнительно показываем свободные средства в процентах -->
		<xsl:if test="$mode = 1">
			<xsl:text> (</xsl:text>
			<xsl:call-template name="xslFormatRate">
				<xsl:with-param name="xslRate" select="$avAmount div ms:balanceAfterClearing/ms:amount"/>
				<xsl:with-param name="xslRateDecimal">2</xsl:with-param>
				<xsl:with-param name="xslRateColor">1</xsl:with-param>
			</xsl:call-template>
			<xsl:text>)</xsl:text>
		</xsl:if>
		<!-- Дополнительно показываем валюту -->
		<!-- <xsl:if test="$mode = 2"> 
		     <xsl:value-of select="concat(' ', @id)"/>
		</xsl:if> -->
	</xsl:template>
	<xsl:template match="ms:balance" mode="av-v4">
		<!-- Оценка свободных средств -->
		<xsl:variable name="tmpAv">
			<xsl:choose>
				<!-- Для RUB берем просто оценку свободных средств в рублях -->
				<xsl:when test="@id = 'RUB'">
					<xsl:value-of select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount"/>
				</xsl:when>
				<!-- Для USD пересчитываем рублевую оценку через фиксинг -->
				<xsl:when test="@id = 'USD'">
					<xsl:variable name="result" select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount div $Fixing-td-usd div (1 - $fx-risk-usd)"/>
					<xsl:value-of select="floor($result * 100) div 100"/>
				</xsl:when>
				<xsl:when test="@id = 'EUR'">
					<xsl:variable name="result" select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount div $Fixing-td-eur div (1 - $fx-risk-eur)"/>
					<xsl:value-of select="floor($result * 100) div 100"/>
				</xsl:when>
				<xsl:when test="@id = 'CHF'">
					<xsl:variable name="result" select="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount div $Fixing-td-chf div (1 - $fx-risk-chf)"/>
					<xsl:value-of select="floor($result * 100) div 100"/>
				</xsl:when>
			</xsl:choose>
		</xsl:variable>
		<!-- Сравниваем оценку с балансом -->
		<xsl:variable name="avAmount">
			<!-- Оценка меньше баланса = показываем оценку -->
			<xsl:if test="$tmpAv &lt; ms:balanceAfterClearing/ms:amount">
				<!-- Нет маржин-кола = показываем оценку -->
				<xsl:if test="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount &gt;= 0">
					<xsl:value-of select="$tmpAv"/>
				</xsl:if>
				<!-- Есть маржин-кол = показываем ноль -->
				<xsl:if test="parent::ms:settlementCode/ms:estimateAmountAvailable/ms:amount &lt; 0">0</xsl:if>
			</xsl:if>
			<!-- Оценка больше или равна балансу = показываем баланс -->
			<xsl:if test="$tmpAv &gt;= ms:balanceAfterClearing/ms:amount">
				<xsl:value-of select="ms:balanceAfterClearing/ms:amount"/>
			</xsl:if>
		</xsl:variable>
		<!-- Показываем результат -->
		<xsl:value-of select="$avAmount"/>
	</xsl:template>
	<xsl:template match="ms:settlementCode" mode="want-100">
		<xsl:param name="currency"/>
		<!--  -->
		<xsl:variable name="balance-rub">
			<xsl:call-template name="if-empty">
				<xsl:with-param name="node" select="ms:balance[ @id = 'RUB' ]/ms:balanceAfterClearing/ms:amount"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:variable name="balance-usd">
			<xsl:call-template name="if-empty">
				<xsl:with-param name="node" select="ms:balance[ @id = 'USD' ]/ms:balanceAfterClearing/ms:amount"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:variable name="im" select="ms:initialMarginMin/ms:amount"/>
		<xsl:variable name="add">
			<xsl:if test="$currency = 'RUB'">
				<xsl:variable name="temp" select="$im div $Fixing-td div ( 1 - $fx-risk-usd )"/>
				<xsl:value-of select="ceiling( $temp * 100 ) div 100 - $balance-usd"/>
			</xsl:if>
			<xsl:if test="$currency = 'USD'">
				<xsl:value-of select="$im - $balance-rub"/>
			</xsl:if>
		</xsl:variable>
		<!--  -->
		<!-- <xsl:variable name="result">
		     <xsl:value-of select="$add"/>
		     <xsl:text> </xsl:text>
		     <xsl:if test="$currency = 'RUB'">
		     <xsl:text>USD</xsl:text>
		</xsl:if>
		     <xsl:if test="$currency = 'USD'">
		     <xsl:text>RUB</xsl:text>
		</xsl:if>
		</xsl:variable> -->
		<!--  -->
		<!-- <div class="small">
		     <xsl:text>Вывести всё: </xsl:text>
		     <xsl:value-of select="$result"/>
		</div> -->
		<xsl:if test="$add &gt; 0">
			<div class="small text-nowrap grey">
				<xsl:text>Для 100%: +</xsl:text>
				<!-- <xsl:text>+ </xsl:text> -->
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="$add"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="currency">
						<xsl:if test="$currency = 'RUB'">USD</xsl:if>
						<xsl:if test="$currency = 'USD'">RUB</xsl:if>
					</xsl:with-param>
				</xsl:call-template>
			</div>
		</xsl:if>
		<!-- <xsl:if test="$add &lt;= 0">
		     <center>-</center>
		</xsl:if> -->
	</xsl:template>
	<xsl:template name="if-empty">
		<xsl:param name="node"/>
		<xsl:param name="value">0</xsl:param>
		<!--  -->
		<xsl:if test="$node">
			<xsl:value-of select="$node"/>
		</xsl:if>
		<xsl:if test="not($node)">
			<xsl:value-of select="$value"/>
		</xsl:if>
	</xsl:template>
	<xsl:template match="ms:balance" mode="details">
		<!--  -->
		<xsl:variable name="settlementCode" select="parent::ms:settlementCode/@id"/>
		<xsl:variable name="currency" select="@id"/>
		<xsl:variable name="payments_filter" select="$BULLETS[ ms:moexSpfiExt/ms:tradeInfo/ms:settlementCode = $settlementCode ]/fpml:bulletPayment[ fpml:payment/fpml:paymentAmount/fpml:currency = $currency ]"/>
		<xsl:call-template name="hr"/>
		<tr class="mark">
			<td class="mark" style="width: 50%">
				<table class="css-trades" align="right">
					<tr class="bg-grey">
						<th colspan="2">
							<xsl:if test="$lang = 'ru'">Расчеты</xsl:if>
							<xsl:if test="$lang = 'en'">Settlements</xsl:if>
							<xsl:text> / </xsl:text>
							<xsl:value-of select="@id"/>
						</th>
					</tr>
					<!-- Вечерний вывод -->
					<xsl:variable name="payments_nte" select="$payments_filter[ fpml:payment/fpml:paymentType = 'NT_E' ]"/>
					<xsl:if test="$payments_nte">
						<xsl:variable name="in" select="sum( $payments_nte/fpml:payment[ fpml:payerPartyReference/@href= 'NCCB' ]/fpml:paymentAmount/fpml:amount )"/>
						<xsl:variable name="out" select="sum( $payments_nte/fpml:payment[ fpml:receiverPartyReference/@href= 'NCCB' ]/fpml:paymentAmount/fpml:amount )"/>
						<xsl:variable name="yesterday" select="ms:balanceStartDay/ms:amount + $out - $in"/>
						<!--  -->
						<tr>
							<td>
								<xsl:if test="$lang = 'ru'">Баланс по итогам клиринга (</xsl:if>
								<xsl:if test="$lang = 'en'">After Clearing (</xsl:if>
								<xsl:call-template name="xslFormatDate">
									<xsl:with-param name="xslDate" select="$payments_nte[1]/fpml:payment/fpml:paymentDate/fpml:adjustedDate"/>
								</xsl:call-template>
								<xsl:text>)</xsl:text>
							</td>
							<td>
								<xsl:call-template name="xslFormatAmount">
									<xsl:with-param name="xslAmount" select="$yesterday"/>
									<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								</xsl:call-template>
								<xsl:text> </xsl:text>
								<xsl:value-of select="$currency"/>
							</td>
						</tr>
						<xsl:apply-templates select="$payments_nte" mode="NT_E"/>
						<td colspan="2" class="noborder" style="height: 10px;"/>
					</xsl:if>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Начало дня</xsl:if>
							<xsl:if test="$lang = 'en'">The Beginning Of The Day</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="ms:balanceStartDay"/>
							</xsl:call-template>
						</td>
					</tr>
					<!-- Ввод/вывод в ходе торгов -->
					<xsl:apply-templates select="$payments_filter[ fpml:payment/fpml:paymentType = 'NT' ]" mode="NT"/>
					<xsl:apply-templates select="$payments_filter[ fpml:payment/fpml:paymentType = 'IM_FEE' ]" mode="IM_FEE"/>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Перед клирингом</xsl:if>
							<xsl:if test="$lang = 'en'">Before Clearing</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="ms:balanceBeforeClearing"/>
							</xsl:call-template>
						</td>
					</tr>
					<td colspan="2" class="noborder" style="height: 10px;"/>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Нетто-обязательства</xsl:if>
							<xsl:if test="$lang = 'en'">Liability</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="ms:liability/ms:liabilityAmount"/>
							</xsl:call-template>
							<!-- checker -->
							<xsl:call-template name="checker">
								<xsl:with-param name="checkthis" select="ms:liability/ms:liabilityAmount"/>
								<xsl:with-param name="mode">la</xsl:with-param>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Платежи</xsl:if>
							<xsl:if test="$lang = 'en'">Payments</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="ms:payments"/>
							</xsl:call-template>
							<!-- checker -->
							<xsl:call-template name="checker">
								<xsl:with-param name="checkthis" select="ms:payments"/>
								<xsl:with-param name="mode">pa</xsl:with-param>
							</xsl:call-template>
						</td>
					</tr>
					<td colspan="2" class="noborder" style="height: 10px;"/>
					<!-- После клиринга -->
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">После клиринга</xsl:if>
							<xsl:if test="$lang = 'en'">After Clearing</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="ms:balanceAfterClearing"/>
							</xsl:call-template>
							<!-- checker -->
							<xsl:call-template name="checker">
								<xsl:with-param name="checkthis" select="ms:balanceAfterClearing"/>
								<xsl:with-param name="mode">baf</xsl:with-param>
							</xsl:call-template>
						</td>
					</tr>
				</table>
			</td>
			<td class="mark" style="width: 50%">
				<xsl:apply-templates select="ms:liability/ms:liabilityDetails"/>
				<xsl:if test="@id = 'RUB'">
					<xsl:apply-templates select="/ms:moexSpfiReport/ms:fpml/ms:trade/ms:moexSpfiExt[ ms:tradeInfo/ms:settlementCode = current()/parent::ms:settlementCode/@id ]/ms:paymentBase"/>
				</xsl:if>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="ms:liabilityDetails">
		<table class="css-trades" align="left">
			<tr>
				<th colspan="3" class="bg-grey">
					<xsl:if test="$lang = 'ru'">Нетто-обязательства по типам</xsl:if>
					<xsl:if test="$lang = 'en'">Liability Details</xsl:if>
					<xsl:text> / </xsl:text>
					<xsl:value-of select="ancestor::ms:balance/@id"/>
				</th>
			</tr>
			<xsl:apply-templates select="ms:liabilityGroup[ @id != 'PRC_DM' ]"/>
			<xsl:apply-templates select="ms:liabilityGroup[ @id = 'PRC_DM' ]"/>
			<!-- checker -->
			<xsl:if test="$check">
				<tr>
					<td>
						<span class="blue">Сумма</span>
					</td>
					<td>
						<xsl:value-of select="format-number( sum ( ms:liabilityGroup/ms:liabilityAmount/ms:amount ) , '#.##' )"/>
						<br/>
						<span class="grey small">
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="sum ( ms:liabilityGroup/ms:liabilityAmount/ms:amount )"/>
								<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							</xsl:call-template>
						</span>
					</td>
				</tr>
				<!-- <tr>
				     <td>
				     <span class="blue">Бирж сбор сегодня</span>
				</td>
				     <td>
				     <xsl:call-template name="paymentsSum2">
				     <xsl:with-param name="currency">RUB</xsl:with-param>
				     <xsl:with-param name="type">SCMC1</xsl:with-param>
				</xsl:call-template>
				</td>
				</tr> -->
				<!-- <tr>
				     <td>
				     <span class="blue">Клир сбор сегодня</span>
				</td>
				     <td>
				     <xsl:call-template name="paymentsSum2">
				     <xsl:with-param name="currency">RUB</xsl:with-param>
				     <xsl:with-param name="type">SCMC2</xsl:with-param>
				</xsl:call-template>
				</td>
				</tr> -->
			</xsl:if>
		</table>
	</xsl:template>
	<xsl:template match="ms:liabilityGroup">
		<tr>
			<td>
				<xsl:apply-templates select="ms:liabilityType"/>
			</td>
			<td>
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="ms:liabilityAmount"/>
				</xsl:call-template>
				<!-- checker -->
				<xsl:call-template name="checker">
					<xsl:with-param name="checkthis" select="(.)"/>
					<xsl:with-param name="mode">ld</xsl:with-param>
				</xsl:call-template>
				<xsl:if test="$check">
					<span class="grey text-nowrap">
						<xsl:call-template name="sum101">
							<xsl:with-param name="currency" select="ancestor::ms:balance/@id"/>
							<xsl:with-param name="type" select="@id"/>
							<xsl:with-param name="scode" select="ancestor::ms:settlementCode/ms:settlementCodeId"/>
						</xsl:call-template>
					</span>
					<xsl:if test="@id != ms:liabilityType">
						<div class="red">liabilityGroup id error</div>
					</xsl:if>
				</xsl:if>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="ms:liabilityType">
		<xsl:choose>
			<xsl:when test="(.) = 'SCFVM'">
				<xsl:if test="$lang = 'ru'">Вариационная маржа</xsl:if>
				<xsl:if test="$lang = 'en'">Variation Margin</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCFDM'">
				<xsl:if test="$lang = 'ru'">Депозитная маржа</xsl:if>
				<xsl:if test="$lang = 'en'">Deposit Margin</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'RTN_DM'">
				<xsl:if test="$lang = 'ru'">Возврат накопленной депозитной маржи</xsl:if>
				<xsl:if test="$lang = 'en'">Deposit Margin Return</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCMC1'">
				<xsl:if test="$lang = 'ru'">Биржевая комиссия</xsl:if>
				<xsl:if test="$lang = 'en'">Exchange Fee</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCMC2'">
				<xsl:if test="$lang = 'ru'">Клиринговая комиссия</xsl:if>
				<xsl:if test="$lang = 'en'">Clearing Fee</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'PRC_DM'">
				<xsl:if test="$lang = 'ru'">Проценты на обеспечение</xsl:if>
				<xsl:if test="$lang = 'en'">Accrued Interest on Initial Margin</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'PRC_NM'">
				<xsl:if test="$lang = 'ru'">Проценты на накопленную ДМ</xsl:if>
				<xsl:if test="$lang = 'en'">Accrued Interest On Deposit Margin</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'PNLTY'">
				<xsl:if test="$lang = 'ru'">Штраф</xsl:if>
				<xsl:if test="$lang = 'en'">Penalty</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'FX01' or (.) = 'FX02'">
				<xsl:if test="$lang = 'ru'">Обмен номиналами (FX Swap)</xsl:if>
				<xsl:if test="$lang = 'en'">FX Swap Notional Exchange</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'FWD01' or (.) = 'FWD02'">
				<xsl:if test="$lang = 'ru'">Обмен номиналами (FX)</xsl:if>
				<xsl:if test="$lang = 'en'">FWD Notional Exchange</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'DP01' or (.) = 'DT01'">
				<xsl:if test="$lang = 'ru'">Обмен номиналами (XCCY)</xsl:if>
				<xsl:if test="$lang = 'en'">XCCY Notional Exchange</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'DP02' or (.) = 'DT02'">
				<xsl:if test="$lang = 'ru'">Обратный обмен номиналами (XCCY)</xsl:if>
				<xsl:if test="$lang = 'en'">XCCY Notional Exchange</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'DP03' or (.) = 'DT03'">
				<xsl:if test="$lang = 'ru'">Процентный платеж</xsl:if>
				<xsl:if test="$lang = 'en'">Interest Payment</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCBNS'">
				<xsl:if test="$lang = 'ru'">Премия</xsl:if>
				<xsl:if test="$lang = 'en'">Premium</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'NDF0'">
				<xsl:if test="$lang = 'ru'">Платеж по расчетному форварду</xsl:if>
				<xsl:if test="$lang = 'en'">Forward Final Payment</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCMOD'">
				<xsl:if test="$lang = 'ru'">Клиринговый сбор за изменение параметров сделки</xsl:if>
				<xsl:if test="$lang = 'en'">Clearing Fee for Trade Amendment</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCCVM'">
				<xsl:if test="$lang = 'ru'">Платеж при изменении валюты ВМ</xsl:if>
				<xsl:if test="$lang = 'en'">CSA Change Payment</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCCDM'">
				<xsl:if test="$lang = 'ru'">Платеж при изменении валюты ДМ</xsl:if>
				<xsl:if test="$lang = 'en'">CSA Change Payment</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'PNLSC'">
				<xsl:if test="$lang = 'ru'">Платеж при изменении/досрочном прекращении сделки</xsl:if>
				<xsl:if test="$lang = 'en'">Trade Amendment/Termination Payment</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCCNL'">
				<xsl:if test="$lang = 'ru'">Клиринговый сбор за досрочное прекращение сделки</xsl:if>
				<xsl:if test="$lang = 'en'">Clearing Fee for Trade Termination</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'SCPRM'">
				<xsl:if test="$lang = 'ru'">Премия по опциону</xsl:if>
				<xsl:if test="$lang = 'en'">Premium</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'OPTFX01'">
				<xsl:if test="$lang = 'ru'">Исполнение опциона</xsl:if>
				<xsl:if test="$lang = 'en'">Option Exercise</xsl:if>
			</xsl:when>
			<xsl:when test="(.) = 'OPTFX02'">
				<xsl:if test="$lang = 'ru'">Исполнение опциона</xsl:if>
				<xsl:if test="$lang = 'en'">Option Exercise</xsl:if>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="(.)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="fpml:bulletPayment" mode="NT">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Ввод/вывод в ходе торгов</xsl:if>
				<xsl:if test="$lang = 'en'">Change Before Clearing</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="fpml:payment"/>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:bulletPayment" mode="IM_FEE">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Комиссия за учет обеспечения</xsl:if>
				<!-- <xsl:if test="$lang = 'en'">Change Before Clearing</xsl:if> -->
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="fpml:payment"/>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:bulletPayment" mode="NT_E">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Ввод/вывод после клиринга (</xsl:if>
				<xsl:if test="$lang = 'en'">Change After Clearing (</xsl:if>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:payment/fpml:paymentDate/fpml:adjustedDate"/>
				</xsl:call-template>
				<xsl:text>)</xsl:text>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="fpml:payment"/>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
		<td colspan="2" class="noborder" style="height: 10px;"/>
	</xsl:template>
	<xsl:template match="ms:paymentBase">
		<!-- Проценты на ГО -->
		<table class="prc-dm">
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">Срок</xsl:if>
					<xsl:if test="$lang = 'en'">Term</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:startDate"/>
						<xsl:with-param name="xslDate2" select="ms:maturityDate"/>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">База для начисления</xsl:if>
					<xsl:if test="$lang = 'en'">Basis</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:principal"/>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">Ставка</xsl:if>
					<xsl:if test="$lang = 'en'">Rate</xsl:if>
				</td>
				<td>
					<xsl:call-template name="xslFormatRate">
						<xsl:with-param name="xslRate" select="ms:fixedRate"/>
					</xsl:call-template>
				</td>
			</tr>
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">Конвенция расчета дней</xsl:if>
					<xsl:if test="$lang = 'en'">Day Count Fraction</xsl:if>
				</td>
				<td>
					<xsl:apply-templates select="ms:dayCountFraction"/>
				</td>
			</tr>
			<tr>
				<td colspan="2">
					<xsl:if test="$lang = 'ru'">
						<a href="http://moex.com/s1240" target="_blank">Порядок начисления процентов на ИКО на рынке СПФИ</a>
					</xsl:if>
					<xsl:if test="$lang = 'en'">
						<a href="http://www.moex.com/s1360" target="_blank">Interest on initial margin</a>
					</xsl:if>
				</td>
			</tr>
		</table>
	</xsl:template>
	<!-- Список сделок -->
	<xsl:template name="Trade-list">
		<xsl:if test="$Num-trades &gt; 1">
			<a name="link-trade"/>
			<table class="mark">
				<xsl:call-template name="MarkHeader">
					<xsl:with-param name="MarkHeaderName">
						<xsl:if test="$lang = 'ru'">Быстрая навигация по сделкам</xsl:if>
						<xsl:if test="$lang = 'en'">List Of Trades</xsl:if>
					</xsl:with-param>
					<xsl:with-param name="MarkHeaderTopEnabler">1</xsl:with-param>
				</xsl:call-template>
				<tr class="mark">
					<td class="mark" colspan="2">
						<xsl:if test="not($check)">
							<div class="main-link-trade">
								<!-- <span>
								     <span/>
								     <span>Номер</span>
								     <span>Дата</span>
								     <span>Продукт</span>
								     <span>Тип</span>
								     <span>CSA</span>
								     <span>Дата окончания</span>
								</span> -->
								<xsl:if test="$sort = 'id'">
									<xsl:apply-templates select="$TRADES" mode="link">
										<xsl:sort select="fpml:tradeHeader/fpml:partyTradeIdentifier[1]/fpml:tradeId" order="descending" data-type="number"/>
									</xsl:apply-templates>
								</xsl:if>
								<xsl:if test="$sort = 'date'">
									<xsl:apply-templates select="$TRADES" mode="link">
										<xsl:sort select="fpml:tradeHeader/fpml:partyTradeIdentifier[1]/fpml:tradeId" order="ascending"/>
									</xsl:apply-templates>
								</xsl:if>
								<xsl:if test="$sort = 'term'">
									<xsl:apply-templates select="$TRADES" mode="link">
										<xsl:sort select="fpml:fxSingleLeg/fpml:valueDate" order="ascending"/>
									</xsl:apply-templates>
								</xsl:if>
							</div>
						</xsl:if>
						<xsl:if test="$check">
							<table class="table-144">
								<thead>
									<tr>
										<td>event</td>
										<td>trade id</td>
										<td>product</td>
										<td>trade date</td>
										<td>type</td>
										<td>csa</td>
										<td>last day</td>
										<td>fwd fixing</td>
										<td>npv</td>
										<td>вм / дм</td>
										<td>% дм</td>
										<td>contra</td>
										<td/>
										<td/>
									</tr>
								</thead>
								<xsl:if test="$sort = 'id'">
									<xsl:apply-templates select="$TRADES" mode="link-check">
										<xsl:sort select="fpml:tradeHeader/fpml:partyTradeIdentifier[1]/fpml:tradeId" order="descending"/>
									</xsl:apply-templates>
								</xsl:if>
								<xsl:if test="$sort = 'date'">
									<xsl:apply-templates select="$TRADES" mode="link-check">
										<xsl:sort select="fpml:tradeHeader/fpml:partyTradeIdentifier[1]/fpml:tradeId" order="ascending"/>
									</xsl:apply-templates>
								</xsl:if>
								<xsl:if test="$sort = 'term'">
									<xsl:apply-templates select="$TRADES" mode="link-check">
										<xsl:sort select="fpml:fxSingleLeg/fpml:valueDate" order="ascending"/>
									</xsl:apply-templates>
								</xsl:if>
							</table>
						</xsl:if>
					</td>
				</tr>
			</table>
		</xsl:if>
	</xsl:template>
	<xsl:template match="ms:trade | fpml:termination/fpml:originalTrade" mode="link">
		<a href="#{@id}">
			<span>
				<!-- Иконка = Новая сделка -->
				<xsl:if test="fpml:tradeHeader/fpml:tradeDate = $Today">
					<xsl:if test="$lang = 'ru'">
						<span title="Новая сделка">☆</span>
					</xsl:if>
					<xsl:if test="$lang = 'en'">
						<span title="New Trade">☆</span>
					</xsl:if>
				</xsl:if>
				<!-- Иконка = Изменение сделки -->
				<xsl:if test="name(parent::*) = 'ms:amendment'">
					<xsl:if test="$lang = 'ru'">
						<span title="Изменение сделки">✍</span>
					</xsl:if>
					<xsl:if test="$lang = 'en'">
						<span title="Trade Amendment">✍</span>
					</xsl:if>
				</xsl:if>
				<!-- Иконка = Досрочное прекращение -->
				<xsl:if test="parent::fpml:termination">
					<xsl:if test="$lang = 'ru'">
						<span title="Досрочное прекращение сделки">✕</span>
					</xsl:if>
					<xsl:if test="$lang = 'en'">
						<span title="Trade Termination">✕</span>
					</xsl:if>
				</xsl:if>
			</span>
			<span>
				<xsl:text>№ </xsl:text>
				<b>
					<xsl:value-of select="fpml:tradeHeader/fpml:partyTradeIdentifier/fpml:tradeId"/>
				</b>
			</span>
			<span>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:tradeHeader/fpml:tradeDate"/>
				</xsl:call-template>
			</span>
			<span>
				<xsl:value-of select="*/fpml:productType"/>
			</span>
			<span>
				<xsl:value-of select="fpml:swap/fpml:swapStream/fpml:calculationPeriodAmount/fpml:calculation/fpml:floatingRateCalculation/fpml:floatingRateIndex"/>
			</span>
			<span>
				<xsl:value-of select="fpml:tradeHeader/fpml:partyTradeInformation/fpml:category"/>
			</span>
			<span>
				<xsl:value-of select="ms:moexSpfiExt/ms:tradeInfo/ms:csa"/>
			</span>
			<!-- <span>
			     <xsl:call-template name="xslFormatDate">
			     <xsl:with-param name="xslDate" select="fpml:fxSingleLeg/fpml:valueDate | fpml:fxSwap/fpml:farLeg/fpml:valueDate | fpml:swap/fpml:swapStream/fpml:cashflows/fpml:paymentCalculationPeriod[last()]/fpml:adjustedPaymentDate"/>
			</xsl:call-template>
			</span> -->
		</a>
	</xsl:template>
	<xsl:template match="ms:trade | fpml:termination/fpml:originalTrade" mode="link-check">
		<tr>
			<td>
				<!-- Иконка = Новая сделка -->
				<xsl:if test="fpml:tradeHeader/fpml:tradeDate = $Today">
					<div>☆</div>
				</xsl:if>
				<!-- Иконка = Изменение сделки -->
				<xsl:if test="name(parent::*) = 'ms:amendment'">
					<div>✍</div>
				</xsl:if>
				<!-- Иконка = Досрочное прекращение -->
				<xsl:if test="name(parent::*) = 'fpml:termination'">
					<div>✕</div>
				</xsl:if>
				<xsl:if test="key( 'EndDate' , @id ) = $Today">
					<!-- Последний день сделки -->
					<div>LAST DAY</div>
				</xsl:if>
			</td>
			<td>
				<a href="#{@id}">
					<xsl:value-of select="fpml:tradeHeader/fpml:partyTradeIdentifier/fpml:tradeId"/>
				</a>
			</td>
			<td>
				<xsl:value-of select="*/fpml:productType"/>
			</td>
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:tradeHeader/fpml:tradeDate"/>
				</xsl:call-template>
			</td>
			<td>
				<xsl:value-of select="fpml:tradeHeader/fpml:partyTradeInformation/fpml:category"/>
			</td>
			<td>
				<xsl:value-of select="ms:moexSpfiExt/ms:tradeInfo/ms:csa"/>
			</td>
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:fxSingleLeg/fpml:valueDate | fpml:fxSwap/fpml:farLeg/fpml:valueDate | fpml:swap/fpml:swapStream/fpml:cashflows/fpml:paymentCalculationPeriod[last()]/fpml:adjustedPaymentDate"/>
				</xsl:call-template>
			</td>
			<!-- Дата фиксинга -->
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:fxSingleLeg/fpml:nonDeliverableSettlement/fpml:fixing/fpml:fixingDate"/>
				</xsl:call-template>
			</td>
			<td>
				<xsl:value-of select="ms:moexSpfiExt/ms:npv/ms:npvPoint[last()]/ms:npvValue/ms:npvAmount"/>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="ms:moexSpfiExt/ms:npv/ms:npvPoint/ms:npvPayment[fpml:paymentDate/fpml:adjustedDate = $Today and ( fpml:paymentType = 'SCFVM' or fpml:paymentType = 'SCFDM' or fpml:paymentType = 'RTN_DM')]"/>
					<xsl:with-param name="hideCurrency">1</xsl:with-param>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="ms:moexSpfiExt/ms:npv/ms:npvPoint/ms:npvPayment[fpml:paymentDate/fpml:adjustedDate = $Today and fpml:paymentType = 'PRC_NM']"/>
					<xsl:with-param name="hideCurrency">1</xsl:with-param>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</td>
			<td>
				<xsl:apply-templates select="fpml:tradeHeader/fpml:partyTradeInformation/fpml:relatedParty/fpml:partyReference/@href" mode="v144"/>
			</td>
			<td>
				<xsl:value-of select="count( fpml:swap/fpml:swapStream/fpml:cashflows/fpml:paymentCalculationPeriod )"/>
			</td>
			<td>
				<xsl:if test="fpml:swap/fpml:swapStream/fpml:calculationPeriodDates/fpml:effectiveDate/fpml:unadjustedDate = $Today">!!!</xsl:if>
				<xsl:value-of select="fpml:swap/fpml:swapStream/fpml:calculationPeriodDates/fpml:effectiveDate/fpml:unadjustedDate"/>
			</td>
		</tr>
	</xsl:template>
	<!-- NPV-->
	<xsl:template name="npv-sum">
		<xsl:if test="$isReportDeals = 'False'">
			<xsl:if test="$npvSum">
				<hr/>
				<center>
					<table class="css-trades">
						<thead>
							<tr>
								<xsl:if test="$lang = 'ru'">
									<th>Валюта</th>
									<th>Сумма NPV по всем сделкам</th>
									<th>Сумма будущих платежей</th>
								</xsl:if>
								<xsl:if test="$lang = 'en'">
									<th>Currency</th>
									<th>Overall NPV Sum</th>
									<th>Overall Cashflows Sum</th>
								</xsl:if>
							</tr>
						</thead>
						<tbody>
							<xsl:call-template name="npv-sum-calc">
								<xsl:with-param name="currency">RUB</xsl:with-param>
							</xsl:call-template>
							<xsl:call-template name="npv-sum-calc">
								<xsl:with-param name="currency">USD</xsl:with-param>
							</xsl:call-template>
							<xsl:call-template name="npv-sum-calc">
								<xsl:with-param name="currency">EUR</xsl:with-param>
							</xsl:call-template>
							<xsl:call-template name="npv-sum-calc">
								<xsl:with-param name="currency">CHF</xsl:with-param>
							</xsl:call-template>
							<xsl:call-template name="npv-sum-calc">
								<xsl:with-param name="currency">CNY</xsl:with-param>
							</xsl:call-template>
						</tbody>
					</table>
				</center>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<xsl:template name="npv-sum-calc">
		<xsl:param name="currency"/>
		<tr>
			<td>
				<center>
					<xsl:value-of select="$currency"/>
				</center>
			</td>
			<td>
				<xsl:variable name="last-date" select="//ms:npv/ms:npvPoint[ last() ][ ms:npvValue/ms:npvCurrency = $currency ]/ms:npvDate"/>
				<div align="center">
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="sum(//ms:npv/ms:npvPoint[ last() ]/ms:npvValue[ ms:npvCurrency = $currency ]/ms:npvAmount)"/>
						<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						<xsl:with-param name="xslAmountColor">2</xsl:with-param>
					</xsl:call-template>
				</div>
				<xsl:if test="$last-date != $Today">
					<div class="small grey" align="center">
						<xsl:text>* Cегодня расчетов в валюте не было, данные представлены по состоянию на </xsl:text>
						<xsl:call-template name="xslFormatDate">
							<xsl:with-param name="xslDate" select="$last-date"/>
						</xsl:call-template>
					</div>
				</xsl:if>
			</td>
			<td>
				<div align="center">
					<xsl:call-template name="cf-sum-calc">
						<xsl:with-param name="currency" select="$currency"/>
					</xsl:call-template>
				</div>
			</td>
		</tr>
	</xsl:template>
	<xsl:template name="cf-sum-calc">
		<xsl:param name="currency"/>
		<xsl:variable name="sum-p" select="sum( $TRADES/fpml:swap/fpml:swapStream[ fpml:payerPartyReference/@href = 'NCCB' ]/fpml:cashflows/fpml:paymentCalculationPeriod[ translate( fpml:adjustedPaymentDate , '-' , '' ) &gt; $Today2 ]/fpml:forecastPaymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
		<xsl:variable name="sum-m" select="sum( $TRADES/fpml:swap/fpml:swapStream[ fpml:receiverPartyReference/@href = 'NCCB' ]/fpml:cashflows/fpml:paymentCalculationPeriod[ translate( fpml:adjustedPaymentDate , '-' , '' ) &gt; $Today2 ]/fpml:forecastPaymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
		<xsl:call-template name="xslFormatAmount">
			<xsl:with-param name="xslAmount" select="$sum-p - $sum-m"/>
			<xsl:with-param name="xslAmountMode">1</xsl:with-param>
			<xsl:with-param name="xslAmountColor">2</xsl:with-param>
		</xsl:call-template>
	</xsl:template>
	<!-- Сделки -->
	<xsl:template name="Trades">
		<xsl:if test="$sort = 'id'">
			<xsl:apply-templates select="$TRADES" mode="info">
				<xsl:sort select="fpml:tradeHeader/fpml:partyTradeIdentifier[1]/fpml:tradeId" order="descending" data-type="number"/>
			</xsl:apply-templates>
		</xsl:if>
		<xsl:if test="$sort = 'date'">
			<xsl:apply-templates select="$TRADES" mode="info">
				<xsl:sort select="fpml:tradeHeader/fpml:partyTradeIdentifier[1]/fpml:tradeId" order="ascending"/>
			</xsl:apply-templates>
		</xsl:if>
		<xsl:if test="$sort = 'term'">
			<xsl:apply-templates select="$TRADES" mode="info">
				<xsl:sort select="fpml:fxSingleLeg/fpml:valueDate" order="ascending"/>
			</xsl:apply-templates>
		</xsl:if>
	</xsl:template>
	<xsl:template match="ms:trade | fpml:termination/fpml:originalTrade" mode="info">
		<xsl:variable name="tradeCategory" select="fpml:tradeHeader/fpml:partyTradeInformation/fpml:category"/>
		<!-- Блок \\\ Одна сделка -->
		<a name="{@id}"/>
		<xsl:if test="$Num-trades = 1">
			<a name="link-trade"/>
		</xsl:if>
		<table class="mark" style="page-break-before: always">
			<!-- Блок \\\ Заголовок -->
			<xsl:call-template name="MarkHeader">
				<xsl:with-param name="MarkHeaderName">
					<xsl:if test="$lang = 'ru'">Сделка № </xsl:if>
					<xsl:if test="$lang = 'en'">Trade ID: </xsl:if>
					<xsl:value-of select="fpml:tradeHeader/fpml:partyTradeIdentifier/fpml:tradeId"/>
				</xsl:with-param>
				<xsl:with-param name="MarkHeaderTopEnabler">1</xsl:with-param>
				<xsl:with-param name="MarkHeaderTradesEnabler">1</xsl:with-param>
			</xsl:call-template>
			<!--  -->
			<xsl:call-template name="TradeBadge"/>
			<!-- Блок \\\ tradeHeader + moexSpfiExt -->
			<xsl:apply-templates select="fpml:tradeHeader">
				<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
			</xsl:apply-templates>
			<xsl:call-template name="hr"/>
			<!-- Блок \\\ Экономика -->
			<xsl:apply-templates select="fpml:fxSwap"/>
			<xsl:apply-templates select="fpml:swap"/>
			<xsl:apply-templates select="fpml:fxSingleLeg"/>
			<xsl:apply-templates select="fpml:fxOption"/>
			<xsl:call-template name="hr"/>
			<!-- Блок \\\ NPV (ВМ) + cashflows -->
			<tr class="mark">
				<td class="mark" style="width: 50%" align="right">
					<xsl:apply-templates select="ms:moexSpfiExt/ms:npv">
						<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					</xsl:apply-templates>
				</td>
				<td class="mark" style="width: 50%" align="left">
					<xsl:if test="fpml:swap/fpml:swapStream/fpml:cashflows">
						<span class="bold">
							<xsl:if test="$lang = 'ru'">График платежей</xsl:if>
							<xsl:if test="$lang = 'en'">Cashflows</xsl:if>
						</span>
						<!-- Переключатель для скрытых блоков -->
						<xsl:choose>
							<xsl:when test="$settingsDetails = 'off'">
								<xsl:call-template name="Cashflows"/>
							</xsl:when>
							<xsl:when test="$settingsDetails = 'hide'">
								<p>
									<span title="Скрытые блоки отключены в настройках.">• • •</span>
								</p>
							</xsl:when>
							<xsl:when test="$settingsDetails = 'close'">
								<br/>
								<label for="{generate-id( fpml:swap/fpml:swapStream/fpml:cashflows )}" class="link">
									<xsl:if test="$lang = 'ru'">Показать/скрыть график платежей</xsl:if>
									<xsl:if test="$lang = 'en'">Show/Hide Cashflows</xsl:if>
								</label>
								<input id="{generate-id( fpml:swap/fpml:swapStream/fpml:cashflows )}" type="checkbox" checked="checked"/>
								<div class="css-more">
									<xsl:call-template name="Cashflows"/>
								</div>
							</xsl:when>
							<xsl:when test="$settingsDetails = 'open'">
								<br/>
								<label for="{generate-id( fpml:swap/fpml:swapStream/fpml:cashflows )}" class="link">
									<xsl:if test="$lang = 'ru'">Показать/скрыть график платежей</xsl:if>
									<xsl:if test="$lang = 'en'">Show/Hide Cashflows</xsl:if>
								</label>
								<input id="{generate-id( fpml:swap/fpml:swapStream/fpml:cashflows )}" type="checkbox"/>
								<div class="css-more">
									<xsl:call-template name="Cashflows"/>
								</div>
							</xsl:when>
						</xsl:choose>
					</xsl:if>
				</td>
			</tr>
		</table>
	</xsl:template>
	<xsl:template name="TradeBadge">
		<!-- Новая сделка -->
		<xsl:if test="fpml:tradeHeader/fpml:tradeDate = $Today">
			<td colspan="2" class="bg-green2" style="padding: 8px 20px;">
				<xsl:if test="$lang = 'ru'">Новая сделка</xsl:if>
				<xsl:if test="$lang = 'en'">New trade</xsl:if>
			</td>
		</xsl:if>
		<!-- tmp amendment warning -->
		<xsl:if test="name(parent::*) = 'ms:amendment'">
			<tr>
				<td colspan="2" class="bg-yellow" style="padding: 8px 20px;">
					<xsl:if test="$lang = 'ru'">Изменение параметров сделки</xsl:if>
					<xsl:if test="$lang = 'en'">Trade amendment</xsl:if>
				</td>
			</tr>
		</xsl:if>
		<!-- tmp termination warning -->
		<xsl:if test="name(parent::*) = 'ms:termination'">
			<tr>
				<td colspan="2" class="bg-red2" style="padding: 8px 20px;">
					<xsl:if test="$lang = 'ru'">Досрочное прекращение сделки</xsl:if>
					<xsl:if test="$lang = 'en'">Trade termination</xsl:if>
				</td>
			</tr>
		</xsl:if>
		<!-- Платежи при изменении / терминации -->
		<xsl:if test="parent::ms:amendment/ms:payment | parent::ms:amendment/ms:otherPartyPayment | parent::ms:termination/ms:payment | parent::ms:termination/ms:otherPartyPayment">
			<tr>
				<td colspan="2" class="bg-grey" style="padding: 8px 20px;">
					<xsl:for-each select="parent::ms:amendment/ms:payment">
						<xsl:if test="$lang = 'ru'">Платеж при изменении параметров сделки: </xsl:if>
						<xsl:if test="$lang = 'en'">Trade Amendment Payment: </xsl:if>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="(.)"/>
							<xsl:with-param name="color">2</xsl:with-param>
						</xsl:call-template>
						<br/>
					</xsl:for-each>
					<xsl:for-each select="parent::ms:amendment/ms:otherPartyPayment">
						<xsl:if test="$lang = 'ru'">Клиринговый сбор за изменение параметров сделки: </xsl:if>
						<xsl:if test="$lang = 'en'">Trade Amendment Clearing Fee: </xsl:if>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="(.)"/>
						</xsl:call-template>
						<br/>
					</xsl:for-each>
					<xsl:for-each select="parent::ms:termination/ms:payment">
						<xsl:if test="$lang = 'ru'">Платеж при досрочном прекращении сделки: </xsl:if>
						<xsl:if test="$lang = 'en'">Trade Termination Payment: </xsl:if>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="(.)"/>
							<xsl:with-param name="color">2</xsl:with-param>
						</xsl:call-template>
						<br/>
					</xsl:for-each>
					<xsl:for-each select="parent::ms:termination/ms:otherPartyPayment">
						<xsl:if test="$lang = 'ru'">Клиринговый сбор за досрочное прекращение сделки: </xsl:if>
						<xsl:if test="$lang = 'en'">Trade Termination Clearing Fee: </xsl:if>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="(.)"/>
						</xsl:call-template>
						<br/>
					</xsl:for-each>
				</td>
			</tr>
		</xsl:if>
	</xsl:template>
	<xsl:template match="fpml:tradeHeader">
		<xsl:param name="tradeCategory"/>
		<tr class="mark">
			<!-- tradeHeader -->
			<td class="mark" style="width: 50%">
				<xsl:if test="$check">
					<a href="#check{generate-id( parent::ms:trade/ms:moexSpfiExt/ms:npv )}">ВМ</a>
				</xsl:if>
				<table class="table css-trades">
					<tr>
						<th colspan="2">
							<xsl:if test="$lang = 'ru'">Основные параметры</xsl:if>
							<xsl:if test="$lang = 'en'">Trade Header</xsl:if>
						</th>
					</tr>
					<tr>
						<td>
							<!-- <span title="Можно сделать всплывающие подсказки&#10;причем с переносом строки"> -->
							<xsl:if test="$lang = 'ru'">Номер сделки</xsl:if>
							<xsl:if test="$lang = 'en'">Trade ID</xsl:if>
							<!-- </span> -->
						</td>
						<td>
							<xsl:value-of select="fpml:partyTradeIdentifier/fpml:tradeId"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Контрагент</xsl:if>
							<xsl:if test="$lang = 'en'">Counterparty</xsl:if>
						</td>
						<td>
							<xsl:apply-templates select="fpml:partyTradeIdentifier[2]/fpml:partyReference/@href" mode="v144"/>
						</td>
					</tr>
					<xsl:apply-templates select="fpml:partyTradeInformation/fpml:relatedParty[ fpml:role = 'CounterpartyForSecondTrade' ]"/>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Тип сделки</xsl:if>
							<xsl:if test="$lang = 'en'">Trade Type</xsl:if>
						</td>
						<td>
							<xsl:if test="$lang = 'ru'">
								<!-- psd 20200609-->
								<xsl:if test="$tradeCategory = 'Exchange'">Биржевая</xsl:if>
								<xsl:if test="$tradeCategory = 'OTC'">Внебиржевая</xsl:if>
								<xsl:if test="$tradeCategory = 'OTC Public'">Внебиржевая безадресная</xsl:if>
							</xsl:if>
							<xsl:if test="$lang = 'en'">
								<xsl:value-of select="$tradeCategory"/>
							</xsl:if>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Клиринговый идентификатор</xsl:if>
							<xsl:if test="$lang = 'en'">User ID</xsl:if>
						</td>
						<td>
							<xsl:value-of select="fpml:partyTradeInformation/fpml:trader"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Время заключения сделки</xsl:if>
							<xsl:if test="$lang = 'en'">Execution Date and Time</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatDate">
								<xsl:with-param name="xslDate" select="fpml:partyTradeInformation/fpml:executionDateTime"/>
							</xsl:call-template>
						</td>
					</tr>
					<xsl:if test="parent::fpml:originalTrade/parent::fpml:termination">
						<tr>
							<td>
								<xsl:if test="$lang = 'ru'">Дата терминации</xsl:if>
								<xsl:if test="$lang = 'en'">Termination Date</xsl:if>
							</td>
							<td>
								<xsl:call-template name="xslFormatDate">
									<xsl:with-param name="xslDate" select="parent::fpml:originalTrade/parent::fpml:termination/fpml:effectiveDate"/>
								</xsl:call-template>
							</td>
						</tr>
					</xsl:if>
				</table>
			</td>
			<!-- moexSpfiExt -->
			<td class="mark" style="width: 50%">
				<table class="table css-trades">
					<tr>
						<th colspan="2">
							<xsl:if test="$lang = 'ru'">Дополнительные параметры</xsl:if>
							<xsl:if test="$lang = 'en'">Additional Information</xsl:if>
						</th>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Тип инструмента</xsl:if>
							<xsl:if test="$lang = 'en'">Product Type</xsl:if>
						</td>
						<td>
							<xsl:value-of select="parent::*/*/fpml:productType"/>
							<xsl:if test="parent::*/fpml:fxSingleLeg/fpml:nonDeliverableSettlement">
								<xsl:text> </xsl:text>
								<xsl:if test="$lang = 'ru'">(расчетный)</xsl:if>
								<xsl:if test="$lang = 'en'">(Non Deliverable Settlement)</xsl:if>
							</xsl:if>
						</td>
					</tr>
					<xsl:if test="$check">
						<xsl:variable name="type" select="parent::*/*/fpml:productType"/>
						<tr>
							<td>
								<div>Для Репозитария</div>
								<small>
									<a href="http://repository.nsd.ru/versioned/current/taxonomy/productid(nsdrus)">[ Справочник ]</a>
								</small>
							</td>
							<td>
								<xsl:choose>
									<xsl:when test="$type = 'FXSWAP'">SVFWNNN</xsl:when>
									<xsl:when test="$type = 'OIS'">SPDWNNN</xsl:when>
									<xsl:when test="$type = 'IRS'">SPDWNNN</xsl:when>
									<xsl:when test="$type = 'FXOPTOTC'">OCEFNV</xsl:when>
									<xsl:when test="$type = 'XCCY'">SGDWNNN</xsl:when>
									<xsl:otherwise>???</xsl:otherwise>
								</xsl:choose>
							</td>
						</tr>
					</xsl:if>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Расчетный код</xsl:if>
							<xsl:if test="$lang = 'en'">Settlement Code</xsl:if>
						</td>
						<td>
							<xsl:value-of select="parent::*/ms:moexSpfiExt/ms:tradeInfo/ms:settlementCode"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Валюта расчетов (CSA)</xsl:if>
							<xsl:if test="$lang = 'en'">CSA</xsl:if>
						</td>
						<td>
							<xsl:value-of select="parent::*/ms:moexSpfiExt/ms:tradeInfo/ms:csa"/>
						</td>
					</tr>
					<xsl:if test="parent::*/ms:moexSpfiExt/ms:tradeInfo/ms:uti">
						<tr>
							<td>
								<xsl:if test="$lang = 'ru'">UTI</xsl:if>
								<xsl:if test="$lang = 'en'">UTI</xsl:if>
							</td>
							<td>
								<span class="small">
									<xsl:value-of select="parent::*/ms:moexSpfiExt/ms:tradeInfo/ms:uti"/>
									<xsl:if test="$check">
										<xsl:text> </xsl:text>
										<xsl:text>(</xsl:text>
										<xsl:value-of select="string-length( parent::*/ms:moexSpfiExt/ms:tradeInfo/ms:uti )"/>
										<xsl:text>)</xsl:text>
									</xsl:if>
								</span>
							</td>
						</tr>
					</xsl:if>
					<xsl:apply-templates select="parent::*/ms:moexSpfiExt/ms:tradeComment"/>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Дополнительный платеж</xsl:if>
							<xsl:if test="$lang = 'en'">Extra payment</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatPayment">
								<xsl:with-param name="xslPayment" select="parent::*/fpml:otherPartyPayment[fpml:paymentType = 'SCBNS'] | parent::*/fpml:swap/fpml:additionalPayment[fpml:paymentType = 'SCBNS']"/>
								<xsl:with-param name="xslShowDate">1</xsl:with-param>
								<xsl:with-param name="xslWithDim">1</xsl:with-param>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<td colspan="2" class="noborder">
							<xsl:call-template name="Fee"/>
						</td>
					</tr>
					<xsl:if test="$check">
						<xsl:for-each select="fpml:otherPartyPayment">
							<xsl:sort select="fpml:paymentType" order="ascending"/>
							<tr>
								<td>
									<span class="blue">
										<xsl:call-template name="xslFormatPayment">
											<xsl:with-param name="xslPayment" select="(.)"/>
										</xsl:call-template>
									</span>
								</td>
								<td>
									<span class="blue">
										<xsl:value-of select="fpml:paymentType"/>
									</span>
								</td>
							</tr>
						</xsl:for-each>
					</xsl:if>
				</table>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:relatedParty">
		<xsl:if test="$counterpartyForSecondTrade">
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">Сторона парного договора</xsl:if>
					<xsl:if test="$lang = 'en'">Related Party</xsl:if>
				</td>
				<td>
					<xsl:apply-templates select="fpml:partyReference/@href" mode="v144"/>
				</td>
			</tr>
		</xsl:if>
	</xsl:template>
	<xsl:template name="Fee">
		<xsl:if test="fpml:tradeDate = $Today">
			<xsl:call-template name="Fee-table"/>
		</xsl:if>
		<xsl:if test="fpml:tradeDate != $Today">
			<label for="{generate-id()}" class="link small">
				<xsl:if test="$lang = 'ru'">Показать сборы</xsl:if>
				<xsl:if test="$lang = 'en'">Show Fees</xsl:if>
			</label>
			<input id="{generate-id()}" type="checkbox" checked="checked"/>
			<div class="css-more">
				<xsl:call-template name="Fee-table"/>
			</div>
		</xsl:if>
	</xsl:template>
	<xsl:template name="Fee-table">
		<table class="prc-dm">
			<xsl:apply-templates select="parent::*/fpml:otherPartyPayment[ fpml:paymentType = 'SCMC1' ]" mode="fee"/>
			<xsl:apply-templates select="parent::*/fpml:otherPartyPayment[ fpml:paymentType = 'SCMC2' ]" mode="fee"/>
		</table>
	</xsl:template>
	<xsl:template match="fpml:otherPartyPayment" mode="fee">
		<xsl:variable name="type" select="fpml:paymentType"/>
		<tr>
			<td>
				<xsl:if test="$type = 'SCMC1'">
					<xsl:if test="$lang = 'ru'">Биржевой сбор</xsl:if>
					<xsl:if test="$lang = 'en'">Exchange Fee</xsl:if>
				</xsl:if>
				<xsl:if test="$type = 'SCMC2'">
					<xsl:if test="$lang = 'ru'">Клиринговый сбор</xsl:if>
					<xsl:if test="$lang = 'en'">Clearing Fee</xsl:if>
				</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="."/>
					<xsl:with-param name="xslShowPayer">1</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="ms:tradeComment">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Комментарий</xsl:if>
				<xsl:if test="$lang = 'en'">Comment</xsl:if>
			</td>
			<td>
				<span class="grey">
					<xsl:value-of select="."/>
				</span>
			</td>
		</tr>
	</xsl:template>
	<!-- \\\ FX SWAP \\\ -->
	<xsl:template match="fpml:fxSwap">
		<tr class="mark">
			<td class="mark" style="width: 50%">
				<table class="table css-trades">
					<!-- Вызов шаблона fxSwapLeg для nearLeg -->
					<xsl:apply-templates select="fpml:nearLeg"/>
				</table>
			</td>
			<td class="mark" style="width: 50%">
				<table class="table css-trades">
					<!-- Вызов шаблона fxSwapLeg для nearLeg -->
					<xsl:apply-templates select="fpml:farLeg"/>
				</table>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:nearLeg | fpml:farLeg">
		<tr>
			<th colspan="2">
				<xsl:choose>
					<xsl:when test="name(.) = 'nearLeg'">
						<xsl:if test="$lang = 'ru'">Первоначальный платеж</xsl:if>
						<xsl:if test="$lang = 'en'">Near Leg</xsl:if>
					</xsl:when>
					<xsl:when test="name(.) = 'farLeg'">
						<xsl:if test="$lang = 'ru'">Окончательный платеж</xsl:if>
						<xsl:if test="$lang = 'en'">Far Leg</xsl:if>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$ErrorText"/>
					</xsl:otherwise>
				</xsl:choose>
			</th>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Дата платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Value Date</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:valueDate"/>
				</xsl:call-template>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Сумма первого платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Amount 1</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="fpml:exchangedCurrency1"/>
				</xsl:call-template>
				<xsl:if test="$check">
					<div>
						<xsl:value-of select="fpml:exchangedCurrency1/fpml:paymentDate/fpml:unadjustedDate"/>
					</div>
				</xsl:if>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Сумма второго платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Amount 2</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="fpml:exchangedCurrency2"/>
				</xsl:call-template>
				<xsl:if test="$check">
					<div>
						<xsl:value-of select="fpml:exchangedCurrency2/fpml:paymentDate/fpml:unadjustedDate"/>
					</div>
				</xsl:if>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Курс</xsl:if>
				<xsl:if test="$lang = 'en'">Exchange Rate</xsl:if>
				<xsl:apply-templates select="fpml:exchangeRate/fpml:quotedCurrencyPair"/>
			</td>
			<td>
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="fpml:exchangeRate/fpml:rate"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
					<xsl:with-param name="xslAmountDecimal">6</xsl:with-param>
				</xsl:call-template>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Перенос платежей</xsl:if>
				<xsl:if test="$lang = 'en'">Date Adjustments</xsl:if>
			</td>
			<td>
				<xsl:apply-templates select="fpml:exchangedCurrency1/fpml:paymentDate/fpml:dateAdjustments"/>
			</td>
		</tr>
		<xsl:apply-templates select="fpml:dealtCurrency"/>
	</xsl:template>
	<xsl:template match="fpml:dealtCurrency">
		<xsl:variable name="currency">
			<xsl:if test="(.) = 'ExchangedCurrency1'">
				<xsl:value-of select="preceding-sibling::fpml:exchangedCurrency1/fpml:paymentAmount/fpml:currency"/>
			</xsl:if>
			<xsl:if test="(.) = 'ExchangedCurrency2'">
				<xsl:value-of select="preceding-sibling::fpml:exchangedCurrency2/fpml:paymentAmount/fpml:currency"/>
			</xsl:if>
		</xsl:variable>
		<!--  -->
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Торгуемая валюта</xsl:if>
				<xsl:if test="$lang = 'en'">Dealt Currency</xsl:if>
			</td>
			<td>
				<xsl:value-of select="$currency"/>
			</td>
		</tr>
	</xsl:template>
	<!-- \\\ SWAP \\\ -->
	<xsl:template match="fpml:swap">
		<tr class="mark">
			<!-- Первая нога (PAY) -->
			<td class="mark" style="width: 50%">
				<table class="table css-trades">
					<!-- Вызов шаблона swapLeg для swapStream -->
					<xsl:apply-templates select="fpml:swapStream[fpml:payerPartyReference/@href != 'NCCB']"/>
				</table>
			</td>
			<!-- Вторая нога (RECEIVE) -->
			<td class="mark" style="width: 50%">
				<table class="table css-trades">
					<!-- Вызов шаблона swapLeg для swapStream-->
					<xsl:apply-templates select="fpml:swapStream[fpml:payerPartyReference/@href = 'NCCB']"/>
				</table>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:swapStream">
		<tr>
			<th colspan="2">
				<!-- Фикс или флоат нога определяется по наличию элемента resetDates -->
				<xsl:if test="not(fpml:resetDates)">
					<xsl:if test="$lang = 'ru'">Поток с фиксированной ставкой</xsl:if>
					<xsl:if test="$lang = 'en'">Fixed Rate Stream</xsl:if>
				</xsl:if>
				<xsl:if test="fpml:resetDates">
					<xsl:if test="$lang = 'ru'">Поток с плавающей ставкой</xsl:if>
					<xsl:if test="$lang = 'en'">Floating Rate Stream</xsl:if>
				</xsl:if>
			</th>
		</tr>
		<xsl:if test="$check = 'swap'">
			<tr>
				<td colspan="2">
					<span class="black">Effective / Termination / Calculation Period</span>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">effectiveDate</span>
				</td>
				<td>
					<xsl:value-of select="fpml:calculationPeriodDates/fpml:effectiveDate"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">terminationDate</span>
				</td>
				<td>
					<xsl:value-of select="fpml:calculationPeriodDates/fpml:terminationDate"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">calculationPeriodDatesAdjustments</span>
				</td>
				<td>
					<xsl:value-of select="fpml:calculationPeriodDates/fpml:calculationPeriodDatesAdjustments/fpml:businessDayConvention"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">calculationPeriodFrequency</span>
				</td>
				<td>
					<xsl:value-of select="fpml:calculationPeriodDates/fpml:calculationPeriodFrequency"/>
				</td>
			</tr>
			<tr>
				<td colspan="2">Payment</td>
			</tr>
			<tr>
				<td>
					<span class="blue">paymentFrequency</span>
				</td>
				<td>
					<xsl:value-of select="fpml:paymentDates/fpml:paymentFrequency"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">payRelativeTo</span>
				</td>
				<td>
					<xsl:value-of select="fpml:paymentDates/fpml:payRelativeTo"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">paymentDaysOffset</span>
				</td>
				<td>
					<xsl:value-of select="fpml:paymentDates/fpml:paymentDaysOffset"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">paymentDatesAdjustments</span>
				</td>
				<td>
					<xsl:value-of select="fpml:paymentDates/fpml:paymentDatesAdjustments"/>
				</td>
			</tr>
			<tr>
				<td colspan="2">Reset</td>
			</tr>
			<tr>
				<td>
					<span class="blue">resetRelativeTo</span>
				</td>
				<td>
					<xsl:value-of select="fpml:resetDates/fpml:resetRelativeTo"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">fixingDates</span>
				</td>
				<td>
					<xsl:value-of select="fpml:resetDates/fpml:fixingDates"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">resetFrequency</span>
				</td>
				<td>
					<xsl:value-of select="fpml:resetDates/fpml:resetFrequency"/>
				</td>
			</tr>
			<tr>
				<td>
					<span class="blue">resetDatesAdjustments</span>
				</td>
				<td>
					<xsl:value-of select="fpml:resetDates/fpml:resetDatesAdjustments"/>
				</td>
			</tr>
		</xsl:if>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Плательщик</xsl:if>
				<xsl:if test="$lang = 'en'">Payer</xsl:if>
			</td>
			<td>
				<xsl:apply-templates select="fpml:payerPartyReference/@href" mode="v144"/>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Получатель</xsl:if>
				<xsl:if test="$lang = 'en'">Receiver</xsl:if>
			</td>
			<td>
				<xsl:apply-templates select="fpml:receiverPartyReference/@href" mode="v144"/>
			</td>
		</tr>
		<xsl:apply-templates select="fpml:calculationPeriodDates"/>
		<xsl:apply-templates select="fpml:paymentDates"/>
		<xsl:apply-templates select="fpml:calculationPeriodAmount"/>
		<xsl:apply-templates select="fpml:resetDates"/>
	</xsl:template>
	<xsl:template match="fpml:calculationPeriodDates">
		<tr>
			<td colspan="2" class="bold" style="text-align: center">
				<xsl:if test="$lang = 'ru'">Процентные периоды</xsl:if>
				<xsl:if test="$lang = 'en'">Calculation Period Dates</xsl:if>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Начало периода</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Дата начала срока</xsl:if>
				<xsl:if test="$lang = 'en'">Effective Date</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:effectiveDate/fpml:unadjustedDate"/>
				</xsl:call-template>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Окончание периода</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Дата истечения срока</xsl:if>
				<xsl:if test="$lang = 'en'">Termination Date</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:terminationDate/fpml:unadjustedDate"/>
				</xsl:call-template>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Процентный период</xsl:if>
				<xsl:if test="$lang = 'en'">Calculation Period Frequency</xsl:if>
			</td>
			<td>
				<xsl:choose>
					<!-- Для "T" можно указать какое-то обозначение -->
					<xsl:when test="fpml:calculationPeriodFrequency/fpml:period = 'TTT'">Период</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="fpml:calculationPeriodFrequency/fpml:periodMultiplier"/>
						<xsl:text> </xsl:text>
						<xsl:value-of select="fpml:calculationPeriodFrequency/fpml:period"/>
					</xsl:otherwise>
				</xsl:choose>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Конвенция даты начала срока</xsl:if>
				<xsl:if test="$lang = 'en'">Effective Date Adjustments</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:effectiveDate/fpml:dateAdjustments/fpml:businessDayConvention"/>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Конвенция даты истечения срока</xsl:if>
				<xsl:if test="$lang = 'en'">Termination Date Adjustments</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:terminationDate/fpml:dateAdjustments/fpml:businessDayConvention"/>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Перенос окончания процентного периода</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Конвенция даты окончания периода</xsl:if>
				<xsl:if test="$lang = 'en'">Calculation Period Dates Adjustments</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:calculationPeriodDatesAdjustments/fpml:businessDayConvention"/>
			</td>
		</tr>
		<xsl:apply-templates select="fpml:firstPeriodStartDate"/>
		<xsl:apply-templates select="fpml:stubPeriodType"/>
	</xsl:template>
	<xsl:template match="fpml:paymentDates">
		<tr>
			<td colspan="2" class="bold" style="text-align: center">
				<xsl:if test="$lang = 'ru'">Даты платежей</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Dates</xsl:if>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Частота платежей</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Frequency</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:paymentFrequency/fpml:periodMultiplier"/>
				<xsl:text> </xsl:text>
				<xsl:value-of select="fpml:paymentFrequency/fpml:period"/>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Перенос платежей</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Конвенция даты платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Dates Adjustments</xsl:if>
			</td>
			<td>
				<xsl:apply-templates select="fpml:paymentDatesAdjustments"/>
			</td>
		</tr>
		<xsl:apply-templates select="fpml:paymentDaysOffset"/>
	</xsl:template>
	<xsl:template match="fpml:resetDates">
		<!-- <tr>
		     <td colspan="2" class="bold" style="text-align: center">
		     <xsl:if test="$lang = 'ru'">Даты изменения плавающей ставки</xsl:if>
		     <xsl:if test="$lang = 'en'">Reset Dates</xsl:if>
		</td>
		</tr> -->
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Частота смены ставки</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Период изменения плавающей ставки</xsl:if>
				<xsl:if test="$lang = 'en'">Reset Frequency</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:resetFrequency/fpml:periodMultiplier"/>
				<xsl:text> </xsl:text>
				<xsl:value-of select="fpml:resetFrequency/fpml:period"/>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Офсет фиксинга (раб. дней)</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Смещение для даты фиксинга (раб. дней)</xsl:if>
				<xsl:if test="$lang = 'en'">Fixing Date Offset</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:fixingDates/fpml:periodMultiplier"/>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:calculationPeriodAmount">
		<tr>
			<td colspan="2" class="bold" style="text-align: center">
				<xsl:if test="$lang = 'ru'">Расчет суммы платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Calculation Period Amount</xsl:if>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Конвенция</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Конвенция дней</xsl:if>
				<xsl:if test="$lang = 'en'">Day Count Fraction</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:calculation/fpml:dayCountFraction"/>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Номинал</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Номинальная сумма</xsl:if>
				<xsl:if test="$lang = 'en'">Notional</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule"/>
				</xsl:call-template>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Ставка</xsl:if>
				<xsl:if test="$lang = 'en'">Rate</xsl:if>
			</td>
			<td>
				<xsl:apply-templates select="fpml:calculation/fpml:fixedRateSchedule"/>
				<xsl:apply-templates select="fpml:calculation/fpml:floatingRateCalculation"/>
			</td>
		</tr>
		<xsl:apply-templates select="fpml:calculation/fpml:floatingRateCalculation/fpml:spreadSchedule/fpml:initialValue"/>
		<xsl:apply-templates select="fpml:calculation/fpml:floatingRateCalculation/fpml:initialRate"/>
	</xsl:template>
	<!--  -->
	<xsl:template match="fpml:fixedRateSchedule">
		<xsl:call-template name="xslFormatRate">
			<xsl:with-param name="xslRate" select="fpml:initialValue"/>
		</xsl:call-template>
	</xsl:template>
	<xsl:template match="fpml:floatingRateCalculation">
		<xsl:value-of select="fpml:floatingRateIndex"/>
		<xsl:if test="not(contains(fpml:floatingRateIndex, 'KEY-RATE'))">
			<xsl:text> </xsl:text>
			<xsl:value-of select="fpml:indexTenor/fpml:periodMultiplier"/>
			<xsl:value-of select="fpml:indexTenor/fpml:period"/>
		</xsl:if>
		<xsl:if test="fpml:averagingMethod">
			<xsl:text> AVG </xsl:text>
			<xsl:value-of select="ancestor::fpml:swapStream/fpml:resetDates/fpml:resetFrequency/fpml:periodMultiplier"/>
			<xsl:value-of select="ancestor::fpml:swapStream/fpml:resetDates/fpml:resetFrequency/fpml:period"/>
		</xsl:if>
	</xsl:template>
	<xsl:template match="fpml:paymentDaysOffset">
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Офсет даты платежа (раб. дней)</xsl:if> -->
				<xsl:if test="$lang = 'ru'">Смещение для даты платежа (раб. дней)</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Days Offset</xsl:if>
			</td>
			<td>
				<xsl:value-of select="fpml:periodMultiplier"/>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:firstPeriodStartDate">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Дата начала первого процентного периода</xsl:if>
				<xsl:if test="$lang = 'en'">First Period Start Date</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:unadjustedDate"/>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:spreadSchedule/fpml:initialValue">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Спрэд</xsl:if>
				<xsl:if test="$lang = 'en'">Spread</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatRate">
					<xsl:with-param name="xslRate" select="."/>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:initialRate">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Ставка первого процентного периода</xsl:if>
				<xsl:if test="$lang = 'en'">Initial Rate</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatRate">
					<xsl:with-param name="xslRate" select="."/>
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>
	<!-- new -->
	<xsl:template match="fpml:stubPeriodType">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Конвенция первого процентного периода</xsl:if>
				<xsl:if test="$lang = 'en'">Stub Period Type</xsl:if>
			</td>
			<td>
				<xsl:choose>
					<xsl:when test=". = 'ShortInitial'">
						<xsl:if test="$lang = 'ru'">Короткий первый процентный период</xsl:if>
						<xsl:if test="$lang = 'en'">Short Initial</xsl:if>
					</xsl:when>
					<xsl:when test=". = 'ShortFinal'">
						<xsl:if test="$lang = 'ru'">Короткий последний процентный период</xsl:if>
						<xsl:if test="$lang = 'en'">Short Final</xsl:if>
					</xsl:when>
					<xsl:when test=". = 'LongInitial'">
						<xsl:if test="$lang = 'ru'">Длинный первый процентный период</xsl:if>
						<xsl:if test="$lang = 'en'">Long Initial</xsl:if>
					</xsl:when>
					<xsl:when test=". = 'LongFinal'">
						<xsl:if test="$lang = 'ru'">Длинный последний процентный период</xsl:if>
						<xsl:if test="$lang = 'en'">Long Final</xsl:if>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="."/>
					</xsl:otherwise>
				</xsl:choose>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:calculationParameters">
		<tr>
			<td>
				<!-- <xsl:if test="$lang = 'ru'">Сдвиг</xsl:if> -->
				<!-- <xsl:if test="$lang = 'en'">xxx</xsl:if> -->
			</td>
			<td>
				<!-- <xsl:value-of select="."/> -->
			</td>
		</tr>
	</xsl:template>
	<!-- \\\ FORWARD \\\ -->
	<xsl:template match="fpml:fxSingleLeg">
		<!-- <xsl:variable name="x" select=""/> -->
		<!--  -->
		<tr class="mark">
			<td class="mark" colspan="2" align="center">
				<table class="css-trades">
					<tr>
						<th colspan="2">
							<xsl:if test="$lang = 'ru'">Параметры форварда</xsl:if>
							<xsl:if test="$lang = 'en'">Forward Conditions</xsl:if>
						</th>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Дата платежа</xsl:if>
							<xsl:if test="$lang = 'en'">Value Date</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatDate">
								<xsl:with-param name="xslDate" select="fpml:valueDate"/>
							</xsl:call-template>
						</td>
					</tr>
					<!-- psd 20200609-->
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Конвенция</xsl:if>
							<xsl:if test="$lang = 'en'">Business Day Convention</xsl:if>
						</td>
						<td>
							<xsl:value-of select="fpml:exchangedCurrency2/fpml:paymentDate/fpml:dateAdjustments/fpml:businessDayConvention"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Рабочие дни</xsl:if>
							<xsl:if test="$lang = 'en'">Business Center</xsl:if>
						</td>
						<td>
							<xsl:for-each select="fpml:exchangedCurrency2/fpml:paymentDate/fpml:dateAdjustments/fpml:businessCenters/fpml:businessCenter">
								<xsl:value-of select="."/>
								<xsl:if test="not(position() = last())">
									<xsl:text>, </xsl:text>
								</xsl:if>
							</xsl:for-each>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Валютная пара</xsl:if>
							<xsl:if test="$lang = 'en'">Currency Pair</xsl:if>
						</td>
						<td>
							<xsl:apply-templates select="fpml:exchangeRate/fpml:quotedCurrencyPair"/>
						</td>
					</tr>
					<tr>
						<!-- psd 20200609-->
						<xsl:choose>
							<xsl:when test="fpml:nonDeliverableSettlement">
								<td>
									<xsl:if test="$lang = 'ru'">Номинальная сумма в Базовой валюте</xsl:if>
									<xsl:if test="$lang = 'en'">Dealt Currency Notional</xsl:if>
								</td>
								<td>
									<!-- psd 20200710-->
									<xsl:variable name="dealtCurrency">
										<xsl:choose>
											<xsl:when test="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency1PerCurrency2'">
												<xsl:value-of select="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:currency2"/>
											</xsl:when>
											<xsl:when test="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency2PerCurrency1'">
												<xsl:value-of select="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:currency1"/>
											</xsl:when>
										</xsl:choose>
									</xsl:variable>
									<xsl:variable name="dealtPayment" select="*[fpml:paymentAmount/fpml:currency = $dealtCurrency]"/>
									<xsl:call-template name="xslFormatPayment">
										<xsl:with-param name="xslPayment" select="$dealtPayment"/>
									</xsl:call-template>
									<!-- psd 20200710-->
								</td>
							</xsl:when>
							<xsl:otherwise>
								<td>
									<xsl:if test="$lang = 'ru'">Сумма первого платежа</xsl:if>
									<xsl:if test="$lang = 'en'">Payment Amount 1</xsl:if>
								</td>
								<td>
									<xsl:call-template name="xslFormatPayment">
										<xsl:with-param name="xslPayment" select="fpml:exchangedCurrency1"/>
									</xsl:call-template>
								</td>
							</xsl:otherwise>
						</xsl:choose>
					</tr>
					<tr>
						<!-- psd 20200609-->
						<xsl:choose>
							<xsl:when test="fpml:nonDeliverableSettlement">
								<td>
									<xsl:if test="$lang = 'ru'">Номинальная сумма в Расчетной валюте</xsl:if>
									<xsl:if test="$lang = 'en'">Price Currency Notional</xsl:if>
								</td>
								<td>
									<!-- psd 20200710-->
									<xsl:variable name="dealtCurrency">
										<xsl:choose>
											<xsl:when test="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency1PerCurrency2'">
												<xsl:value-of select="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:currency1"/>
											</xsl:when>
											<xsl:when test="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency2PerCurrency1'">
												<xsl:value-of select="fpml:exchangeRate/fpml:quotedCurrencyPair/fpml:currency2"/>
											</xsl:when>
										</xsl:choose>
									</xsl:variable>
									<xsl:variable name="dealtPayment" select="*[fpml:paymentAmount/fpml:currency = $dealtCurrency]"/>
									<xsl:call-template name="xslFormatPayment">
										<xsl:with-param name="xslPayment" select="$dealtPayment"/>
									</xsl:call-template>
									<!-- psd 20200710-->
								</td>
							</xsl:when>
							<xsl:otherwise>
								<td>
									<xsl:if test="$lang = 'ru'">Сумма второго платежа</xsl:if>
									<xsl:if test="$lang = 'en'">Payment Amount 2</xsl:if>
								</td>
								<td>
									<xsl:call-template name="xslFormatPayment">
										<xsl:with-param name="xslPayment" select="fpml:exchangedCurrency2"/>
									</xsl:call-template>
								</td>
							</xsl:otherwise>
						</xsl:choose>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Форвардный курс</xsl:if>
							<xsl:if test="$lang = 'en'">Forward Rate</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="fpml:exchangeRate/fpml:rate"/>
								<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								<xsl:with-param name="xslAmountDecimal">5</xsl:with-param>
							</xsl:call-template>
						</td>
					</tr>
					<xsl:apply-templates select="fpml:nonDeliverableSettlement"/>
				</table>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:nonDeliverableSettlement">
		<td colspan="2" class="noborder" style="height: 10px;"/>
		<xsl:for-each select="fpml:fixing">
			<xsl:variable name="ndf-fix-id">
				<xsl:if test="fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency1PerCurrency2'">
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency2"/>
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency1"/>
					<xsl:text>_</xsl:text>
					<xsl:value-of select="fpml:fixingDate"/>
				</xsl:if>
				<xsl:if test="fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency2PerCurrency1'">
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency1"/>
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency2"/>
					<xsl:text>_</xsl:text>
					<xsl:value-of select="fpml:fixingDate"/>
				</xsl:if>
			</xsl:variable>
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">Дата курса спот</xsl:if>
					<xsl:if test="$lang = 'en'">Sopt Rate Date</xsl:if>
					<xsl:apply-templates select="fpml:quotedCurrencyPair"/>
				</td>
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="fpml:fixingDate"/>
					</xsl:call-template>
				</td>
			</tr>
			<xsl:apply-templates select="." mode="source"/>
			<tr>
				<td>
					<xsl:if test="$lang = 'ru'">Курс спот</xsl:if>
					<xsl:if test="$lang = 'en'">Sopt Rate</xsl:if>
					<xsl:apply-templates select="fpml:quotedCurrencyPair"/>
				</td>
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="key( 'Fixing-all', $ndf-fix-id )"/>
						<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						<xsl:with-param name="xslAmountDecimal">5</xsl:with-param>
					</xsl:call-template>
				</td>
			</tr>
		</xsl:for-each>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Валюта суммы платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Value Currency</xsl:if>
				<xsl:apply-templates select="fpml:quotedCurrencyPair"/>
			</td>
			<td>
				<xsl:value-of select="fpml:referenceCurrency"/>
			</td>
		</tr>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Валюта платежа</xsl:if>
				<xsl:if test="$lang = 'en'">Payment Currency</xsl:if>
				<xsl:apply-templates select="fpml:quotedCurrencyPair"/>
			</td>
			<td>
				<xsl:value-of select="fpml:settlementCurrency"/>
			</td>
		</tr>
		<td colspan="2" class="noborder" style="height: 10px;"/>
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Платеж по расчетному Договору</xsl:if>
				<xsl:if test="$lang = 'en'">Settlement agreement payment</xsl:if>
			</td>
			<td>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="ancestor::ms:trade/fpml:otherPartyPayment[ fpml:paymentType = 'NDF0' ]"/>
					<xsl:with-param name="color">2</xsl:with-param>
					<xsl:with-param name="xslWithDim">1</xsl:with-param>
				</xsl:call-template>
				<!--xsl:if test="ancestor::ms:trade/fpml:otherPartyPayment[ fpml:paymentType = 'NDF0' ]">
				     <br/>
				     <span class="grey small">
				     <xsl:if test="$lang = 'ru'">По фиксингу: </xsl:if>
				     <xsl:if test="$lang = 'en'">Fixing: </xsl:if>
				     <xsl:call-template name="xslFormatAmount">
				     <xsl:with-param name="xslAmount" select="key( 'Fixing-usd' , fpml:fixing/fpml:fixingDate )"/>
				     <xsl:with-param name="xslAmountMode">1</xsl:with-param>
				     <xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
				</span>
				</xsl:if-->
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:fixing" mode="source">
		<tr>
			<td>
				<xsl:if test="$lang = 'ru'">Способ определения курса спот</xsl:if>
				<xsl:if test="$lang = 'en'">Spot Rate Source</xsl:if>
				<xsl:text>:</xsl:text>
			</td>
			<td>
				<xsl:if test="fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency1PerCurrency2'">
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency2"/>
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency1"/>
				</xsl:if>
				<xsl:if test="fpml:quotedCurrencyPair/fpml:quoteBasis = 'Currency2PerCurrency1'">
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency1"/>
					<xsl:value-of select="fpml:quotedCurrencyPair/fpml:currency2"/>
				</xsl:if>
				<xsl:text> </xsl:text>
				<xsl:choose>
					<xsl:when test="fpml:fxSpotRateSource/fpml:primaryRateSource/fpml:rateSource = 'NCCB'">MOEX</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="fpml:fxSpotRateSource/fpml:primaryRateSource/fpml:rateSource"/>
					</xsl:otherwise>
				</xsl:choose>
				<xsl:text> (</xsl:text>
				<xsl:value-of select="fpml:fxSpotRateSource/fpml:primaryRateSource/fpml:rateSource"/>
				<xsl:text>)</xsl:text>
			</td>
		</tr>
	</xsl:template>
	<!-- \\\ OPTION \\\ -->
	<xsl:template match="fpml:fxOption">
		<tr class="mark">
			<td class="mark" colspan="2" align="center">
				<table class="css-trades">
					<tr>
						<th colspan="2">
							<xsl:if test="$lang = 'ru'">Параметры валютного опциона</xsl:if>
							<xsl:if test="$lang = 'en'">FX Option Conditions</xsl:if>
						</th>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Покупатель опциона</xsl:if>
							<xsl:if test="$lang = 'en'">Option Buyer</xsl:if>
						</td>
						<td>
							<xsl:value-of select="fpml:buyerPartyReference/@href"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Продавец опциона</xsl:if>
							<xsl:if test="$lang = 'en'">Option Seller</xsl:if>
						</td>
						<td>
							<xsl:value-of select="fpml:sellerPartyReference/@href"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Тип опциона</xsl:if>
							<xsl:if test="$lang = 'en'">Option Type</xsl:if>
						</td>
						<td>
							<xsl:value-of select="fpml:soldAs"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Способ исполнения</xsl:if>
							<xsl:if test="$lang = 'en'">Option Style</xsl:if>
						</td>
						<td>
							<xsl:if test="fpml:europeanExercise">
								<xsl:if test="$lang = 'ru'">Европейский</xsl:if>
								<xsl:if test="$lang = 'en'">European</xsl:if>
							</xsl:if>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Дата/время исполнения</xsl:if>
							<xsl:if test="$lang = 'en'">Expiration Date/Time</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatDate">
								<xsl:with-param name="xslDate" select="fpml:europeanExercise/fpml:expiryDate"/>
							</xsl:call-template>
							<xsl:text> (</xsl:text>
							<xsl:value-of select="fpml:europeanExercise/fpml:expiryTime/fpml:hourMinuteTime"/>
							<xsl:text>)</xsl:text>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Дата поставки</xsl:if>
							<xsl:if test="$lang = 'en'">Value Date</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatDate">
								<xsl:with-param name="xslDate" select="fpml:europeanExercise/fpml:valueDate"/>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Способ эспирации</xsl:if>
							<xsl:if test="$lang = 'en'">Exercise Procedure</xsl:if>
						</td>
						<td>
							<xsl:if test="fpml:exerciseProcedure/fpml:manualExercise">
								<xsl:if test="$lang = 'ru'">Ручная экспирация</xsl:if>
								<xsl:if test="$lang = 'en'">Manual Exercise</xsl:if>
							</xsl:if>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Продажа валюты</xsl:if>
							<xsl:if test="$lang = 'en'">Put Currency</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="fpml:putCurrencyAmount"/>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Покупка валюты</xsl:if>
							<xsl:if test="$lang = 'en'">Call Currency</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="fpml:callCurrencyAmount"/>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Курс (USD/RUB)</xsl:if>
							<xsl:if test="$lang = 'en'">USDRUB Rate</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatAmount">
								<xsl:with-param name="xslAmount" select="fpml:strike/fpml:rate"/>
								<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								<xsl:with-param name="xslAmountDecimal">5</xsl:with-param>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<th colspan="2">
							<xsl:if test="$lang = 'ru'">Премия</xsl:if>
							<xsl:if test="$lang = 'en'">Premium</xsl:if>
						</th>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Дата платежа</xsl:if>
							<xsl:if test="$lang = 'en'">Payment Date</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatDate">
								<xsl:with-param name="xslDate" select="fpml:premium/fpml:paymentDate/fpml:relativeDate/fpml:adjustedDate"/>
							</xsl:call-template>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Перенос платежей</xsl:if>
							<xsl:if test="$lang = 'en'">Business Day Convention</xsl:if>
						</td>
						<td>
							<xsl:value-of select="fpml:premium/fpml:paymentDate/fpml:relativeDate/fpml:businessDayConvention"/>
						</td>
					</tr>
					<tr>
						<td>
							<xsl:if test="$lang = 'ru'">Сумма</xsl:if>
							<xsl:if test="$lang = 'en'">Amount</xsl:if>
						</td>
						<td>
							<xsl:call-template name="xslFormatPayment">
								<xsl:with-param name="xslPayment" select="fpml:premium"/>
							</xsl:call-template>
						</td>
					</tr>
				</table>
			</td>
		</tr>
	</xsl:template>
	<!-- Npv -->
	<xsl:template match="ms:npv">
		<xsl:param name="tradeCategory"/>
		<!-- <xsl:if test="$check"> -->
		<!-- <a name="check{generate-id()}"/> -->
		<div>
			<xsl:if test="$lang = 'ru'">NPV сегодня: </xsl:if>
			<xsl:if test="$lang = 'en'">NPV for Today: </xsl:if>
			<xsl:call-template name="xslFormatAmount">
				<xsl:with-param name="xslAmount" select="ms:npvPoint[ ms:npvDate = $Today ]/ms:npvValue"/>
				<xsl:with-param name="xslAmountColor">2</xsl:with-param>
			</xsl:call-template>
		</div>
		<!-- </xsl:if> -->
		<xsl:if test="$tradeCategory = 'Exchange'">
			<div>
				<span class="bold">
					<xsl:if test="$lang = 'ru'">Вариационная маржа за сегодня: </xsl:if>
					<xsl:if test="$lang = 'en'">Variation Margin For Today: </xsl:if>
				</span>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="ms:npvPoint/ms:npvPayment[fpml:paymentDate/fpml:adjustedDate = $Today and fpml:paymentType = 'SCFVM']"/>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</div>
		</xsl:if>
		<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
			<div>
				<span class="bold">
					<xsl:if test="$lang = 'ru'">Депозитная маржа за сегодня: </xsl:if>
					<xsl:if test="$lang = 'en'">Deposit Margin for Today: </xsl:if>
				</span>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="ms:npvPoint/ms:npvPayment[fpml:paymentDate/fpml:adjustedDate = $Today and ( fpml:paymentType = 'SCFDM' or fpml:paymentType = 'RTN_DM')]"/>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</div>
			<div>
				<xsl:if test="$lang = 'ru'">Проценты на ДМ за сегодня: </xsl:if>
				<xsl:if test="$lang = 'en'">Accrued Interest on Deposit Margin: </xsl:if>
				<xsl:call-template name="xslFormatPayment">
					<xsl:with-param name="xslPayment" select="ms:npvPoint/ms:npvPayment[fpml:paymentDate/fpml:adjustedDate = $Today and fpml:paymentType = 'PRC_NM']"/>
					<xsl:with-param name="color">2</xsl:with-param>
				</xsl:call-template>
			</div>
		</xsl:if>
		<!-- Переключатель для скрытых блоков -->
		<xsl:choose>
			<xsl:when test="$settingsDetails = 'off'">
				<xsl:call-template name="xslVmTable-excel-friendly">
					<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:when test="$settingsDetails = 'hide'">
				<p>
					<span title="Скрытые блоки отключены в настройках.">• • •</span>
				</p>
			</xsl:when>
			<xsl:when test="$settingsDetails = 'close'">
				<br/>
				<label for="{generate-id()}" class="link">
					<xsl:if test="$tradeCategory = 'Exchange'">
						<xsl:if test="$lang = 'ru'">Показать/скрыть историю ВМ и NPV</xsl:if>
						<xsl:if test="$lang = 'en'">Show/Hide Variation Margin and NPV History</xsl:if>
					</xsl:if>
					<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
						<xsl:if test="$lang = 'ru'">Показать/скрыть историю ДМ и NPV</xsl:if>
						<xsl:if test="$lang = 'en'">Show/Hide Deposit Margin and NPV History</xsl:if>
					</xsl:if>
				</label>
				<!-- Кол-во записей npvPoint -->
				<xsl:if test="$check">
					<xsl:text> (</xsl:text>
					<xsl:value-of select="count( ms:npvPoint | ms:npvConversion )"/>
					<xsl:text>)</xsl:text>
				</xsl:if>
				<input id="{generate-id()}" type="checkbox" checked="checked"/>
				<div class="css-more">
					<xsl:call-template name="xslVmTable-excel-friendly">
						<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					</xsl:call-template>
				</div>
			</xsl:when>
			<xsl:when test="$settingsDetails = 'open'">
				<br/>
				<label for="{generate-id()}" class="link">
					<xsl:if test="$tradeCategory = 'Exchange'">
						<xsl:if test="$lang = 'ru'">Показать/скрыть историю ВМ и NPV</xsl:if>
						<xsl:if test="$lang = 'en'">Show/Hide Variation Margin and NPV History</xsl:if>
					</xsl:if>
					<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
						<xsl:if test="$lang = 'ru'">Показать/скрыть историю ДМ и NPV</xsl:if>
						<xsl:if test="$lang = 'en'">Show/Hide Deposit Margin and NPV History</xsl:if>
					</xsl:if>
				</label>
				<input id="{generate-id()}" type="checkbox"/>
				<div class="css-more">
					<xsl:call-template name="xslVmTable-excel-friendly">
						<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					</xsl:call-template>
				</div>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="xslVmTable">
		<xsl:param name="tradeCategory"/>
		<table class="css-vm" align="right">
			<tr style="background-color: white">
				<th>
					<xsl:if test="$lang = 'ru'">Дата</xsl:if>
					<xsl:if test="$lang = 'en'">Date</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">NPV</xsl:if>
					<xsl:if test="$lang = 'en'">NPV</xsl:if>
				</th>
				<xsl:if test="$tradeCategory = 'Exchange'">
					<th>
						<xsl:if test="$lang = 'ru'">ВМ</xsl:if>
						<xsl:if test="$lang = 'en'">Variation Margin</xsl:if>
					</th>
				</xsl:if>
				<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
					<th>
						<xsl:if test="$lang = 'ru'">ДМ</xsl:if>
						<xsl:if test="$lang = 'en'">Deposit Margin</xsl:if>
					</th>
					<th>
						<xsl:if test="$lang = 'ru'">%</xsl:if>
						<xsl:if test="$lang = 'en'">%</xsl:if>
					</th>
				</xsl:if>
			</tr>
			<!-- Определяем сколько строчек показывать -->
			<xsl:if test="$settingsVmTable = 'all'">
				<xsl:apply-templates select="ms:npvPoint | ms:npvConversion">
					<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					<xsl:sort order="ascending" select="ms:npvDate | ms:npvConversionDate"/>
				</xsl:apply-templates>
			</xsl:if>
			<xsl:if test="$settingsVmTable &gt; 0">
				<xsl:apply-templates select="ms:npvPoint[ position() &gt; last() - $settingsVmTable ] | ms:npvConversion">
					<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					<xsl:sort order="ascending" select="ms:npvDate | ms:npvConversionDate"/>
				</xsl:apply-templates>
			</xsl:if>
			<!-- checker -->
			<xsl:if test="$check">
				<tr>
					<td/>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="sum( */ms:npvPayment[ fpml:payerPartyReference/@href = 'NCCB' ][ ( fpml:paymentType = 'SCFVM' or fpml:paymentType = 'SCFDM' or fpml:paymentType = 'SCCVM' or fpml:paymentType = 'SCCDM') ]/fpml:paymentAmount/fpml:amount ) - sum( */ms:npvPayment[ fpml:payerPartyReference/@href != 'NCCB' ][ ( fpml:paymentType = 'SCFVM' or fpml:paymentType = 'SCFDM' or fpml:paymentType = 'SCCVM' or fpml:paymentType = 'SCCDM') ]/fpml:paymentAmount/fpml:amount )"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						</xsl:call-template>
						<xsl:text> XXX</xsl:text>
					</td>
					<td/>
				</tr>
			</xsl:if>
		</table>
	</xsl:template>
	<xsl:template name="xslVmTable-excel-friendly">
		<xsl:param name="tradeCategory"/>
		<table class="css-vm" align="right">
			<xsl:if test="$settingsVmTable != 'all'">
				<p class="grey small">
					<xsl:text>Отображаются последние </xsl:text>
					<xsl:value-of select="$settingsVmTable"/>
					<xsl:text> записей</xsl:text>
				</p>
			</xsl:if>
			<tr style="background-color: white">
				<th>
					<xsl:if test="$lang = 'ru'">Дата</xsl:if>
					<xsl:if test="$lang = 'en'">Date</xsl:if>
				</th>
				<th colspan="2">
					<xsl:if test="$lang = 'ru'">NPV</xsl:if>
					<xsl:if test="$lang = 'en'">NPV</xsl:if>
				</th>
				<xsl:if test="$tradeCategory = 'Exchange'">
					<th colspan="2">
						<xsl:if test="$lang = 'ru'">ВМ</xsl:if>
						<xsl:if test="$lang = 'en'">Variation Margin</xsl:if>
					</th>
				</xsl:if>
				<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
					<th colspan="2">
						<xsl:if test="$lang = 'ru'">ДМ</xsl:if>
						<xsl:if test="$lang = 'en'">Deposit Margin</xsl:if>
					</th>
					<th colspan="2">
						<xsl:if test="$lang = 'ru'">%</xsl:if>
						<xsl:if test="$lang = 'en'">%</xsl:if>
					</th>
				</xsl:if>
			</tr>
			<!-- Определяем сколько строчек показывать -->
			<xsl:if test="$settingsVmTable = 'all'">
				<xsl:apply-templates select="ms:npvPoint | ms:npvConversion" mode="excel-friendly">
					<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					<xsl:sort order="ascending" select="ms:npvDate | ms:npvConversionDate"/>
				</xsl:apply-templates>
			</xsl:if>
			<xsl:if test="$settingsVmTable &gt; 0">
				<xsl:apply-templates select="ms:npvPoint[ position() &gt; last() - $settingsVmTable ] | ms:npvConversion" mode="excel-friendly">
					<xsl:with-param name="tradeCategory" select="$tradeCategory"/>
					<xsl:sort order="ascending" select="ms:npvDate | ms:npvConversionDate"/>
				</xsl:apply-templates>
			</xsl:if>
			<!-- checker -->
			<xsl:if test="$check">
				<tr>
					<td>check</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="sum( */ms:npvPayment[ fpml:payerPartyReference/@href = 'NCCB' ][ fpml:paymentType != 'PRC_NM' ]/fpml:paymentAmount/fpml:amount ) - sum( */ms:npvPayment[ fpml:payerPartyReference/@href != 'NCCB' ][ fpml:paymentType != 'PRC_NM' ]/fpml:paymentAmount/fpml:amount )"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						</xsl:call-template>
						<!-- <xsl:text> XXX</xsl:text> -->
					</td>
					<!-- <td/> -->
				</tr>
			</xsl:if>
		</table>
	</xsl:template>
	<xsl:template match="ms:npvPoint | ms:npvConversion">
		<xsl:param name="tradeCategory"/>
		<!-- Обычная ВМ -->
		<xsl:if test="name(.) = 'ms:npvPoint'">
			<!-- Цвет фона зависит от NPV -->
			<xsl:variable name="xslVmTableBgColor">
				<!-- NPV > 0 -->
				<xsl:if test="ms:npvValue/ms:npvAmount &gt; 0">bg-green</xsl:if>
				<!-- NPV < 0 -->
				<xsl:if test="ms:npvValue/ms:npvAmount &lt; 0">bg-red</xsl:if>
			</xsl:variable>
			<tr class="{$xslVmTableBgColor}">
				<!-- Дата -->
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:npvDate"/>
					</xsl:call-template>
				</td>
				<!-- NPV -->
				<td>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:npvValue"/>
					</xsl:call-template>
				</td>
				<!-- ВМ / ДМ -->
				<td>
					<xsl:call-template name="xslFormatPayment">
						<xsl:with-param name="xslPayment" select="ms:npvPayment[fpml:paymentType = 'SCFVM' or fpml:paymentType = 'SCFDM' or fpml:paymentType = 'RTN_DM']"/>
					</xsl:call-template>
				</td>
				<!-- Проценты на ДМ -->
				<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
					<td>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="ms:npvPayment[fpml:paymentType = 'PRC_NM']"/>
						</xsl:call-template>
					</td>
				</xsl:if>
			</tr>
		</xsl:if>
		<!-- Конверсия валюты CSA -->
		<xsl:if test="name(.) = 'ms:npvConversion'">
			<tr class="bg-blue">
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:npvConversionDate"/>
					</xsl:call-template>
				</td>
				<td>
					<span class="grey">
						<xsl:if test="$lang = 'ru'">NPV в старой валюте: </xsl:if>
						<xsl:if test="$lang = 'en'">NPV in previous currency: </xsl:if>
					</span>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:npvOldValue"/>
					</xsl:call-template>
					<br/>
					<span class="grey">
						<xsl:if test="$lang = 'ru'">NPV в новой валюте: </xsl:if>
						<xsl:if test="$lang = 'en'">NPV in new currency: </xsl:if>
					</span>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:npvNewValue"/>
					</xsl:call-template>
				</td>
				<td>
					<span class="grey">
						<xsl:if test="$lang = 'ru'">Платежи при изменении валюты CSA: </xsl:if>
						<xsl:if test="$lang = 'en'">CSA change payments: </xsl:if>
					</span>
					<xsl:for-each select="ms:npvPayment">
						<br/>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="(.)"/>
							<xsl:with-param name="color">2</xsl:with-param>
						</xsl:call-template>
					</xsl:for-each>
				</td>
				<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
					<td/>
				</xsl:if>
			</tr>
		</xsl:if>
	</xsl:template>
	<xsl:template match="ms:npvPoint | ms:npvConversion" mode="excel-friendly">
		<xsl:param name="tradeCategory"/>
		<!-- Обычная переоценка -->
		<xsl:if test="name(.) = 'ms:npvPoint'">
			<!-- Цвет фона зависит от NPV -->
			<xsl:variable name="xslVmTableBgColor">
				<!-- NPV > 0 -->
				<xsl:if test="ms:npvValue/ms:npvAmount &gt; 0">bg-green</xsl:if>
				<!-- NPV < 0 -->
				<xsl:if test="ms:npvValue/ms:npvAmount &lt; 0">bg-red</xsl:if>
			</xsl:variable>
			<tr class="{$xslVmTableBgColor}">
				<!-- Дата -->
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:npvDate"/>
					</xsl:call-template>
				</td>
				<!-- NPV -->
				<xsl:call-template name="xslFormatAmount-excel-friendly">
					<xsl:with-param name="xslAmount" select="ms:npvValue"/>
				</xsl:call-template>
				<!-- ВМ / ДМ -->
				<xsl:call-template name="xslFormatPayment-excel-friendly">
					<xsl:with-param name="xslPayment" select="ms:npvPayment[fpml:paymentType = 'SCFVM' or fpml:paymentType = 'SCFDM' or fpml:paymentType = 'RTN_DM']"/>
				</xsl:call-template>
				<!-- Проценты на ДМ -->
				<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
					<xsl:call-template name="xslFormatPayment-excel-friendly">
						<xsl:with-param name="xslPayment" select="ms:npvPayment[fpml:paymentType = 'PRC_NM']"/>
					</xsl:call-template>
				</xsl:if>
			</tr>
		</xsl:if>
		<!-- Конверсия валюты CSA -->
		<xsl:if test="name(.) = 'ms:npvConversion'">
			<tr class="bg-blue">
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="ms:npvConversionDate"/>
					</xsl:call-template>
				</td>
				<td>
					<span class="grey">
						<xsl:if test="$lang = 'ru'">NPV в старой валюте: </xsl:if>
						<xsl:if test="$lang = 'en'">NPV in previous currency: </xsl:if>
					</span>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:npvOldValue"/>
					</xsl:call-template>
					<br/>
					<span class="grey">
						<xsl:if test="$lang = 'ru'">NPV в новой валюте: </xsl:if>
						<xsl:if test="$lang = 'en'">NPV in new currency: </xsl:if>
					</span>
					<xsl:call-template name="xslFormatAmount">
						<xsl:with-param name="xslAmount" select="ms:npvNewValue"/>
					</xsl:call-template>
				</td>
				<td>
					<span class="grey">
						<xsl:if test="$lang = 'ru'">Платежи при изменении валюты CSA: </xsl:if>
						<xsl:if test="$lang = 'en'">CSA change payments: </xsl:if>
					</span>
					<xsl:for-each select="ms:npvPayment">
						<br/>
						<xsl:call-template name="xslFormatPayment">
							<xsl:with-param name="xslPayment" select="(.)"/>
							<xsl:with-param name="color">2</xsl:with-param>
						</xsl:call-template>
					</xsl:for-each>
				</td>
				<xsl:if test="$tradeCategory = 'OTC' or $tradeCategory = 'OTC Public'">
					<td/>
				</xsl:if>
			</tr>
		</xsl:if>
	</xsl:template>
	<!-- Cashflows -->
	<xsl:template name="Cashflows">
		<table class="css-vm" align="left">
			<tr style="background-color: white">
				<th/>
				<th>
					<xsl:if test="$lang = 'ru'">Тип</xsl:if>
					<xsl:if test="$lang = 'en'">Type</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Дата</xsl:if>
					<xsl:if test="$lang = 'en'">Date</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Сумма</xsl:if>
					<xsl:if test="$lang = 'en'">Amount</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Процентный период</xsl:if>
					<xsl:if test="$lang = 'en'">Calculation Period</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Ставка</xsl:if>
					<xsl:if test="$lang = 'en'">Rate</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Фиксинг</xsl:if>
					<xsl:if test="$lang = 'en'">Fixing</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Изменение ставки</xsl:if>
					<xsl:if test="$lang = 'en'">Rate Change</xsl:if>
				</th>
				<xsl:if test="$check = 'id'">
					<th>id</th>
				</xsl:if>
			</tr>
			<!-- Платежи -->
			<xsl:apply-templates select="fpml:swap/fpml:swapStream/fpml:cashflows/fpml:principalExchange | fpml:swap/fpml:swapStream/fpml:cashflows/fpml:paymentCalculationPeriod">
				<xsl:sort select="fpml:adjustedPrincipalExchangeDate | fpml:adjustedPaymentDate" order="ascending"/>
				<xsl:sort select="name(.)" order="ascending"/>
			</xsl:apply-templates>
		</table>
		<!-- Сумма процентных платежей -->
		<xsl:if test="$check">
			<span class="blue">Сумма процентных платежей (всех)</span>
			<div>
				<xsl:text>swapStream[1]: </xsl:text>
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="sum( fpml:swap/fpml:swapStream[1]/fpml:cashflows/fpml:paymentCalculationPeriod/fpml:forecastPaymentAmount/fpml:amount )"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
				</xsl:call-template>
				<xsl:text> </xsl:text>
				<xsl:value-of select="fpml:swap/fpml:swapStream[1]/fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency"/>
			</div>
			<div>
				<xsl:text>swapStream[2]: </xsl:text>
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="sum( fpml:swap/fpml:swapStream[2]/fpml:cashflows/fpml:paymentCalculationPeriod/fpml:forecastPaymentAmount/fpml:amount )"/>
					<xsl:with-param name="xslAmountMode">1</xsl:with-param>
				</xsl:call-template>
				<xsl:text> </xsl:text>
				<xsl:value-of select="fpml:swap/fpml:swapStream[2]/fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency"/>
			</div>
		</xsl:if>
	</xsl:template>
	<xsl:template match="fpml:principalExchange">
		<xsl:variable name="date" select="fpml:adjustedPrincipalExchangeDate"/>
		<xsl:variable name="bgcolor">
			<xsl:if test="$date = $Today">bg-blue</xsl:if>
			<xsl:if test="$date != $Today">bg-light-grey</xsl:if>
		</xsl:variable>
		<tr class="{$bgcolor}">
			<td style="min-width: 10px;">
				<xsl:if test="translate( $date , '-' , '' ) &lt;= $Today2">✓</xsl:if>
			</td>
			<!-- Тип -->
			<td style="text-align: center">
				<xsl:if test="$lang = 'ru'">
					<span style="vertical-align: bottom" title="Обмен номиналами">⇄</span>
				</xsl:if>
				<xsl:if test="$lang = 'en'">
					<span style="vertical-align: bottom" title="Notional Exchange">⇄</span>
				</xsl:if>
			</td>
			<!-- Дата -->
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="$date"/>
				</xsl:call-template>
			</td>
			<!-- Сумма -->
			<td class="text-nowrap">
				<xsl:choose>
					<!-- Участник платит номинал -->
					<xsl:when test="ancestor::fpml:swapStream/fpml:payerPartyReference/@href = $Self">
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="-1 * fpml:principalExchangeAmount"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						</xsl:call-template>
					</xsl:when>
					<!-- Участник получает номинал -->
					<xsl:when test="ancestor::fpml:swapStream/fpml:payerPartyReference/@href != $Self">
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="fpml:principalExchangeAmount"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						</xsl:call-template>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$ErrorText"/>
					</xsl:otherwise>
				</xsl:choose>
				<!-- Валюта -->
				<xsl:text> </xsl:text>
				<xsl:value-of select="ancestor::fpml:swapStream/fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency"/>
			</td>
			<td style="text-align: center">-</td>
			<td style="text-align: center">-</td>
			<td style="text-align: right">-</td>
			<td style="text-align: right">-</td>
			<xsl:if test="$check = 'id'">
				<td>
					<xsl:value-of select="substring-after( @id , 'cf' )"/>
				</td>
			</xsl:if>
		</tr>
	</xsl:template>
	<xsl:template match="fpml:paymentCalculationPeriod">
		<xsl:variable name="date" select="fpml:adjustedPaymentDate"/>
		<xsl:variable name="bgcolor">
			<xsl:if test="$date = $Today">bg-blue</xsl:if>
		</xsl:variable>
		<tr class="{$bgcolor}">
			<td style="min-width: 10px;">
				<xsl:if test="translate( $date , '-' , '' ) &lt;= $Today2">✓</xsl:if>
			</td>
			<!-- Тип -->
			<td style="text-align: center">
				<xsl:if test="$lang = 'ru'">
					<span style="vertical-align: bottom" title="Процентный платеж">%</span>
				</xsl:if>
				<xsl:if test="$lang = 'en'">
					<span style="vertical-align: bottom" title="Interest Payment">%</span>
				</xsl:if>
			</td>
			<!-- Дата -->
			<td>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="$date"/>
				</xsl:call-template>
			</td>
			<!-- Сумма -->
			<td class="text-nowrap">
				<xsl:if test="ancestor::fpml:swapStream/fpml:payerPartyReference/@href = $Self">-</xsl:if>
				<xsl:call-template name="xslFormatAmount">
					<xsl:with-param name="xslAmount" select="fpml:forecastPaymentAmount"/>
				</xsl:call-template>
			</td>
			<!-- Срок -->
			<td class="text-nowrap">
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="fpml:calculationPeriod[1]/fpml:adjustedStartDate"/>
					<xsl:with-param name="xslDate2" select="fpml:calculationPeriod[last()]/fpml:adjustedEndDate"/>
				</xsl:call-template>
				<xsl:if test="$check">
					<xsl:text> (</xsl:text>
					<xsl:call-template name="calculate-duration">
						<xsl:with-param name="dateFrom" select="fpml:calculationPeriod[1]/fpml:adjustedStartDate"/>
						<xsl:with-param name="dateTo" select="fpml:calculationPeriod[last()]/fpml:adjustedEndDate"/>
					</xsl:call-template>
					<xsl:text>) </xsl:text>
					<xsl:value-of select="ancestor::fpml:swapStream/fpml:paymentDates/fpml:paymentFrequency/fpml:periodMultiplier"/>
					<xsl:value-of select="ancestor::fpml:swapStream/fpml:paymentDates/fpml:paymentFrequency/fpml:period"/>
				</xsl:if>
			</td>
			<!-- Ставка -->
			<xsl:if test="count(fpml:calculationPeriod) = 1">
				<td>
					<xsl:call-template name="xslFormatRate">
						<xsl:with-param name="xslRate" select="fpml:calculationPeriod/fpml:fixedRate|fpml:calculationPeriod/fpml:floatingRateDefinition/fpml:calculatedRate"/>
					</xsl:call-template>
				</td>
			</xsl:if>
			<!-- Дата фиксинга -->
			<xsl:if test="count(fpml:calculationPeriod) = 1">
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="fpml:calculationPeriod/fpml:floatingRateDefinition/fpml:rateObservation/fpml:adjustedFixingDate"/>
					</xsl:call-template>
				</td>
			</xsl:if>
			<!-- Дата смены ставки -->
			<xsl:if test="count(fpml:calculationPeriod) = 1">
				<td>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="fpml:calculationPeriod/fpml:floatingRateDefinition/fpml:rateObservation/fpml:resetDate"/>
					</xsl:call-template>
				</td>
			</xsl:if>
			<xsl:if test="count(fpml:calculationPeriod) != 1">
				<td style="text-align: center">-</td>
			</xsl:if>
			<xsl:if test="$check = 'id'">
				<td>
					<xsl:value-of select="substring-after( @id , 'cf' )"/>
				</td>
			</xsl:if>
		</tr>
	</xsl:template>
	<!-- Party + Account -->
	<xsl:template name="Party">
		<xsl:if test="$counterpartyForSecondTrade">
			<a name="link-party"/>
			<table class="mark" style="page-break-before: always">
				<xsl:call-template name="MarkHeader">
					<xsl:with-param name="MarkHeaderName">
						<xsl:if test="$lang = 'ru'">Список участников и позиционных регистров</xsl:if>
						<xsl:if test="$lang = 'en'">Participants and Accounts</xsl:if>
					</xsl:with-param>
					<xsl:with-param name="MarkHeaderTopEnabler">1</xsl:with-param>
				</xsl:call-template>
				<tr class="mark">
					<td class="mark" style="width: 50%">
						<!-- Участники -->
						<xsl:call-template name="main-party"/>
					</td>
					<td class="mark" style="width: 50%">
						<!-- Регистры -->
						<xsl:call-template name="main-account"/>
					</td>
				</tr>
				<tr>
					<td class="mark" style="width: 50%">
						<!-- Идентификаторы логинов -->
						<xsl:call-template name="list-userID"/>
					</td>
				</tr>
			</table>
		</xsl:if>
	</xsl:template>
	<xsl:template name="main-party">
		<table class="css-iko" align="right">
			<tr>
				<th colspan="2">
					<xsl:if test="$lang = 'ru'">Участники</xsl:if>
					<xsl:if test="$lang = 'en'">Participants</xsl:if>
				</th>
			</tr>
			<tr>
				<th>
					<xsl:if test="$lang = 'ru'">Код</xsl:if>
					<xsl:if test="$lang = 'en'">ID</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Название</xsl:if>
					<xsl:if test="$lang = 'en'">Name</xsl:if>
				</th>
			</tr>
			<!--<xsl:for-each select="ms:moexSpfiReport/ms:fpml/fpml:party">
			     <xsl:sort select="fpml:partyId" order="ascending"/>
			     <tr>
			     <td>
			     <xsl:value-of select="fpml:partyId"/>
			</td>
			     <td>
			     <xsl:value-of select="fpml:partyName"/>
			</td>
			</tr>
			</xsl:for-each>-->
			<xsl:for-each select="ms:moexSpfiReport/ms:fpml/fpml:party[generate-id()=generate-id(key('dual-partyIDs',@id))] | ms:moexSpfiInsideReport/ms:fpml/fpml:party">
				<xsl:sort select="@id" order="ascending"/>
				<!--<xsl:value-of select="@id" />-->
				<!--<xsl:if test="position()!=last()">-->
				<tr>
					<td>
						<xsl:value-of select="fpml:partyId"/>
					</td>
					<td>
						<xsl:if test="$isReportDeals = 'False'">
							<xsl:value-of select="fpml:partyName"/>
						</xsl:if>
						<xsl:if test="$isReportDeals = 'True'">
							<xsl:value-of select="fpml:partyName[@type = 'short']"/>
						</xsl:if>
					</td>
				</tr>
			</xsl:for-each>
		</table>
	</xsl:template>
	<xsl:template name="main-account">
		<table class="css-iko" align="left">
			<tr>
				<th colspan="2">
					<xsl:if test="$lang = 'ru'">Регистры</xsl:if>
					<xsl:if test="$lang = 'en'">Accounts</xsl:if>
				</th>
			</tr>
			<tr>
				<th>
					<xsl:if test="$lang = 'ru'">Код</xsl:if>
					<xsl:if test="$lang = 'en'">ID</xsl:if>
				</th>
				<th>
					<xsl:if test="$lang = 'ru'">Название</xsl:if>
					<xsl:if test="$lang = 'en'">Name</xsl:if>
				</th>
			</tr>
			<xsl:for-each select="ms:moexSpfiReport/ms:fpml/fpml:account">
				<tr>
					<td>
						<xsl:value-of select="fpml:accountId"/>
					</td>
					<td>
						<xsl:value-of select="fpml:accountName"/>
					</td>
				</tr>
			</xsl:for-each>
		</table>
	</xsl:template>
	<xsl:template name="list-userID">
		<table class="css-iko" align="right">
			<tr>
				<th colspan="2">
					<xsl:if test="$lang = 'ru'">Список клиринговых идентификаторов</xsl:if>
					<xsl:if test="$lang = 'en'">User IDs</xsl:if>
				</th>
			</tr>
			<xsl:for-each select="ms:moexSpfiReport/ms:userList/ms:user">
				<tr>
					<td>
						<xsl:value-of select="ms:userId"/>
					</td>
				</tr>
			</xsl:for-each>
		</table>
	</xsl:template>
	<!-- Гарфонд -->
	<xsl:template match="ms:guaranteeFund">
		<a name="link-guaranteeFund"/>
		<table class="mark">
			<xsl:call-template name="MarkHeader">
				<xsl:with-param name="MarkHeaderName">
					<xsl:if test="$lang = 'ru'">Гарантийный фонд</xsl:if>
					<xsl:if test="$lang = 'en'">Guarantee Fund</xsl:if>
				</xsl:with-param>
				<xsl:with-param name="MarkHeaderTopEnabler">1</xsl:with-param>
			</xsl:call-template>
			<tr class="mark">
				<td class="mark" colspan="2">
					<table class="css-iko" style="margin-left: auto; margin-right: auto">
						<tr>
							<th>
								<xsl:if test="$lang = 'ru'">Код актива</xsl:if>
								<xsl:if test="$lang = 'en'">Asset Code</xsl:if>
							</th>
							<th>
								<xsl:if test="$lang = 'ru'">Фактический взнос</xsl:if>
								<xsl:if test="$lang = 'en'">Actual Amount</xsl:if>
							</th>
							<th>
								<xsl:if test="$lang = 'ru'">Оценка взноса (RUB)</xsl:if>
								<xsl:if test="$lang = 'en'">Estimate Amount (RUB)</xsl:if>
							</th>
							<th>
								<xsl:if test="$lang = 'ru'">Использованная сумма</xsl:if>
								<xsl:if test="$lang = 'en'">Used Amount</xsl:if>
							</th>
							<th>
								<xsl:if test="$lang = 'ru'">Возвращенная сумма</xsl:if>
								<xsl:if test="$lang = 'en'">Returned Amount</xsl:if>
							</th>
						</tr>
						<xsl:for-each select="ms:gfAsset">
							<tr>
								<td style="text-align: center">
									<xsl:value-of select="ms:gfActualAmount/ms:asset"/>
								</td>
								<td>
									<xsl:call-template name="xslFormatAmount">
										<xsl:with-param name="xslAmount" select="ms:gfActualAmount/ms:amount"/>
										<xsl:with-param name="xslAmountMode">1</xsl:with-param>
									</xsl:call-template>
								</td>
								<td>
									<xsl:call-template name="xslFormatAmount">
										<xsl:with-param name="xslAmount" select="ms:gfEstimateAmount/ms:amount"/>
										<xsl:with-param name="xslAmountMode">1</xsl:with-param>
									</xsl:call-template>
								</td>
								<td>
									<xsl:call-template name="xslFormatAmount">
										<xsl:with-param name="xslAmount" select="ms:gfUsedAmount/ms:amount"/>
										<xsl:with-param name="xslAmountMode">1</xsl:with-param>
									</xsl:call-template>
								</td>
								<td>
									<xsl:call-template name="xslFormatAmount">
										<xsl:with-param name="xslAmount" select="ms:gfReturnedAmount/ms:amount"/>
										<xsl:with-param name="xslAmountMode">1</xsl:with-param>
									</xsl:call-template>
								</td>
							</tr>
						</xsl:for-each>
						<tr>
							<th colspan="2" style="height: 40px; text-align: right">
								<xsl:if test="$lang = 'ru'">Сумма (RUB)</xsl:if>
								<xsl:if test="$lang = 'en'">Summ (RUB)</xsl:if>
							</th>
							<td>
								<xsl:call-template name="xslFormatAmount">
									<xsl:with-param name="xslAmount" select="ms:gfSummEstimateAmount/ms:amount"/>
									<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								</xsl:call-template>
							</td>
							<td>
								<xsl:call-template name="xslFormatAmount">
									<xsl:with-param name="xslAmount" select="ms:gfSummUsedAmount/ms:amount"/>
									<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								</xsl:call-template>
							</td>
							<td>
								<xsl:call-template name="xslFormatAmount">
									<xsl:with-param name="xslAmount" select="ms:gfSummReturnedAmount/ms:amount"/>
									<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								</xsl:call-template>
							</td>
						</tr>
						<tr>
							<th colspan="2" style="text-align: right">
								<xsl:if test="$lang = 'ru'">Установленный размер (RUB)</xsl:if>
								<xsl:if test="$lang = 'en'">Determined Amount (RUB)</xsl:if>
							</th>
							<td>
								<xsl:call-template name="xslFormatAmount">
									<xsl:with-param name="xslAmount" select="ms:gfDeterminedAmount/ms:amount"/>
									<xsl:with-param name="xslAmountMode">1</xsl:with-param>
								</xsl:call-template>
							</td>
						</tr>
					</table>
				</td>
			</tr>
		</table>
	</xsl:template>
	<!-- Маркет-дата -->
	<xsl:template name="Market">
		<xsl:if test="$isReportDeals = 'False'">
			<a name="link-market2"/>
			<table class="mark">
				<xsl:call-template name="MarkHeader">
					<xsl:with-param name="MarkHeaderName">
						<xsl:if test="$lang = 'ru'">Фиксинги и ставки</xsl:if>
						<xsl:if test="$lang = 'en'">Fixings and Rates</xsl:if>
					</xsl:with-param>
					<xsl:with-param name="MarkHeaderTopEnabler">1</xsl:with-param>
				</xsl:call-template>
				<tr class="mark">
					<xsl:call-template name="main-market"/>
				</tr>
				<tr class="mark">
					<xsl:call-template name="central-rates-market"/>
				</tr>
			</table>
		</xsl:if>
	</xsl:template>
	<xsl:template name="main-market">
		<td class="mark" style="width: 50%">
			<table class="css-mrkt" align="right">
				<tr>
					<th>
						<xsl:if test="$lang = 'ru'">Фиксинг МБ</xsl:if>
						<xsl:if test="$lang = 'en'">MOEX Fixing</xsl:if>
					</th>
					<th>
						<xsl:if test="$lang = 'ru'">Значение</xsl:if>
						<xsl:if test="$lang = 'en'">Value</xsl:if>
					</th>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="http://moex.com/ru/markets/currency/fixing.aspx?code=USDFIX" target="_blank" class="black">USD/RUB (12:30 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="http://www.moex.com/en/markets/currency/fixing.aspx?code=USDFIX" target="_blank" class="black">USDRUB (12:30 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Fixing-td"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="http://moex.com/ru/markets/currency/fixing.aspx?code=EURFIX" target="_blank" class="black">EUR/RUB (12:30 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="http://www.moex.com/en/markets/currency/fixing.aspx?code=EURFIX" target="_blank" class="black">EURRUB (12:30 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Fixing-td-eur"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<!--tr>
				     <td>
				     <xsl:if test="$lang = 'ru'">
				     <a target="_blank" class="black">CHF/RUB (09:00 МСК)</a>
				</xsl:if>
				     <xsl:if test="$lang = 'en'">
				     <a target="_blank" class="black">CHFRUB (09:00 MSK)</a>
				</xsl:if>
				</td>
				     <td>
				     <xsl:call-template name="xslFormatAmount">
				     <xsl:with-param name="xslAmount" select="$Fixing-td-chf"/>
				     <xsl:with-param name="xslAmountMode">1</xsl:with-param>
				     <xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
				</xsl:call-template>
				</td>
				</tr-->
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="http://moex.com/ru/markets/currency/fixing.aspx?code=EURUSDFIX" target="_blank" class="black">EUR/USD (12:30 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="http://www.moex.com/en/markets/currency/fixing.aspx?code=EURUSDFIX" target="_blank" class="black">EURUSD (12:30 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Fixing-td-eurusd"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="http://moex.com/ru/markets/currency/fixing.aspx?code=CNYRUBFIX" target="_blank" class="black">CNY/RUB (12:30 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="http://www.moex.com/en/markets/currency/fixing.aspx?code=CNYRUBFIX" target="_blank" class="black">CNYRUB (12:30 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Fixing-td-cny"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
			</table>
		</td>
		<td class="mark" style="width: 50%">
			<table class="css-mrkt" aling="left">
				<tr>
					<th>
						<xsl:if test="$lang = 'ru'">Ставка</xsl:if>
						<xsl:if test="$lang = 'en'">Rate</xsl:if>
					</th>
					<th>
						<xsl:if test="$lang = 'ru'">Значение</xsl:if>
						<xsl:if test="$lang = 'en'">Value</xsl:if>
					</th>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="http://www.ruonia.ru" target="_blank" class="black">RUONIA</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="http://www.ruonia.ru/eng/" target="_blank" class="black">RUONIA</a>
						</xsl:if>
					</td>
					<!-- Можно добавить ссылку на сайт -->
					<td>
						<xsl:call-template name="xslFormatRate">
							<xsl:with-param name="xslRate" select="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[fpml:objectReference/@href = 'Ruonia-ON']/fpml:quote/fpml:value"/>
						</xsl:call-template>
					</td>
				</tr>
				<xsl:if test="$check">
					<xsl:variable name="market" select="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes"/>
					<tr>
						<td>MosPrime 1M</td>
						<td>
							<xsl:apply-templates select="$market/fpml:assetQuote[ fpml:objectReference/@href = 'MOSPRIME-1M' ]/fpml:quote/fpml:value"/>
						</td>
					</tr>
					<tr>
						<td>MosPrime 3M</td>
						<td>
							<xsl:apply-templates select="$market/fpml:assetQuote[ fpml:objectReference/@href = 'MOSPRIME-3M' ]/fpml:quote/fpml:value"/>
						</td>
					</tr>
					<tr>
						<td>MosPrime 6M</td>
						<td>
							<xsl:apply-templates select="$market/fpml:assetQuote[ fpml:objectReference/@href = 'MOSPRIME-6M' ]/fpml:quote/fpml:value"/>
						</td>
					</tr>
					<tr>
						<td>Libor 1M</td>
						<td>
							<xsl:apply-templates select="$market/fpml:assetQuote[ fpml:objectReference/@href = 'LIBOR-1M' ]/fpml:quote/fpml:value"/>
						</td>
					</tr>
					<tr>
						<td>Libor 3M</td>
						<td>
							<xsl:apply-templates select="$market/fpml:assetQuote[ fpml:objectReference/@href = 'LIBOR-3M' ]/fpml:quote/fpml:value"/>
						</td>
					</tr>
					<tr>
						<td>Libor 6M</td>
						<td>
							<xsl:apply-templates select="$market/fpml:assetQuote[ fpml:objectReference/@href = 'LIBOR-6M' ]/fpml:quote/fpml:value"/>
						</td>
					</tr>
				</xsl:if>
				<!-- <tr>
				     <td>
				     <xsl:if test="$lang = 'ru'">
				     <a href="http://moex.com/s1240" target="_blank" class="black">Проценты на ГО</a>
				</xsl:if>
				     <xsl:if test="$lang = 'en'">
				     <a href="http://www.moex.com/s1360" target="_blank" class="black">Interest on initial margin</a>
				</xsl:if>
				</td>
				     <td>
				     <xsl:call-template name="xslFormatRate">
				     <xsl:with-param name="xslRate" select="ms:moexSpfiReport/ms:fpml/fpml:market/fpml:benchmarkQuotes/fpml:assetQuote[fpml:objectReference/@href = 'Ruonia-ON']/fpml:quote/fpml:value - 0.01"/>
				</xsl:call-template>
				</td>
				</tr> -->
			</table>
		</td>
	</xsl:template>
	<xsl:template name="central-rates-market">
		<td class="mark" style="width: 50%">
			<table class="css-mrkt" align="right">
				<tr>
					<th>
						<xsl:if test="$lang = 'ru'">Центральный курс МБ</xsl:if>
						<xsl:if test="$lang = 'en'">MOEX Central Rate</xsl:if>
					</th>
					<th>
						<xsl:if test="$lang = 'ru'">Значение</xsl:if>
						<xsl:if test="$lang = 'en'">Value</xsl:if>
					</th>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="https://nationalclearingcentre.ru/rates/centralRates/" target="_blank" class="black">USD/RUB (<xsl:value-of select="$Central-max-dt"/> 19:15 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="https://nationalclearingcentre.com/rates/centralRates/" target="_blank" class="black">USDRUB (<xsl:value-of select="$Central-max-dt"/> 19:15 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Central-td-usd"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="https://nationalclearingcentre.ru/rates/centralRates/" target="_blank" class="black">EUR/RUB (<xsl:value-of select="$Central-max-dt"/> 19:15 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="https://nationalclearingcentre.com/rates/centralRates/" target="_blank" class="black">EURRUB (<xsl:value-of select="$Central-max-dt"/> 19:15 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Central-td-eur"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="https://nationalclearingcentre.ru/rates/centralRates/" target="_blank" class="black">CHF/RUB (<xsl:value-of select="$Central-max-dt"/> 19:15 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="https://nationalclearingcentre.com/rates/centralRates/" target="_blank" class="black">CHFRUB (<xsl:value-of select="$Central-max-dt"/> 19:15 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Central-td-chf"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="https://nationalclearingcentre.ru/rates/centralRates/" target="_blank" class="black">CNY/RUB (<xsl:value-of select="$Central-max-dt"/> 19:15 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="https://nationalclearingcentre.com/rates/centralRates/" target="_blank" class="black">CNYRUB (<xsl:value-of select="$Central-max-dt"/> 19:15 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Central-td-cny"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
				<tr>
					<td>
						<xsl:if test="$lang = 'ru'">
							<a href="https://nationalclearingcentre.ru/rates/centralRates/" target="_blank" class="black">KZT/RUB (<xsl:value-of select="$Central-max-dt"/> 19:15 МСК)</a>
						</xsl:if>
						<xsl:if test="$lang = 'en'">
							<a href="https://nationalclearingcentre.com/rates/centralRates/" target="_blank" class="black">KZTRUB (<xsl:value-of select="$Central-max-dt"/> 19:15 MSK)</a>
						</xsl:if>
					</td>
					<td>
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$Central-td-kzt"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal">4</xsl:with-param>
						</xsl:call-template>
					</td>
				</tr>
			</table>
		</td>
	</xsl:template>
	<xsl:template match="fpml:quote/fpml:value">
		<xsl:value-of select="format-number( . , '# ##0,00####%', 'rNumbersFormat' )"/>
	</xsl:template>
	<!-- Footer -->
	<xsl:template name="Footer">
		<hr/>
		<div class="grey small">
			<center>
				<a href="http://www.moex.com/" target="_blank">
					<xsl:if test="$lang = 'ru'">Московская Биржа</xsl:if>
					<xsl:if test="$lang = 'en'">Moscow Exchange</xsl:if>
				</a>
				<xsl:text> • </xsl:text>
				<a href="http://moex.com/s850" target="_blank">
					<xsl:if test="$lang = 'ru'">Рынок СПФИ</xsl:if>
					<xsl:if test="$lang = 'en'">Standardised OTC Derivatives Market</xsl:if>
				</a>
				<xsl:text> • </xsl:text>
				<!-- Тема и тело письма -->
				<xsl:variable name="email">
					<xsl:text>mailto</xsl:text>
					<xsl:text>otc@moex.com</xsl:text>
					<xsl:text>?subject=</xsl:text>
					<xsl:text>Вопрос по отчету СПФИ</xsl:text>
					<xsl:text>&amp;body=</xsl:text>
					<xsl:text>Код участника: </xsl:text>
					<xsl:value-of select="ms:moexSpfiReport/ms:header/ms:sendTo | ms:moexSpfiInsideReport/ms:header/ms:firmId"/>
					<xsl:text>Номер сообщения: </xsl:text>
					<xsl:value-of select="ms:moexSpfiReport/ms:header/ms:messageId | ms:moexSpfiInsideReport/ms:header/ms:messageId"/>
					<xsl:text>Дата клиринга: </xsl:text>
					<xsl:value-of select="ms:moexSpfiReport/ms:header/ms:clearingDate"/>
					<xsl:text>Дата и время формирования отчета: </xsl:text>
					<xsl:value-of select="ms:moexSpfiReport/ms:header/ms:creationTimestamp | ms:moexSpfiInsideReport/ms:header/ms:creationTimestamp"/>
					<xsl:text>Версия xslt: </xsl:text>
					<xsl:value-of select="$XsltVersion"/>
				</xsl:variable>
				<a href="mailto:otc@moex.com">
					<!-- <a href="{$email}"> -->
					<xsl:if test="$lang = 'ru'">Отправить сообщение</xsl:if>
					<xsl:if test="$lang = 'en'">Send Message</xsl:if>
				</a>
				<!-- <br/> -->
				<!-- <xsl:value-of select="$email"></xsl:value-of> -->
			</center>
			<div>
				<xsl:text>xslt version: </xsl:text>
				<xsl:value-of select="$XsltVersion"/>
			</div>
		</div>
	</xsl:template>
	<!-- Прочее -->
	<xsl:template name="MarkHeader">
		<xsl:param name="MarkHeaderName"/>
		<xsl:param name="MarkHeaderTopEnabler"/>
		<xsl:param name="MarkHeaderTradesEnabler"/>
		<!--  -->
		<tr class="mark">
			<td class="mark header" style="width: 50%;">
				<span class="bold">
					<xsl:value-of select="$MarkHeaderName"/>
				</span>
			</td>
			<td class="mark header" style="width: 50%;" align="right">
				<xsl:if test="$MarkHeaderTopEnabler = 1">
					<div>
						<a class="up" href="#top">
							<xsl:if test="$lang = 'ru'">К началу отчета</xsl:if>
							<xsl:if test="$lang = 'en'">Back To The Top</xsl:if>
						</a>
					</div>
				</xsl:if>
				<xsl:if test="( $MarkHeaderTradesEnabler = 1 ) and ( $Num-trades &gt; 1 )">
					<div>
						<a class="up" href="#link-trade">
							<xsl:if test="$lang = 'ru'">К списку сделок</xsl:if>
							<xsl:if test="$lang = 'en'">Back To List Of Trades</xsl:if>
						</a>
					</div>
				</xsl:if>
			</td>
		</tr>
	</xsl:template>
	<xsl:template name="hr">
		<tr class="mark">
			<td class="mark" colspan="2">
				<hr/>
			</td>
		</tr>
	</xsl:template>
	<!--  -->
	<!--  -->
	<!--  -->
	<!-- Форматирование \\\ дата из YYYY-MM-DD в DD.MM.YYYY -->
	<xsl:template name="xslFormatDate">
		<xsl:param name="xslDate"/>
		<xsl:param name="xslDate2"/>
		<!--  -->
		<!-- Нет данных на входе-->
		<xsl:if test="not($xslDate)">–</xsl:if>
		<!-- Есть данные на входе -->
		<xsl:if test="$xslDate">
			<xsl:value-of select="substring($xslDate, 9, 2)"/>
			<xsl:text>.</xsl:text>
			<xsl:value-of select="substring($xslDate, 6, 2)"/>
			<xsl:text>.</xsl:text>
			<xsl:value-of select="substring($xslDate, 1, 4)"/>
			<!-- Время -->
			<xsl:if test="contains( $xslDate , 'T' )">
				<xsl:text> </xsl:text>
				<span class="grey">
					<xsl:value-of select="substring-after( $xslDate , 'T' )"/>
				</span>
			</xsl:if>
			<!-- Вторая дата -->
			<xsl:if test="$xslDate2">
				<xsl:text> — </xsl:text>
				<xsl:call-template name="xslFormatDate">
					<xsl:with-param name="xslDate" select="$xslDate2"/>
				</xsl:call-template>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ сумма (и валюта) -->
	<xsl:template name="xslFormatAmount">
		<!--  -->
		<xsl:param name="xslAmount"/>
		<xsl:param name="currency"/>
		<!-- Режим: 1 = только сумма, 2 = сумма и валюта (default) -->
		<xsl:param name="xslAmountMode">2</xsl:param>
		<!-- Количество знаков после запятой -->
		<xsl:param name="xslAmountDecimal">2</xsl:param>
		<!-- Расцветка: 1 = только красный, 2 = красный и зеленый, 3 = так же как и 2, но ноль красный -->
		<xsl:param name="xslAmountColor"/>
		<!-- Выравниваем по центру, если пусто -->
		<xsl:param name="xslAmountCenter"/>
		<!--  -->
		<!-- Пусто - ставим прочерк -->
		<xsl:if test="not($xslAmount)">
			<xsl:if test="not($xslAmountCenter)">–</xsl:if>
			<xsl:if test="$xslAmountCenter">
				<center>–</center>
			</xsl:if>
		</xsl:if>
		<!-- Не пусто - показываем значение -->
		<xsl:if test="$xslAmount">
			<span class="text-nowrap">
				<!-- Режим 1 - только сумма -->
				<xsl:if test="$xslAmountMode = 1">
					<!-- Расцветка -->
					<xsl:variable name="xslClassColor">
						<!-- Только красный -->
						<xsl:if test="$xslAmountColor = '1' and $xslAmount &lt; 0">red</xsl:if>
						<!-- Красный и зеленый -->
						<xsl:if test="$xslAmountColor = '2' and $xslAmount &lt; 0">red</xsl:if>
						<xsl:if test="$xslAmountColor = '2' and $xslAmount &gt; 0">green</xsl:if>
						<!-- Красный и зеленый и красный ноль -->
						<xsl:if test="$xslAmountColor = '3' and $xslAmount &lt;= 0">red</xsl:if>
						<xsl:if test="$xslAmountColor = '3' and $xslAmount &gt; 0">green</xsl:if>
					</xsl:variable>
					<!-- Выводим значение -->
					<span class="{$xslClassColor}">
						<!-- Сумма -->
						<xsl:choose>
							<!-- 2 знака после запятой -->
							<xsl:when test="$xslAmountDecimal = '2'">
								<xsl:value-of select="format-number($xslAmount, '# ##0,00', 'rNumbersFormat')"/>
							</xsl:when>
							<!-- 4 знака после запятой -->
							<xsl:when test="$xslAmountDecimal = '4'">
								<xsl:value-of select="format-number($xslAmount, '# ##0,0000', 'rNumbersFormat')"/>
							</xsl:when>
							<!-- 5 знаков после запятой -->
							<xsl:when test="$xslAmountDecimal = '5'">
								<xsl:value-of select="format-number($xslAmount, '# ##0,00000', 'rNumbersFormat')"/>
							</xsl:when>
							<xsl:when test="$xslAmountDecimal = '6'">
								<xsl:value-of select="format-number($xslAmount, '# ##0,000000', 'rNumbersFormat')"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$ErrorText"/>
							</xsl:otherwise>
						</xsl:choose>
					</span>
					<xsl:value-of select="concat(' ', $currency)"/>
				</xsl:if>
				<!-- Режим 2 - сумма и валюта -->
				<xsl:if test="$xslAmountMode = 2">
					<!-- 1.сумма 2.валюта -->
					<xsl:if test="number($xslAmount/*[1]) = $xslAmount/*[1]">
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$xslAmount/*[1]"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						</xsl:call-template>
						<xsl:text> </xsl:text>
						<xsl:value-of select="$xslAmount/*[2]"/>
					</xsl:if>
					<!-- 1.валюта 2.сумма -->
					<xsl:if test="number($xslAmount/*[2]) = $xslAmount/*[2]">
						<xsl:call-template name="xslFormatAmount">
							<xsl:with-param name="xslAmount" select="$xslAmount/*[2]"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal" select="$xslAmountDecimal"/>
							<xsl:with-param name="xslAmountColor" select="$xslAmountColor"/>
						</xsl:call-template>
						<xsl:text> </xsl:text>
						<xsl:value-of select="$xslAmount/*[1]"/>
					</xsl:if>
				</xsl:if>
			</span>
		</xsl:if>
	</xsl:template>
	<xsl:template name="xslFormatAmount-excel-friendly">
		<!--  -->
		<xsl:param name="xslAmount"/>
		<!-- Режим: 1 = только сумма, 2 = сумма и валюта (default) -->
		<xsl:param name="xslAmountMode">2</xsl:param>
		<!-- Количество знаков после запятой -->
		<xsl:param name="xslAmountDecimal">2</xsl:param>
		<!-- Расцветка: 1 = только красный, 2 = красный и зеленый, 3 = так же как и 2, но ноль красный -->
		<xsl:param name="xslAmountColor"/>
		<!--  -->
		<!-- Пусто - ставим прочерк -->
		<xsl:if test="not($xslAmount)">
			<td class="grey">—</td>
			<td/>
		</xsl:if>
		<!-- Не пусто - показываем значение -->
		<xsl:if test="$xslAmount">
			<!-- Режим 1 - только сумма -->
			<xsl:if test="$xslAmountMode = 1">
				<!-- Расцветка -->
				<xsl:variable name="xslClassColor">
					<!-- Только красный -->
					<xsl:if test="$xslAmountColor = '1' and $xslAmount &lt; 0">red</xsl:if>
					<!-- Красный и зеленый -->
					<xsl:if test="$xslAmountColor = '2' and $xslAmount &lt; 0">red</xsl:if>
					<xsl:if test="$xslAmountColor = '2' and $xslAmount &gt; 0">green</xsl:if>
					<!-- Красный и зеленый и красный ноль -->
					<xsl:if test="$xslAmountColor = '3' and $xslAmount &lt;= 0">red</xsl:if>
					<xsl:if test="$xslAmountColor = '3' and $xslAmount &gt; 0">green</xsl:if>
				</xsl:variable>
				<!-- Выводим значение -->
				<span class="{$xslClassColor}">
					<!-- Сумма -->
					<xsl:choose>
						<!-- 2 знака после запятой -->
						<xsl:when test="$xslAmountDecimal = '2'">
							<xsl:value-of select="format-number($xslAmount, '# ##0,00', 'rNumbersFormat')"/>
						</xsl:when>
						<!-- 4 знака после запятой -->
						<xsl:when test="$xslAmountDecimal = '4'">
							<xsl:value-of select="format-number($xslAmount, '# ##0,0000', 'rNumbersFormat')"/>
						</xsl:when>
						<!-- 5 знаков после запятой -->
						<xsl:when test="$xslAmountDecimal = '5'">
							<xsl:value-of select="format-number($xslAmount, '# ##0,00000', 'rNumbersFormat')"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$ErrorText"/>
						</xsl:otherwise>
					</xsl:choose>
				</span>
			</xsl:if>
			<!-- Режим 2 - сумма и валюта -->
			<xsl:if test="$xslAmountMode = 2">
				<!-- 1.сумма 2.валюта -->
				<xsl:if test="number($xslAmount/*[1]) = $xslAmount/*[1]">
					<td class="text-nowrap xxx-border">
						<xsl:call-template name="xslFormatAmount-excel-friendly">
							<xsl:with-param name="xslAmount" select="$xslAmount/*[1]"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
						</xsl:call-template>
					</td>
					<td class="xxx-border">
						<xsl:value-of select="$xslAmount/*[2]"/>
					</td>
				</xsl:if>
				<!-- 1.валюта 2.сумма -->
				<xsl:if test="number($xslAmount/*[2]) = $xslAmount/*[2]">
					<td class="text-nowrap xxx-border">
						<xsl:call-template name="xslFormatAmount-excel-friendly">
							<xsl:with-param name="xslAmount" select="$xslAmount/*[2]"/>
							<xsl:with-param name="xslAmountMode">1</xsl:with-param>
							<xsl:with-param name="xslAmountDecimal" select="$xslAmountDecimal"/>
							<xsl:with-param name="xslAmountColor" select="$xslAmountColor"/>
						</xsl:call-template>
					</td>
					<td class="xxx-border">
						<xsl:value-of select="$xslAmount/*[1]"/>
					</td>
				</xsl:if>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ платеж -->
	<xsl:template name="xslFormatPayment">
		<xsl:param name="xslPayment"/>
		<!-- Спрятать валюту (по умолчанию = выкл.) -->
		<xsl:param name="hideCurrency">0</xsl:param>
		<!-- Дополнительно указать дату -->
		<xsl:param name="xslShowDate"/>
		<!-- Дополнительно указать плательщика -->
		<xsl:param name="xslShowPayer"/>
		<!-- Расцветка: 0 = без расцветки, 1 = только красный (default), 2 = красный и зеленый -->
		<xsl:param name="color">1</xsl:param>
		<!-- Переключатель для затемнения -->
		<xsl:param name="xslWithDim"/>
		<xsl:variable name="xlsClassDim">
			<xsl:if test="$xslWithDim = '1' and not($xslPayment/fpml:paymentDate/fpml:adjustedDate = $Today)">dim</xsl:if>
		</xsl:variable>
		<!-- Если платежа нет, то ставим прочерк -->
		<xsl:if test="not($xslPayment)">–</xsl:if>
		<!-- Если платеж есть, оформляем его -->
		<xsl:if test="$xslPayment">
			<span class="text-nowrap {$xlsClassDim}">
				<xsl:choose>
					<!-- Участник = получатель -->
					<xsl:when test="$xslPayment/fpml:payerPartyReference/@href = 'NCCB'">
						<xsl:variable name="xslClassColor">
							<xsl:if test="$color = '2'">green</xsl:if>
						</xsl:variable>
						<span class="{$xslClassColor}">
							<xsl:value-of select="format-number($xslPayment/fpml:paymentAmount/fpml:amount, '# ##0,00', 'rNumbersFormat')"/>
						</span>
					</xsl:when>
					<!-- Участник = плательщик -->
					<xsl:when test="$xslPayment/fpml:receiverPartyReference/@href = 'NCCB'">
						<xsl:variable name="xslClassColor">
							<xsl:if test="$color &gt; 0">red</xsl:if>
						</xsl:variable>
						<span class="{$xslClassColor}">
							<xsl:text>-</xsl:text>
							<xsl:value-of select="format-number($xslPayment/fpml:paymentAmount/fpml:amount, '# ##0,00', 'rNumbersFormat')"/>
						</span>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$ErrorText"/>
					</xsl:otherwise>
				</xsl:choose>
				<!-- Код валюты -->
				<xsl:if test="$hideCurrency = '0'">
					<xsl:text> </xsl:text>
					<xsl:value-of select="$xslPayment/fpml:paymentAmount/fpml:currency"/>
				</xsl:if>
				<!-- Дата платежа -->
				<xsl:if test="$xslShowDate = '1'">
					<xsl:text> (</xsl:text>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="$xslPayment/fpml:paymentDate/fpml:adjustedDate"/>
					</xsl:call-template>
					<xsl:text>)</xsl:text>
				</xsl:if>
				<xsl:if test="$xslShowDate = '2'">
					<div class="grey xsmall">
						<xsl:text>Дата платежа: </xsl:text>
						<xsl:call-template name="xslFormatDate">
							<xsl:with-param name="xslDate" select="$xslPayment/fpml:paymentDate/fpml:adjustedDate"/>
						</xsl:call-template>
					</div>
				</xsl:if>
				<!-- Плательщик -->
				<xsl:if test="$xslShowPayer = '1' and not($xslPayment/fpml:payerPartyReference/@href = $Self)">
					<div class="xsmall">
						<xsl:if test="$lang = 'ru'">Плательщик: </xsl:if>
						<xsl:if test="$lang = 'en'">Payer: </xsl:if>
						<xsl:apply-templates select="$xslPayment/fpml:payerPartyReference/@href" mode="v144"/>
					</div>
				</xsl:if>
				<!-- id платежа -->
				<xsl:if test="$check = 'id'">
					<div class="grey">
						<xsl:text>id: </xsl:text>
						<xsl:value-of select="$xslPayment/@id"/>
					</div>
				</xsl:if>
			</span>
			<!-- Вся инфа по платежу (временное решение) -->
			<xsl:if test="$check = 'more'">
				<div class="grey xsmall">
					<div>
						<xsl:text>id: </xsl:text>
						<xsl:value-of select="$xslPayment/@id"/>
					</div>
					<div>
						<xsl:text>payer: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:payerPartyReference/@href"/>
						<xsl:text> / </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:payerAccountReference/@href"/>
					</div>
					<div>
						<xsl:text>receiver: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:receiverPartyReference/@href"/>
						<xsl:text> / </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:receiverAccountReference/@href"/>
					</div>
					<div>
						<xsl:text>date: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:paymentDate/fpml:adjustedDate"/>
					</div>
					<div>
						<xsl:text>type: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:paymentType"/>
					</div>
				</div>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<xsl:template name="xslFormatPayment-excel-friendly">
		<xsl:param name="xslPayment"/>
		<!-- Спрятать валюту (по умолчанию = выкл.) -->
		<xsl:param name="hideCurrency">0</xsl:param>
		<!-- Дополнительно указать дату -->
		<xsl:param name="xslShowDate"/>
		<!-- Дополнительно указать плательщика -->
		<xsl:param name="xslShowPayer"/>
		<!-- Расцветка: 0 = без расцветки, 1 = только красный (default), 2 = красный и зеленый -->
		<xsl:param name="color">1</xsl:param>
		<!-- Переключатель для затемнения -->
		<xsl:param name="xslWithDim"/>
		<xsl:variable name="xlsClassDim">
			<xsl:if test="$xslWithDim = '1' and not($xslPayment/fpml:paymentDate/fpml:adjustedDate = $Today)">dim</xsl:if>
		</xsl:variable>
		<!-- Если платежа нет, то ставим прочерк -->
		<xsl:if test="not($xslPayment)">
			<td class="grey">—</td>
			<td/>
		</xsl:if>
		<!-- Если платеж есть, оформляем его -->
		<xsl:if test="$xslPayment">
			<span class="{$xlsClassDim}">
				<td class="text-nowrap">
					<xsl:choose>
						<!-- Участник = получатель -->
						<xsl:when test="$xslPayment/fpml:payerPartyReference/@href = 'NCCB'">
							<xsl:variable name="xslClassColor">
								<xsl:if test="$color = '2'">green</xsl:if>
							</xsl:variable>
							<span class="{$xslClassColor}">
								<xsl:value-of select="format-number($xslPayment/fpml:paymentAmount/fpml:amount, '# ##0,00', 'rNumbersFormat')"/>
							</span>
						</xsl:when>
						<!-- Участник = плательщик -->
						<xsl:when test="$xslPayment/fpml:receiverPartyReference/@href = 'NCCB'">
							<xsl:variable name="xslClassColor">
								<xsl:if test="$color &gt; 0">red</xsl:if>
							</xsl:variable>
							<span class="{$xslClassColor}">
								<!-- <xsl:text>-</xsl:text> -->
								<xsl:value-of select="format-number($xslPayment/fpml:paymentAmount/fpml:amount * (-1), '# ##0,00', 'rNumbersFormat')"/>
							</span>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$ErrorText"/>
						</xsl:otherwise>
					</xsl:choose>
				</td>
				<!-- Код валюты -->
				<xsl:if test="$hideCurrency = '0'">
					<td>
						<xsl:value-of select="$xslPayment/fpml:paymentAmount/fpml:currency"/>
					</td>
				</xsl:if>
				<!-- Дата платежа -->
				<xsl:if test="$xslShowDate = '1'">
					<xsl:text> (</xsl:text>
					<xsl:call-template name="xslFormatDate">
						<xsl:with-param name="xslDate" select="$xslPayment/fpml:paymentDate/fpml:adjustedDate"/>
					</xsl:call-template>
					<xsl:text>)</xsl:text>
				</xsl:if>
				<xsl:if test="$xslShowDate = '2'">
					<div class="grey xsmall">
						<xsl:text>Дата платежа: </xsl:text>
						<xsl:call-template name="xslFormatDate">
							<xsl:with-param name="xslDate" select="$xslPayment/fpml:paymentDate/fpml:adjustedDate"/>
						</xsl:call-template>
					</div>
				</xsl:if>
				<!-- Плательщик -->
				<xsl:if test="$xslShowPayer = '1' and not($xslPayment/fpml:payerPartyReference/@href = $Self)">
					<div class="xsmall">
						<xsl:if test="$lang = 'ru'">Плательщик: </xsl:if>
						<xsl:if test="$lang = 'en'">Payer: </xsl:if>
						<xsl:apply-templates select="$xslPayment/fpml:payerPartyReference/@href"/>
					</div>
				</xsl:if>
				<!-- id платежа -->
				<xsl:if test="$check = 'id'">
					<div class="grey">
						<xsl:text>id: </xsl:text>
						<xsl:value-of select="$xslPayment/@id"/>
					</div>
				</xsl:if>
			</span>
			<!-- Вся инфа по платежу (временное решение) -->
			<xsl:if test="$check = 'more'">
				<div class="grey xsmall">
					<div>
						<xsl:text>id: </xsl:text>
						<xsl:value-of select="$xslPayment/@id"/>
					</div>
					<div>
						<xsl:text>payer: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:payerPartyReference/@href"/>
						<xsl:text> / </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:payerAccountReference/@href"/>
					</div>
					<div>
						<xsl:text>receiver: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:receiverPartyReference/@href"/>
						<xsl:text> / </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:receiverAccountReference/@href"/>
					</div>
					<div>
						<xsl:text>date: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:paymentDate/fpml:adjustedDate"/>
					</div>
					<div>
						<xsl:text>type: </xsl:text>
						<xsl:value-of select="$xslPayment/fpml:paymentType"/>
					</div>
				</div>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ ставка -->
	<xsl:template name="xslFormatRate">
		<xsl:param name="xslRate"/>
		<xsl:param name="xslRateDecimal"/>
		<xsl:param name="xslRateColor"/>
		<xsl:variable name="xslClassColor">
			<xsl:if test="$xslRateColor = '1' and $xslRate &gt; 0 and $xslRate &lt; 0.1">red</xsl:if>
			<xsl:if test="$xslRateColor = '1' and $xslRate &gt;= 0.1 and $xslRate &lt; 0.2">yellow</xsl:if>
		</xsl:variable>
		<!--  -->
		<xsl:if test="not($xslRate)">–</xsl:if>
		<xsl:if test="$xslRate">
			<span class="{$xslClassColor}">
				<xsl:choose>
					<xsl:when test="$xslRateDecimal = 2">
						<xsl:value-of select="format-number($xslRate, '# ##0,00%', 'rNumbersFormat')"/>
					</xsl:when>
					<xsl:when test="$xslRateDecimal = 4">
						<xsl:value-of select="format-number($xslRate, '# ##0,0000%', 'rNumbersFormat')"/>
					</xsl:when>
					<xsl:when test="$xslRateDecimal = 5">
						<xsl:value-of select="format-number($xslRate, '# ##0,00000%', 'rNumbersFormat')"/>
					</xsl:when>
					<xsl:when test="$xslRateDecimal = 6">
						<xsl:value-of select="format-number($xslRate, '# ##0,000000%', 'rNumbersFormat')"/>
					</xsl:when>
					<xsl:when test="$xslRateDecimal = 8">
						<xsl:value-of select="format-number($xslRate, '# ##0,00000000%', 'rNumbersFormat')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="format-number($xslRate, '# ##0,00######%', 'rNumbersFormat')"/>
					</xsl:otherwise>
				</xsl:choose>
			</span>
		</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ dayCountFraction -->
	<xsl:template match="dayCountFraction | ms:dayCountFraction">
		<xsl:if test="(.) = 'ACT/ACT.ISDA'">Actual/Actual</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ Exchange Rate Name -->
	<xsl:template match="fpml:quotedCurrencyPair">
		<xsl:if test="fpml:quoteBasis = 'Currency1PerCurrency2'">
			<xsl:text> </xsl:text>
			<xsl:value-of select="fpml:currency2"/>
			<xsl:text>/</xsl:text>
			<xsl:value-of select="fpml:currency1"/>
		</xsl:if>
		<xsl:if test="fpml:quoteBasis = 'Currency2PerCurrency1'">
			<xsl:text> </xsl:text>
			<xsl:value-of select="fpml:currency1"/>
			<xsl:text>/</xsl:text>
			<xsl:value-of select="fpml:currency2"/>
		</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ Date Adjustments -->
	<xsl:template match="fpml:dateAdjustments | fpml:paymentDatesAdjustments">
		<!-- Есть список календарей -->
		<xsl:if test="fpml:businessCenters">
			<label for="{generate-id()}" class="hov-grey">
				<xsl:value-of select="fpml:businessDayConvention"/>
			</label>
			<input id="{generate-id()}" type="checkbox" checked="checked"/>
			<div class="css-more more1">
				<span class="grey">Календари</span>
				<div>
					<xsl:apply-templates select="fpml:businessCenters/fpml:businessCenter"/>
				</div>
			</div>
		</xsl:if>
		<!-- Нет списка календарей -->
		<xsl:if test="not(fpml:businessCenters)">
			<xsl:value-of select="fpml:businessDayConvention"/>
		</xsl:if>
	</xsl:template>
	<xsl:template match="fpml:businessCenter">
		<xsl:text>• </xsl:text>
		<xsl:value-of select="."/>
		<br/>
	</xsl:template>
	<!-- Форматирование \\\ Party -->
	<xsl:template match="ms:sentBy | ms:sendTo | ms:firmId | fpml:partyReference/@href | fpml:payerPartyReference/@href | fpml:receiverPartyReference/@href">
		<span title="{key( 'Party' , (.) )}">
			<xsl:value-of select="(.)"/>
		</span>
	</xsl:template>
	<xsl:template match="ms:sentBy | ms:sendTo | ms:firmId | fpml:partyReference/@href | fpml:payerPartyReference/@href | fpml:receiverPartyReference/@href" mode="v144">
		<xsl:variable name="code" select="(.)"/>
		<xsl:variable name="name">
			<xsl:choose>
				<xsl:when test="key( 'Party' , (.) )">
					<xsl:value-of select="key( 'Party' , (.) )"/>
				</xsl:when>
				<xsl:when test="$code = 'NCCB'">НКО НКЦ (АО)</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$code"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<!--  -->
		<span title="{$code}">
			<xsl:value-of select="$name"/>
		</span>
	</xsl:template>
	<xsl:template match="ms:sentBy | ms:sendTo | ms:firmId | fpml:partyReference/@href | fpml:payerPartyReference/@href | fpml:receiverPartyReference/@href" mode="v144-alt">
		<xsl:variable name="code" select="(.)"/>
		<xsl:variable name="name">
			<xsl:choose>
				<xsl:when test="key( 'Party' , (.) )">
					<xsl:value-of select="key( 'Party' , (.) )"/>
				</xsl:when>
				<xsl:when test="$code = 'NCCB'">НКО НКЦ (АО)</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$code"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<!--  -->
		<xsl:value-of select="$name"/>
		<xsl:if test="$code != $name">
			<xsl:text> </xsl:text>
			<span class="small grey">
				<xsl:value-of select="$code"/>
			</span>
		</xsl:if>
	</xsl:template>
	<!-- Форматирование \\\ Счет НКЦ -->
	<xsl:template name="xslFormatNccbAccount">
		<xsl:param name="xslNccbAccount"/>
		<!--  -->
		<div class="small grey">
			<div class="acc-div">
				<span>
					<xsl:if test="$lang = 'ru'">Счет НКЦ: </xsl:if>
					<xsl:if test="$lang = 'en'">NCC account: </xsl:if>
				</span>
				<span class="acc-block">
					<xsl:value-of select="substring($xslNccbAccount, 1, 5)"/>
				</span>
				<span class="acc-block">
					<xsl:value-of select="substring($xslNccbAccount, 6, 3)"/>
				</span>
				<span class="acc-block">
					<xsl:value-of select="substring($xslNccbAccount, 9, 2)"/>
				</span>
				<span class="acc-block">
					<xsl:value-of select="substring($xslNccbAccount, 11, 5)"/>
				</span>
				<span class="acc-block">
					<xsl:value-of select="substring($xslNccbAccount, 16, 5)"/>
				</span>
			</div>
		</div>
	</xsl:template>
	<xsl:template name="xslFormatNccbAccount-css">
		.acc-div:hover { color: #7A7A7A; }
		.acc-block:hover { color: black; cursor: none; }
	</xsl:template>
	<!--  -->
	<xsl:template name="p-codes">
		<xsl:if test="$check = 'codes'">
			<h3>p codes</h3>
			<table border="1">
				<tr>
					<th>Код</th>
					<th>Тип платежа</th>
				</tr>
				<xsl:variable name="codes" select="document('')/xsl:stylesheet/lt:liabilityTypes"/>
				<xsl:for-each select="$codes/lt:liabilityType">
					<tr>
						<td>
							<xsl:value-of select="@id"/>
						</td>
						<td>
							<xsl:value-of select="lt:name[1]"/>
						</td>
					</tr>
				</xsl:for-each>
			</table>
		</xsl:if>
	</xsl:template>
	<xsl:template name="calculate-duration">
		<xsl:param name="dateFrom"/>
		<xsl:param name="dateTo"/>
		<!--  -->
		<!-- dateFrom -->
		<xsl:variable name="a1" select="floor((14 - substring($dateFrom,6,2)) div 12)"/>
		<xsl:variable name="y1" select="substring($dateFrom,1,4) + 4800 - $a1"/>
		<xsl:variable name="m1" select="substring($dateFrom,6,2) + 12 * $a1 - 3"/>
		<!-- Юлианская дата -->
		<xsl:variable name="dateFromJulian" select="substring($dateFrom,9,2) + floor((153 * $m1 + 2) div 5) + $y1 * 365 + floor($y1 div 4) - floor($y1 div 100) + floor($y1 div 400) - 32045"/>
		<!-- dateTo -->
		<xsl:variable name="a2" select="floor((14 - substring($dateTo,6,2)) div 12)"/>
		<xsl:variable name="y2" select="substring($dateTo,1,4) + 4800 - $a2"/>
		<xsl:variable name="m2" select="substring($dateTo,6,2) + 12 * $a2 - 3"/>
		<!-- Юлианская дата -->
		<xsl:variable name="dateToJulian" select="substring($dateTo,9,2) + floor((153 * $m2 + 2) div 5) + $y2 * 365 + floor($y2 div 4) - floor($y2 div 100) + floor($y2 div 400) - 32045"/>
		<xsl:value-of select="$dateToJulian - $dateFromJulian"/>
	</xsl:template>
	<xsl:variable name="step">0.1</xsl:variable>
	<!--  -->
	<!--  -->
	<!--  -->
	<!--  -->
	<!--  -->
	<!-- checker -->
	<xsl:template name="checker">
		<xsl:param name="checkthis"/>
		<!-- Режимы: la / pa / eas / eaa / ld / baf -->
		<xsl:param name="mode"/>
		<!--  -->
		<!-- Общий рубильник -->
		<xsl:if test="$check">
			<!-- Нет данных на входе -->
			<xsl:if test="not($checkthis) or not($mode)">
				<span class="yellow">•</span>
			</xsl:if>
			<!-- Есть данные на входе -->
			<xsl:if test="$checkthis">
				<!-- Проверка liabilityAmount -->
				<xsl:if test="$mode = 'la'">
					<xsl:variable name="calc" select="format-number( sum( $checkthis/ancestor::ms:balance//ms:liabilityGroup/ms:liabilityAmount/ms:amount ) - $checkthis/ms:amount , '#.######' )"/>
					<xsl:variable name="comp" select="boolean( $calc = 0 )"/>
					<xsl:call-template name="checkerResult">
						<xsl:with-param name="result">
							<xsl:value-of select="$comp"/>
						</xsl:with-param>
						<xsl:with-param name="info">Нетто-обязательство = сумма обязательств по типам</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="not($comp)">
						<xsl:text>(</xsl:text>
						<xsl:value-of select="$calc"/>
						<xsl:text>)</xsl:text>
					</xsl:if>
				</xsl:if>
				<!-- Проверка payments -->
				<xsl:if test="$mode = 'pa'">
					<xsl:variable name="calc" select="$checkthis/ancestor::ms:balance/ms:liability/ms:liabilityAmount/ms:amount - $checkthis/ms:amount"/>
					<xsl:variable name="comp" select="boolean( $calc = 0 )"/>
					<xsl:call-template name="checkerResult">
						<xsl:with-param name="result">
							<xsl:value-of select="$comp"/>
						</xsl:with-param>
						<xsl:with-param name="info">Платежи = нетто-обязательства</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="not($comp)">
						<xsl:text>(</xsl:text>
						<xsl:value-of select="$calc"/>
						<xsl:text>)</xsl:text>
					</xsl:if>
				</xsl:if>
				<!-- Проверка estimateAmountSumm -->
				<xsl:if test="$mode = 'eas'">
					<xsl:variable name="calc" select="format-number( $checkthis/ms:amount - sum( $checkthis/parent::ms:settlementCode//ms:estimateAmount/ms:amount ) , '#.###' )"/>
					<xsl:variable name="comp" select="boolean( $calc = 0 )"/>
					<xsl:call-template name="checkerResult">
						<xsl:with-param name="result">
							<xsl:value-of select="$comp"/>
						</xsl:with-param>
						<xsl:with-param name="info">Суммарная оценка обеспечения = сумма оценок каждого актива</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="not($comp)">
						<xsl:text>(</xsl:text>
						<xsl:value-of select="$calc"/>
						<xsl:text>)</xsl:text>
					</xsl:if>
				</xsl:if>
				<!-- Проверка estimateAmountAvailable -->
				<xsl:if test="$mode = 'eaa'">
					<xsl:variable name="calc" select="format-number( $checkthis/ms:amount - $checkthis/parent::ms:settlementCode/ms:estimateAmountSumm/ms:amount + $checkthis/parent::ms:settlementCode/ms:initialMarginMin/ms:amount , '#.###' )"/>
					<xsl:variable name="comp" select="boolean( $calc = 0 )"/>
					<xsl:call-template name="checkerResult">
						<xsl:with-param name="result">
							<xsl:value-of select="$comp"/>
						</xsl:with-param>
						<xsl:with-param name="info">Свободне средства = Сумарная оценка - Требование к обеспечению</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="not($comp)">
						<xsl:text>(</xsl:text>
						<xsl:value-of select="$calc"/>
						<xsl:text>)</xsl:text>
					</xsl:if>
				</xsl:if>
				<!-- Проверка liabilityDetails -->
				<xsl:if test="$mode = 'ld'">
					<xsl:variable name="sum10result">
						<xsl:call-template name="sum101">
							<xsl:with-param name="type" select="$checkthis/@id"/>
							<xsl:with-param name="currency" select="$checkthis/ancestor::ms:balance/@id"/>
							<xsl:with-param name="scode" select="$checkthis/ancestor::ms:settlementCode/ms:settlementCodeId"/>
						</xsl:call-template>
					</xsl:variable>
					<!-- <xsl:value-of select="$sum10result"/> -->
					<!-- <xsl:value-of select="boolean( $checkthis/ms:liabilityAmount/ms:amount = $sum10result )"/> -->
					<xsl:call-template name="checkerResult">
						<xsl:with-param name="result" select="boolean( $checkthis/ms:liabilityAmount/ms:amount = $sum10result )"/>
					</xsl:call-template>
				</xsl:if>
				<!-- Проверка balanceAfterClearing -->
				<xsl:if test="$mode = 'baf'">
					<xsl:variable name="calc" select="format-number( $checkthis/ancestor::ms:balance/ms:balanceBeforeClearing/ms:amount + $checkthis/ancestor::ms:balance/ms:payments/ms:amount - $checkthis/ms:amount , '##.#####' )"/>
					<xsl:variable name="comp" select="boolean( $calc = 0 )"/>
					<xsl:call-template name="checkerResult">
						<xsl:with-param name="result">
							<xsl:value-of select="$comp"/>
						</xsl:with-param>
						<xsl:with-param name="info">Баланс после клиринга = Баланс до клиринга - платежи</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="not($comp)">
						<xsl:text>(</xsl:text>
						<xsl:value-of select="$calc"/>
						<xsl:text>)</xsl:text>
					</xsl:if>
				</xsl:if>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<xsl:template name="checkerResult">
		<xsl:param name="result"/>
		<xsl:param name="info"/>
		<!--  -->
		<span title="{$info}" style="margin: 3px">
			<xsl:choose>
				<xsl:when test="$result = 'true'">
					<span class="green">•</span>
				</xsl:when>
				<xsl:otherwise>
					<span class="red">•</span>
				</xsl:otherwise>
			</xsl:choose>
		</span>
	</xsl:template>
	<xsl:template name="paymentsSum">
		<xsl:param name="currency"/>
		<xsl:param name="type"/>
		<xsl:value-of select="sum( //ms:npvPayment[(fpml:payerPartyReference/@href = 'NCCB') and (fpml:paymentDate/fpml:adjustedDate = $Today) and (fpml:paymentType = $type)]/fpml:paymentAmount[fpml:currency = $currency]/fpml:amount) - sum(//ms:npvPayment[(fpml:receiverPartyReference/@href = 'NCCB') and (fpml:paymentDate/fpml:adjustedDate = $Today) and (fpml:paymentType = $type)]/fpml:paymentAmount[fpml:currency = $currency]/fpml:amount)"/>
	</xsl:template>
	<xsl:template name="paymentsSum2">
		<xsl:param name="currency"/>
		<xsl:param name="type"/>
		<xsl:value-of select="sum( //fpml:otherPartyPayment[(fpml:payerPartyReference/@href = 'NCCB') and (fpml:paymentDate/fpml:adjustedDate = $Today) and (fpml:paymentType = $type)]/fpml:paymentAmount[fpml:currency = $currency]/fpml:amount) - sum(//fpml:otherPartyPayment[(fpml:receiverPartyReference/@href = 'NCCB') and (fpml:paymentDate/fpml:adjustedDate = $Today) and (fpml:paymentType = $type)]/fpml:paymentAmount[fpml:currency = $currency]/fpml:amount)"/>
	</xsl:template>
	<xsl:template name="paymentsSum3">
		<xsl:param name="currency"/>
		<xsl:param name="type"/>
		<xsl:value-of select="sum( //fpml:otherPartyPayment[(fpml:payerPartyReference/@href = 'NCCB') and (fpml:paymentType = $type)]/fpml:paymentAmount[fpml:currency = $currency]/fpml:amount) - sum(//fpml:otherPartyPayment[(fpml:receiverPartyReference/@href = 'NCCB') and (fpml:paymentType = $type)]/fpml:paymentAmount[fpml:currency = $currency]/fpml:amount)"/>
	</xsl:template>
	<!--  -->
	<xsl:template name="PRC_NM-check">
		<xsl:if test="$check">
			<xsl:apply-templates select="$TRADES[ fpml:tradeHeader/fpml:partyTradeInformation/fpml:category != 'Exchange' ][ ms:moexSpfiExt/ms:npv/ms:npvPoint[2] ]" mode="PRC_NM-check"/>
		</xsl:if>
	</xsl:template>
	<xsl:template match="ms:trade | fpml:termination/fpml:originalTrade" mode="PRC_NM-check">
		<xsl:if test="not(ms:moexSpfiExt/ms:npv/ms:npvPoint[ms:npvDate = $Today]/ms:npvPayment[fpml:paymentType = 'PRC_NM'])">
			<xsl:variable name="id" select="@id"/>
			<div class="message notification">
				<xsl:text>По сделке </xsl:text>
				<a href="#{$id}">
					<xsl:value-of select="substring-after($id, 't')"/>
				</a>
				<xsl:text> не начислены проценты на ДМ</xsl:text>
				<!-- <xsl:value-of select="$csa"/> -->
			</div>
		</xsl:if>
	</xsl:template>
	<xsl:template name="M-START-check">
		<xsl:if test="$check">
			<xsl:apply-templates select="$TRADES" mode="M-START-check"/>
		</xsl:if>
	</xsl:template>
	<xsl:template match="ms:trade | fpml:termination/fpml:originalTrade" mode="M-START-check">
		<xsl:variable name="trade-date" select="fpml:tradeHeader/fpml:tradeDate"/>
		<xsl:variable name="m-start-date" select="ms:moexSpfiExt/ms:npv/ms:npvPoint[1]/ms:npvDate"/>
		<xsl:if test="$trade-date != $m-start-date">
			<h3>
				<xsl:text>M-START-check: </xsl:text>
				<xsl:value-of select="substring(@id, 2)"/>
			</h3>
		</xsl:if>
	</xsl:template>
	<!--  -->
	<!-- super sum -->
	<xsl:template name="sum101">
		<xsl:param name="type"/>
		<xsl:param name="mode" select="document('')/xsl:stylesheet/lt:liabilityTypes/lt:liabilityType[ @id = $type ]/lt:checkmode"/>
		<xsl:param name="currency"/>
		<xsl:param name="date" select="$Today"/>
		<xsl:param name="scode"/>
		<!--  -->
		<!-- <xsl:variable name="tradePath" select="$TRADES"/> -->
		<xsl:variable name="tradePath" select="$TRADES[ ms:moexSpfiExt/ms:tradeInfo/ms:settlementCode = $scode ]"/>
		<!--  -->
		<xsl:variable name="tradePath2" select="/ms:moexSpfiReport/ms:fpml/ms:amendment | /ms:moexSpfiReport/ms:fpml/ms:termination"/>
		<!--  -->
		<xsl:variable name="sum10result">
			<!-- npvPayment -->
			<xsl:if test="$mode = 'npv'">
				<xsl:variable name="sumNpvP" select="sum( $tradePath/ms:moexSpfiExt/ms:npv/*/ms:npvPayment[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $date ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumNpvN" select="sum( $tradePath/ms:moexSpfiExt/ms:npv/*/ms:npvPayment[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $date ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:value-of select="$sumNpvP - $sumNpvN"/>
			</xsl:if>
			<!-- otherPartyPayment -->
			<xsl:if test="$mode = 'other'">
				<xsl:variable name="sumOtherFpmlP" select="sum( $tradePath/fpml:otherPartyPayment[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumOtherFpmlN" select="sum( $tradePath/fpml:otherPartyPayment[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumOtherMsP" select="sum(    $tradePath2/ms:otherPartyPayment[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumOtherMsN" select="sum(    $tradePath2/ms:otherPartyPayment[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:value-of select="$sumOtherFpmlP - $sumOtherFpmlN + $sumOtherMsP - $sumOtherMsN"/>
			</xsl:if>
			<!-- payment (платеж при изменении/удалении сделки) -->
			<xsl:if test="$mode = 'other2'">
				<xsl:variable name="sumOther2P" select="sum( $tradePath2/ms:payment[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumOther2N" select="sum( $tradePath2/ms:payment[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:value-of select="$sumOther2P - $sumOther2N"/>
			</xsl:if>
			<!-- bonus (премия) -->
			<xsl:if test="$mode = 'bonus'">
				<xsl:variable name="sumAddP" select="sum( $tradePath/fpml:swap/fpml:additionalPayment[ fpml:payerPartyReference/@href    = 'NCCB'][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumAddN" select="sum( $tradePath/fpml:swap/fpml:additionalPayment[ fpml:receiverPartyReference/@href = 'NCCB'][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<!-- из-за fx swap добавил пока сюда эти платежи -->
				<xsl:variable name="sumOtherP" select="sum( $tradePath/fpml:otherPartyPayment[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumOtherN" select="sum( $tradePath/fpml:otherPartyPayment[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:value-of select="$sumAddP - $sumAddN + $sumOtherP - $sumOtherN"/>
			</xsl:if>
			<!-- principalExchange -->
			<xsl:if test="$mode = 'principal'">
				<xsl:variable name="sumDP01" select="sum( $tradePath/fpml:swap/fpml:swapStream[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency = $currency ]/fpml:cashflows/fpml:principalExchange[1][ fpml:adjustedPrincipalExchangeDate = $Today ]/fpml:principalExchangeAmount )"/>
				<xsl:variable name="sumDT01" select="sum( $tradePath/fpml:swap/fpml:swapStream[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency = $currency ]/fpml:cashflows/fpml:principalExchange[1][ fpml:adjustedPrincipalExchangeDate = $Today ]/fpml:principalExchangeAmount )"/>
				<xsl:variable name="sumDP02" select="sum( $tradePath/fpml:swap/fpml:swapStream[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency = $currency ]/fpml:cashflows/fpml:principalExchange[2][ fpml:adjustedPrincipalExchangeDate = $Today ]/fpml:principalExchangeAmount )"/>
				<xsl:variable name="sumDT02" select="sum( $tradePath/fpml:swap/fpml:swapStream[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:calculationPeriodAmount/fpml:calculation/fpml:notionalSchedule/fpml:notionalStepSchedule/fpml:currency = $currency ]/fpml:cashflows/fpml:principalExchange[2][ fpml:adjustedPrincipalExchangeDate = $Today ]/fpml:principalExchangeAmount )"/>
				<!--  -->
				<xsl:if test="$type = 'DP01'">
					<xsl:value-of select="$sumDP01"/>
				</xsl:if>
				<xsl:if test="$type = 'DT01'">
					<xsl:value-of select="$sumDT01 * -1"/>
				</xsl:if>
				<xsl:if test="$type = 'DP02'">
					<xsl:value-of select="$sumDP02"/>
				</xsl:if>
				<xsl:if test="$type = 'DT02'">
					<xsl:value-of select="$sumDT02 * -1"/>
				</xsl:if>
			</xsl:if>
			<!-- paymentCalculationPeriod -->
			<xsl:if test="$mode = 'payment'">
				<xsl:variable name="sumDP03" select="sum( $tradePath/fpml:swap/fpml:swapStream[ fpml:payerPartyReference/@href    = 'NCCB' ]/fpml:cashflows/fpml:paymentCalculationPeriod[ fpml:adjustedPaymentDate = $Today ]/fpml:forecastPaymentAmount[ fpml:currency = $currency ]/fpml:amount)"/>
				<xsl:variable name="sumDT03" select="sum( $tradePath/fpml:swap/fpml:swapStream[ fpml:receiverPartyReference/@href = 'NCCB' ]/fpml:cashflows/fpml:paymentCalculationPeriod[ fpml:adjustedPaymentDate = $Today ]/fpml:forecastPaymentAmount[ fpml:currency = $currency ]/fpml:amount)"/>
				<xsl:if test="$type = 'DP03'">
					<xsl:value-of select="$sumDP03"/>
				</xsl:if>
				<xsl:if test="$type = 'DT03'">
					<xsl:value-of select="$sumDT03 * -1"/>
				</xsl:if>
			</xsl:if>
			<!-- fx -->
			<xsl:if test="$mode = 'fx'">
				<xsl:variable name="sumFXP" select="sum( $tradePath/fpml:fxSwap/*[ fpml:valueDate = $date ]/*[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumFXN" select="sum( $tradePath/fpml:fxSwap/*[ fpml:valueDate = $date ]/*[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:value-of select="$sumFXP - $sumFXN"/>
			</xsl:if>
			<!-- fwd -->
			<xsl:if test="$mode = 'fwd'">
				<xsl:variable name="sumFXP" select="sum( $tradePath/fpml:fxSingleLeg[ fpml:valueDate = $date ]/*[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:variable name="sumFXN" select="sum( $tradePath/fpml:fxSingleLeg[ fpml:valueDate = $date ]/*[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/>
				<xsl:value-of select="$sumFXP - $sumFXN"/>
			</xsl:if>
			<!-- bulletPayment -->
			<xsl:if test="$mode = 'bullet'">
				<xsl:variable name="bullets-all" select="$BULLETS[ contains( ms:moexSpfiExt/ms:tradeInfo/ms:settlementCode , $scode ) ][ fpml:bulletPayment/fpml:payment/fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:bulletPayment/fpml:payment/fpml:paymentType = $type ][ fpml:bulletPayment/fpml:payment/fpml:paymentAmount/fpml:currency = $currency ]"/>
				<!-- <xsl:variable name="sumBulP" select="sum( $BULLETS/fpml:bulletPayment/fpml:payment[ fpml:payerPartyReference/@href    = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/> -->
				<!-- <xsl:variable name="sumBulN" select="sum( $BULLETS/fpml:bulletPayment/fpml:payment[ fpml:receiverPartyReference/@href = 'NCCB' ][ fpml:paymentDate/fpml:adjustedDate = $Today ][ fpml:paymentType = $type ]/fpml:paymentAmount[ fpml:currency = $currency ]/fpml:amount )"/> -->
				<xsl:variable name="sumBulP" select="sum( $bullets-all/fpml:bulletPayment/fpml:payment[ fpml:payerPartyReference/@href    = 'NCCB' ]/fpml:paymentAmount/fpml:amount )"/>
				<xsl:variable name="sumBulN" select="sum( $bullets-all/fpml:bulletPayment/fpml:payment[ fpml:receiverPartyReference/@href = 'NCCB' ]/fpml:paymentAmount/fpml:amount )"/>
				<xsl:value-of select="$sumBulP - $sumBulN"/>
			</xsl:if>
		</xsl:variable>
		<!-- Результат -->
		<xsl:value-of select="format-number( $sum10result , '#.##' )"/>
	</xsl:template>
	<!-- lookup -->
	<!-- the end -->
	<lt:liabilityTypes>
		<lt:liabilityType id="SCFVM">
			<lt:name xml:lang="ru">Вариационная маржа</lt:name>
			<lt:name xml:lang="en">Variation Margin</lt:name>
			<lt:checkmode>npv</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCFDM">
			<lt:name xml:lang="ru">Депозитная маржа</lt:name>
			<lt:name xml:lang="en">Deposit Margin</lt:name>
			<lt:checkmode>npv</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="RTN_DM">
			<lt:name xml:lang="ru">Возврат накопленной депозитной маржи</lt:name>
			<lt:name xml:lang="en">Deposit Margin Return</lt:name>
			<lt:checkmode>npv</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCMC1">
			<lt:name xml:lang="ru">Биржевая комиссия</lt:name>
			<lt:name xml:lang="en">Exchange Fee</lt:name>
			<lt:checkmode>other</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCMC2">
			<lt:name xml:lang="ru">Клиринговая комиссия</lt:name>
			<lt:name xml:lang="en">Clearing Fee</lt:name>
			<lt:checkmode>other</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="PRC_DM">
			<lt:name xml:lang="ru">Проценты на обеспечение</lt:name>
			<lt:name xml:lang="en">Accrued Interest on Initial Margin</lt:name>
			<lt:checkmode>bullet</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="PRC_NM">
			<lt:name xml:lang="ru">Проценты на накопленную ДМ</lt:name>
			<lt:name xml:lang="en">Accrued Interest On Deposit Margin</lt:name>
			<lt:checkmode>npv</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="PNLTY">
			<lt:name xml:lang="ru">Штраф</lt:name>
			<lt:name xml:lang="en">Penalty</lt:name>
		</lt:liabilityType>
		<lt:liabilityType id="FX01">
			<lt:name xml:lang="ru">Обмен номиналами (FX Swap)</lt:name>
			<lt:name xml:lang="en">FX Swap Notional Exchange</lt:name>
			<lt:checkmode>fx</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="FX02">
			<lt:name xml:lang="ru">Обмен номиналами (FX Swap)</lt:name>
			<lt:name xml:lang="en">FX Swap Notional Exchange</lt:name>
			<lt:checkmode>fx</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="FWD01">
			<lt:name xml:lang="ru">Обмен номиналами (FWD)</lt:name>
			<lt:name xml:lang="en">FWD Notional Exchange</lt:name>
			<lt:checkmode>fwd</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="FWD02">
			<lt:name xml:lang="ru">Обмен номиналами (FWD)</lt:name>
			<lt:name xml:lang="en">FWD Notional Exchange</lt:name>
			<lt:checkmode>fwd</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="DP01">
			<lt:name xml:lang="ru">Обмен номиналами (XCCY)</lt:name>
			<lt:name xml:lang="en">XCCY Notional Exchange</lt:name>
			<lt:checkmode>principal</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="DT01">
			<lt:name xml:lang="ru">Обмен номиналами (XCCY)</lt:name>
			<lt:name xml:lang="en">XCCY Notional Exchange</lt:name>
			<lt:checkmode>principal</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="DP02">
			<lt:name xml:lang="ru">Обратный обмен номиналами (XCCY)</lt:name>
			<lt:name xml:lang="en">XCCY Notional Exchange</lt:name>
			<lt:checkmode>principal</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="DT02">
			<lt:name xml:lang="ru">Обратный обмен номиналами (XCCY)</lt:name>
			<lt:name xml:lang="en">XCCY Notional Exchange</lt:name>
			<lt:checkmode>principal</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="DP03">
			<lt:name xml:lang="ru">Процентный платеж</lt:name>
			<lt:name xml:lang="en">Interest Payment</lt:name>
			<lt:checkmode>payment</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="DT03">
			<lt:name xml:lang="ru">Процентный платеж</lt:name>
			<lt:name xml:lang="en">Interest Payment</lt:name>
			<lt:checkmode>payment</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCBNS">
			<lt:name xml:lang="ru">Премия</lt:name>
			<lt:name xml:lang="en">Premium</lt:name>
			<lt:checkmode>bonus</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="NDF0">
			<lt:name xml:lang="ru">Платеж по расчетному форварду</lt:name>
			<lt:name xml:lang="en">Forward Final Payment</lt:name>
			<lt:checkmode>other</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCMOD">
			<lt:name xml:lang="ru">Клиринговый сбор за изменение параметров сделки</lt:name>
			<lt:name xml:lang="en">Clearing Fee for Trade Amendment</lt:name>
			<lt:checkmode>other</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCCVM">
			<lt:name xml:lang="ru">Платеж при изменении валюты ВМ</lt:name>
			<lt:name xml:lang="en">CSA Change Payment</lt:name>
			<lt:checkmode>npv</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCCDM">
			<lt:name xml:lang="ru">Платеж при изменении валюты ДМ</lt:name>
			<lt:name xml:lang="en">CSA Change Payment</lt:name>
			<lt:checkmode>npv</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="PNLSC">
			<lt:name xml:lang="ru">Платеж при изменении/досрочном прекращении сделки</lt:name>
			<lt:name xml:lang="en">Trade Amendment/Termination Payment</lt:name>
			<lt:checkmode>other2</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCCNL">
			<lt:name xml:lang="ru">Клиринговый сбор за досрочное прекращение сделки</lt:name>
			<lt:name xml:lang="en">Clearing Fee for Trade Termination</lt:name>
			<lt:checkmode>other</lt:checkmode>
		</lt:liabilityType>
		<lt:liabilityType id="SCPRM">
			<lt:name xml:lang="ru">Премия по опциону</lt:name>
			<lt:name xml:lang="en">Premium</lt:name>
			<!-- <lt:checkmode>other2</lt:checkmode> -->
		</lt:liabilityType>
		<lt:liabilityType id="OPTFX01">
			<lt:name xml:lang="ru">Исполнение опциона</lt:name>
			<lt:name xml:lang="en">Option Exercise</lt:name>
			<!-- <lt:checkmode>other2</lt:checkmode> -->
		</lt:liabilityType>
		<lt:liabilityType id="OPTFX02">
			<lt:name xml:lang="ru">Исполнение опциона</lt:name>
			<lt:name xml:lang="en">Option Exercise</lt:name>
			<!-- <lt:checkmode>other2</lt:checkmode> -->
		</lt:liabilityType>
	</lt:liabilityTypes>
</xsl:stylesheet>
